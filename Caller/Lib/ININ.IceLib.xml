<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ININ.IceLib</name>
    </assembly>
    <members>
        <member name="T:ININ.IceLib.Internal.InternalClassOfService">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalClassOfService.eClassOfServiceGeneral">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalClassOfService.eClassOfServiceHighlyAvailable">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalClassOfService.eClassOfServiceSparselyAvailable">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalSessionType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalSessionType.eSessionTypeFullLogin">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalSessionType.eSessionTypeRestricted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalSessionType.eSessionTypeStationless">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalDeviceType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDeviceType.eDeviceTypeFirst">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDeviceType.eDeviceTypeGeneral">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDeviceType.eDeviceTypeWin32">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDeviceType.eDeviceTypePocketPC">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDeviceType.eDeviceTypeWeb">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDeviceType.eDeviceTypePhone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDeviceType.eDeviceTypeSIP">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDeviceType.eDeviceTypeLinux">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDeviceType.eDeviceTypeMac">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDeviceType.eDeviceTypeLast">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalConnectionState">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionUp">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionDownGeneral">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionDownServerDown">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionDownSessionTimeout">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionDownAdminLogout">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionDownUserDeleted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionDownStationDeleted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionDownStationDeactivated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionDownAnotherLogin">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionLost">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionDownUserLogout">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionDownSwitchover">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalToggleParams">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalToggleParams.eToggleFirst">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalToggleParams.eToggleOn">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalToggleParams.eToggleOff">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalToggleParams.eToggleLast">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalMakeCallParams">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMakeCallParams.eModeSyncCallAllocd">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMakeCallParams.eModeSyncCallStarted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMakeCallParams.eModeSyncCallCompleted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalVoicePromptType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptType.eVoicePromptTypeOutOfOffice">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptType.eVoicePromptTypeNoAnswer">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptType.eVoicePromptTypeFollowMe">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptType.eVoicePromptTypeName">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptType.eVoicePromptTypeGreeting">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptType.eVoicePromptTypeAvailableForward">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptType.eVoicePromptTypeQuickHold">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptType.eVoicePromptTypeAll">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalVoicePromptAction">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptAction.eVoicePromptActionRecord">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptAction.eVoicePromptActionCommit">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptAction.eVoicePromptActionPreview">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptAction.eVoicePromptActionClear">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptAction.eVoicePromptActionCancel">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalMediaSupport">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMediaSupport.MEDIA_NONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMediaSupport.MEDIA_CALL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMediaSupport.MEDIA_CHAT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMediaSupport.MEDIA_EMAIL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMediaSupport.MEDIA_GENERIC">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMediaSupport.MEDIA_BROWSER_SYNC">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMediaSupport.MEDIA_CALLBACK">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMediaSupport.MEDIA_DUAL_FORM">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMediaSupport.MEDIA_INSTANT_QUESTION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMediaSupport.MEDIA_SMS_MESSAGE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalThinClientVersion">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinClientVersion.eClientVersionFire">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinClientVersion.eClientVersionRed">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinClientVersion.eClientVersionVermillion">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinClientVersion.eClientVersionRum">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinClientVersion.eClientVersionCurrent">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalFileTransferPacketType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFileTransferPacketType.eFileTransferPacketData">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFileTransferPacketType.eFileTransferPacketBegin">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFileTransferPacketType.eFileTransferPacketEnd">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFileTransferPacketType.eFileTransferPacketConvertToMuLaw">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalLicenseRequestFlags">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLicenseRequestFlags.eLicenseQuery">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLicenseRequestFlags.eLicenseRequest">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLicenseRequestFlags.eLicenseReplace">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLicenseRequestFlags.eLicenseRequestReplace">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLicenseRequestFlags.eLicenseRelease">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalCallAnalysisType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCallAnalysisType.Default">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCallAnalysisType.Yes">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCallAnalysisType.No">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalReadyForCallsFlags">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalReadyForCallsFlags.ReadyForCallsNone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalReadyForCallsFlags.ReadyForCallsAfterLogin">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalReadyForCallsFlags.ReadyForCallsAfterChangeStation">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalLookupEntryType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryType.LookupEntryTypeNone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryType.LookupEntryTypeUser">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryType.LookupEntryTypeStandalonePhone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryType.LookupEntryTypeStation">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryType.LookupEntryTypeStationGroup">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryType.LookupEntryTypeAttendantProfile">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryType.LookupEntryTypeWorkgroup">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalLookupComparisonType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupComparisonType.LookupComparisonTypeNone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupComparisonType.LookupComparisonTypeExact">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupComparisonType.LookupComparisonTypeStartsWith">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupComparisonType.LookupComparisonTypeContains">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalHRESULTs">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.S_I3_TS_NONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.S_I3ERR_FILE_DOWNLOAD_COMPLETE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_UNEXPECTED_MESSAGE_FORMAT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_AUTHENTICATION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_FAIL_STATION_LOGIN">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_FAIL_STATION_LOGOUT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_SERVER_PAUSED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_INVALID_SESSION_ID">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_NOT_LOGGED_IN">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_UNKNOWN_USER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_UNKNOWN_STATION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_UNKNOWN_STATUS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_NO_LICENSE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_REMOTE_AT_LOCAL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_STATION_LOGIN_ONLY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_NO_RIGHTS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_STATION_INACTIVE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_BAD_INTERACTION_ID">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_NO_SERVER_FOUND">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_CANCELLED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_TIMEOUT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_INVALID_VERSION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_INVALID_API_VERSION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NONE_RUNNING_ASYNC">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_CALL_DOESNT_EXIST">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_QUEUE_NOT_FOUND">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_INVALID_QUEUE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_INVALID_STATION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_STATION_NOT_ACTIVE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_CONF_DOESNT_EXIST">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_CONF_NOT_EMPTY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_ACTIVE_NOT_INTERRUPTED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_INVALID_LINE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_LINE_NOT_ACTIVE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_LINE_ALREADY_USED_BY_STATION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NO_STATION_VOLUME">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NO_VOICE_RESOURCE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NO_CONF_RESOURCE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NO_IP_RESOURCE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_INVALID_CALL_STATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_INVALID_LINE_STATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_INVALID_CALL_TYPE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_TARGET_SELF">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_INVALID_STATION_STATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_INVALID_NUMBER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NO_ANSWER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NO_RINGBACK">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NO_TONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NORMAL_BUSY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NO_VM_SESSION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NO_LINES">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_STATION_NOT_REACHED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_STATION_NOT_REACHED_NO_ANSWER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_STATION_NOT_REACHED_NO_RINGBACK">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_STATION_NOT_REACHED_NO_TONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_STATION_NOT_REACHED_BUSY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_STATION_NOT_REACHED_NO_IP_RESPONSE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_STATION_NOT_REACHED_NO_LINES">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_PRIVATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NOT_PRIVATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_ALREADY_PRIVATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NOT_MUTED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_ALREADY_MUTED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_MUTE_INTERCOM">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_GENERAL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_INVALID_CLIENT_DIRECTORY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_DIRECTORY_UPDATE_FAILED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_FAILURE_READING_ENCRYPTION_KEY_FILE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_CLIENT_OUT_OF_DATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_AUTH_CONTINUE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_FILE_DOWNLOAD_PROBLEM">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_COMMUNICATION_FAILURE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_SERVER_TOO_BUSY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_ORBIT_IN_USE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.S_I3_POS_NONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_INVALID_SENDER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_MISSING_RECIPIENT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_INVALID_ATTACHMENT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_SERVER_DOWN">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_INVALID_MAILBOX">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_NETWORK_ERROR_XFER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_NOT_SUPPORTED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_UNSENT_RECIP">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_INVALID_INTERACTION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_INVALID_MSG">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_SEARCH_LIMIT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_GENERAL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.S_I3_WEBSVC_NONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_WEBSVC_GENERAL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_WEBSVC_UNKNOWN">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_FILE_NOT_FOUND">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_FAX_SERVER_DOWN">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_SESSION_REFUSED_BY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_SOCKET">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_BC_WAIT_TIMEOUT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalStatusInfoFieldsSet">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalStatusInfoFieldsSet.FIELDS_SET_NONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalStatusInfoFieldsSet.FIELDS_SET_DATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalStatusInfoFieldsSet.FIELDS_SET_TIME">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalStatusInfoFieldsSet.FIELDS_SET_NOTES">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalStatusInfoFieldsSet.FIELDS_SET_FORWARD_NUMBER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalObjectTypes">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalObjectTypes.eTHIN_MANAGER_OBJECT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalObjectTypes.eTHIN_SESSION_OBJECT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalThinManagerEventIds">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CreateSession">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DestroySession">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ConnectSession">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChangeStation">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetServerTime">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_IdentifyServer">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetClientTraceLevels">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchClientTraceLevels">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QuerySystemInfo">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QueryConnectionSupport">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChangePassword">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetServerParameters">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchServerParameters">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SendCustomNotification">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchCustomNotification">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetPasswordPolicy">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CreateProxySession">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetCurrentStatus">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetCurrentStatusAsync">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SetCurrentStatus">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetStatusMessages">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchStatusMessages">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ModifyUserWatchList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetExtraStatusData">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchExtraStatusData">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ModifyUserStatusMessagesWatchList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QueueStartWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QueueStopWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QueueChangeCols">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QueueGetContents">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ConfAddParties">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ConfDelParties">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ConfGetParties">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_InteractionStartWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_InteractionStopWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetInteractionAttributes">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SetInteractionAttributes">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_HistGetCallHistory">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_HistWatchCallHistory">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ScreenPopWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QueueSetAlerting">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchInteractionAlert">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchUserSettings">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetUserSettings">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SetUserSettings">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetProfileInfo">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SetProfileInfo">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DeleteProfileInfo">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ManageVoicePrompts">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ExecuteAction">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ExecuteActionAsync">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_MakeCall">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_MakeCallAsync">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_PlayDigits">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetStationVolume">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SetStationVolume">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CustomButtonsConfig">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CustomButtonsWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_PlayWavAudio">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_MakeStationConnection">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_MakeRemoteNumberConnection">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_StopWavAudio">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ProcessMessageLight">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetDirectoryConfig">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetDirectoryRows">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DirectoryDataSubscribe">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DirectoryUpdateContact">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchAvailableDirectories">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DirectoryDeleteContact">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DirectoryCompareKeys">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DirectoryRefreshContacts">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DirectoryUpdateContactLink">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DirectoryCreateSpeedDial">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DirectoryRenameSpeedDial">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DirectoryDeleteSpeedDial">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CreateDirectoryFilter">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EraseDirectoryFilter">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchDirectoryFilter">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetFilteredDirectoryRows">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChangeDirectoryFilterSort">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QueryStationDetails">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QueryNumberDetails">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QueryWorkgroupDetails">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchSharedAppearances">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetSharedAppearances">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QueryNumberDetails2">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DownloadComponentList">
             A request that asks the SM to blend together all of the HF manifests and compute
              a single effective manifest file that gets returned to the client.  The data should be
                [bool]  AsyncRequest - if true, the request will return a success result immediately
            				and you'll get a eThinSessionEvt_RecvComponentList event when
            				the data is ready.  If false, you'll get the standard HRESULT
            				error code.
            
              If successful HRESULT is seen, the response data is:
                [string] Manifest - the effective manifest file.
                
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DownloadComponentList2">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DownloadComponentBegin">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DownloadComponentBlock">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetUserFile">
             Get a file in the user area on the server.  The method is async, it will return immediately
              and you'll get subsequent events with the blocks of the file data. The parameters are:
            
             [string] File name.  This is the trailing part of the file name, for example
            			a value of "MySettings.xml" is fine, which will be put into your
            			user area on the server
             [DWORD RecommendBlockSize
             [DWORD] dwTransferToken - the correlation id you want to assoc with this req
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_PutUserFile">
             Put a file in the user area on the server.  You can invoke this method multiple time
              to put the file in small chunks.  I recommed putting chunks of 2048 bytes, which is what
              the standard FTP does.  I assume it's a good size :)   The parameters are:
            
             [string] File name.  This is the trailing part of the file name, for example
            			a value of "MySettings.xml" is fine, which will be put into your
            			user area on the server
             [enum FileTransferPacketType] this is a bitwise DWORD, turn on the bit for "first block"
             			and "last block" as appropriate.  Using these bits, it's easy to send the
             			file in whatever chunk size you like
             [DWORD] Size of data block.
             [BYTE*] the actual data BYTEs.
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchMessageLightEvents">
             Turn on or off the watch for MWI events
            
             [bool] On
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetVoiceMessageList">
            Request to get the list of voice mails from the user's inbox.
             the response does not contain the data, this request is async.
             When the data is ready you'll get an eThinSessionEvt_VoiceMessageList
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_VoiceMessagePlay">
             Request to play a given voice message to the station handset.  A request
              will first stop any existing message that's playing.
            
             [string] Message Id
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_VoiceMessageStop">
             Request to stop playing any voice mail message that is currently playing
            
             [string] Message Id
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_VoiceMessageDelete">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_VoiceMessageDownload">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetUMMessageList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_UMMessageDownload">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_UMMessageDelete">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_LicenseOperation">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchLicenseEvents">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EfaqQuery">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EfaqMarkUsed">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EfaqGetFaqs">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GroupStatsQuery">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GroupStatsStop">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AgentStatsQuery">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AgentStatsStop">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AgentActivateSelf">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AgentActivationQuery">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AgentActivationWatchGroups">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AgentActivationWatchAgents">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FaxSubmit">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FaxMonitor">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FaxQueryUserConfig">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FaxUpdateUserConfig">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FaxGetServerSettings">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_I3DBTranExecTran">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GenericObjectCreate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetAdHocReportingConfig">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChatSendText">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChatSendURL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChatSendFile">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChatGetHistory">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChatGetMembers">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChatCreate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChatModifyMembers">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChatSetTypingIndicator">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChatModifyUsers">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EmailResolveName">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EmailSend">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EmailGetResponse">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EmailSetResponse">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EmailDownloadAttachment">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EmailUploadAttachment">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EmailRemoveAttachment">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AgentHelpResponse">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CallbackAttempt">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CallbackCompletion">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CallbackPhoneChange">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_RespMgmtGetData">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_RespMgmtSaveUserData">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_RespMgmtWatchChanges">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CreateSidebarChat">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_TrackerDirectoryCreate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_TrackerDirectoryDelete">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_TrackerDirectoryModify">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_TrackerMetaDataWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_TrackerViewLoad">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SessionWatchUser">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SessionWatchStation">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SessionWatchMachine">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchUserEntries">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetUserEntries">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SetReadyToTakeCalls">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetLookupEntries">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalThinSessionEventIds">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RequestKeepAlivePings">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_SessionForceLogout">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_NewICServer">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_GeneralMessage">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_NewClientTraceLevel">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_GeneralMessageDelete">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_CommunicationFailure">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ServerParametersChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_CustomNotificationReceived">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_StatusMessageListChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_StatusChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_NewExtraStatusData">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_UsersStatusMessageListChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_QueueAttributesChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_QueueItemRemoved">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_QueueItemAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_QueueLostRights">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_QueueConferenceItemUpdated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_QueueConferenceItemRemoved">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_QueueConferenceItemAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_InteractionUpdated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_InteractionDeallocated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_InteractionLostRights">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_InteractionConsultMorphed">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_InteractionAutoAnswer">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_HistNewCallHistoryItem">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ScreenPop">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_InteractionAlert">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_UserSettingsChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_VoicePromptsResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ExecuteAsyncResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_MakeCallResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_CustomButtonDefs">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_MakeStationConnectionResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_MakeRemoteNumberConnectionResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_PlayWavAudioResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DirectoryRowsAvailable">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DirectoryContactsAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DirectoryContactsRemoved">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DirectoryContactsChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DirectoryAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DirectoryChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DirectoryRemoved">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinManagerEvt_DirectoryFilterCreated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinManagerEvt_FilteredContactAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinManagerEvt_FilteredContactUpdated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinManagerEvt_FilteredContactDeleted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_SharedAppearancesChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_WorkgroupDetailsChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RecvComponentList">
            Fired in response to a eThinManagerReq_DownloadComponentList request when in 
             async mode and the list is computed.  The payload data is a standard HRESULT
             followed by a string description for failure codes and a zero or one xml manifest
             files for success codes.
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RecvComponentList2">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_UserFileUpdated">
            Fired in when a user file is updated with the PutUserFile api
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_MessageLightEvent">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_VoiceMessageList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_VoiceMessagePlayResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_VoiceMessageDownloadResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_UMMessageList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_LicenseEvent">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_GroupStats">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AgentStats">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AgentActivated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AgentActivateResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_FaxSubmitResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_FaxMonitorUpdate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ChatNewText">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ChatNewURL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ChatNewFile">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ChatHistoryResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ChatSendFileResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ChatGetMembersResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ChatPartyAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ChatPartyRemoved">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ChatTypingIndicator">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ChatModifyMembersResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_EmailResolveResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_EmailSendResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_EmailResponseUpdated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_EmailSetResponseResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_EmailDownloadAttachmentResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_EmailUploadAttachmentResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_EmailRemoveAttachmentResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AgentHelpRequest">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AgentHelpSupvResponse">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RxDataUpdated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_UserEntryModified">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_TrackerMetaDataUpdated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_UserSessionChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_GlobalUserStatusChange">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_GlobalGroupStats">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_UserPasswordExpired">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_UserPasswordEnteredNagPeriod">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalInteractionCapability">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_NONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_CONSULT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_DISCONNECT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_HOLD">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_LISTEN">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_MESSAGING">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_MUTE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_PARK">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_PAUSE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_PICKUP">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_PRIVATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_RECORD">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_REQUEST_HELP">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_TRANSFER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_JOIN">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_OBJECTWINDOW">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_CONFERENCEABLE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_COACHING">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalStationType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalStationType.eStationTypeUnknown">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalStationType.eStationTypeLocal">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalStationType.eStationTypeRemote">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalStationType.eStationTypeSIP">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalStationType.eStationTypeTAPI">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalDirectoryDisplayType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryDisplayType.eDirectoryDisplayList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryDisplayType.eDirectoryDisplayFilter">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryDisplayType.eDirectoryDisplaySpeed">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryDisplayType.eDirectoryDisplayTracker">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalDirectoryAccessType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryAccessType.eDirectoryAccessNone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryAccessType.eDirectoryAccessRead">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryAccessType.eDirectoryAccessInsert">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryAccessType.eDirectoryAccessUpdate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryAccessType.eDirectoryAccessDelete">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryAccessType.eDirectoryAccessRename">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryAccessType.eDirectoryAccessPrimaryNo">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalDirectoryCategoryType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryCategoryType.eDirectoryCategoryCompany">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryCategoryType.eDirectoryCategoryWorkgroup">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryCategoryType.eDirectoryCategoryGeneral">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryCategoryType.eDirectoryCategoryStationGroup">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryCategoryType.eDirectoryCategorySpeedDial">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryCategoryType.eDirectoryCategoryGroupAndProfile">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryCategoryType.eDirectoryCategoryTracker">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalDirectoryResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryResult.eDirectoryResultFailure">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryResult.eDirectoryResultData">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryResult.eDirectoryResultHash">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryResult.eDirectoryResultBounds">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalDirectoryField">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_NONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD__FIRST">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_FIRSTNAME">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_LASTNAME">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_EXT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_USERID">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_DEPT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_COMPANY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_TITLE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_BUS_ADDRESS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_BUS_CITY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_BUS_STATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_BUS_ZIP">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_BUS_COUNTRY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_BUS_EMAIL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_ASSISTANT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_HOME_COUNTRY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_HOME_EMAIL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_BUS_PHONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_BUS_PHONE2">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_HOME_PHONE2">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_MOBILE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_FAX">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_PAGER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_ASSISTANT_PHONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_URL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_PRIMARY_NO">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_NOTES">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_DISPLAY_NAME">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_HOME_ADDRESS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_HOME_CITY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_HOME_STATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_HOME_ZIP">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_HOME_PHONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_VOICEMAIL_LOC">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_WORKGROUPS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_ACCESS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_OWNER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_ALIAS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_STATUS_URI">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_INDEX">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_CONTACT_TYPE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD__LAST">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_ALL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalUserEntryField">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD_NONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD__FIRST">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD_DISPLAY_NAME">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD_COMPANY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD_DEPT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD_EXT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD_HOME_SITE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD_USERID">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD_DOMAIN_USER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD__LAST">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD_ALL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalLookupEntryField">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_NONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD__FIRST">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_FIRST_NAME">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_LAST_NAME">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_EXT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_USERID">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_DEPARTMENT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_DISPLAY_NAME">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_STATUS_URI">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_CONTACT_TYPE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_MATCH_TYPE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD__LAST">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_ALL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalSensitivity">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalSensitivity.eSensitivityUnknown">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalSensitivity.eSensitivityNone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalSensitivity.eSensitivityPersonal">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalSensitivity.eSensitivityPrivate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalSensitivity.eSensitivityConfidential">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalSensitivity.eSensitivityAny">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalImportance">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalImportance.eImportanceUnknown">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalImportance.eImportanceNormal">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalImportance.eImportanceLow">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalImportance.eImportanceHigh">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalImportance.eImportanceAny">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalCustomButtonAvailability">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCustomButtonAvailability.eAvailabilityAlways">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCustomButtonAvailability.eAvailabilityWithInteraction">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCustomButtonAvailability.eAvailabilityWithActiveInteraction">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalCustomButtonActionType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCustomButtonActionType.eActionTypeHandler">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCustomButtonActionType.eActionTypeLaunchApp">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalFaxStatus">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFaxStatus.eFaxStatusInvalid">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFaxStatus.eFaxStatusHolding">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFaxStatus.eFaxStatusQueuedForSend">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFaxStatus.eFaxStatusConnecting">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFaxStatus.eFaxStatusTransmitting">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFaxStatus.eFaxStatusSuccessful">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFaxStatus.eFaxStatusFailed">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalAppendMode">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalAppendMode.Replace">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalAppendMode.Append">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalAppendMode.AppendWithSeparator">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Tracing">
            <summary>
            Contains support for tracing into the Interactive Intelligence log file.
            </summary>
            <remarks>
            All entries logged with this mechanism will be under the topic "Icelib_Tracing" in the log file
            associated with the running application that is using IceLib.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracing.TraceError(System.String)">
            <summary>
            Traces an error level message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:ININ.IceLib.Tracing.TraceWarning(System.String)">
            <summary>
            Traces a warning level message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:ININ.IceLib.Tracing.TraceStatus(System.String)">
            <summary>
            Traces a status level message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:ININ.IceLib.Tracing.TraceNote(System.String)">
            <summary>
            Traces a note level message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:ININ.IceLib.Tracing.TraceVerbose(System.String)">
            <summary>
            Traces a verbose level message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:ININ.IceLib.Tracing.TraceAlways(System.String)">
            <summary>
            Traces a message always, regardless of the trace level.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:ININ.IceLib.Tracing.TraceException(System.Exception,System.String)">
            <summary>
            Traces an exception and message.
            </summary>
            <param name="exception">The exception.</param>
            <param name="message">The message.</param>
        </member>
        <member name="T:ININ.IceLib.Internal.InstanceId">
            <summary>
            Support for TraceContext.InstanceId.
            </summary>
            <example>
            <code lang="C#">
            public class Foo
            {
                // To support InstanceId tracing.
                private InstanceId _InstanceId = new InstanceId();
            
                public void Bar(int x, string y)
                {
                    TraceTopics.Interactions.error("InstanceId={} x={} y={}", _InstanceId, x, y);
                    ...
                }
            }
            </code>
            </example>
        </member>
        <member name="M:ININ.IceLib.Internal.InstanceId.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.InstanceId"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.InstanceId.op_Implicit(ININ.IceLib.Internal.InstanceId)~System.UInt64">
            <summary>
            Performs an implicit conversion from <see cref="T:ININ.IceLib.Internal.InstanceId"/> to <see cref="T:System.UInt64"/>.
            </summary>
            <param name="instanceId">The instance ID.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.InstanceId.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Internal.InstanceId.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:ININ.IceLib.Internal.DnsHelper.GetFQDNListFromHostName(System.String)">
            <summary>
            Converts a host name into a collection of fully-qualifed domain names (FQDN).
            </summary>
            <param name="hostName">The host name.</param>
            <returns>The fully-qualified domain name collection.</returns>
            <remarks>When <paramref name="hostName"/> refers to a DNS A record, then it can resolve to multiple hosts.</remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.DnsHelper.GetFQDNFromIPAddress(System.String)">
            <summary>
            Converts an IP address (xxx.xxx.xxx.xxx) into a fully-qualified domain name (FQDN).
            </summary>
            <param name="strIPAddress">The IP address.</param>
            <returns>The fully-qualified domain name.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.DnsHelper.GetRDNFromHostName(System.String)">
            <summary>
            Gets the relative distinguished name (RDN) from host.
            </summary>
            <param name="hostName">The host name.</param>
            <returns>The relative distinguished name (RDN).</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.DnsHelper.IsValidIPAddress(System.String)">
            <summary>
            Determines if a string is a valid IP address (xxx.xxx.xxx.xxx).
            </summary>
            <param name="ipAddress">The string to verify if it is a valid IP address.</param>
            <returns>True if valid, false otherwise.</returns>
        </member>
        <member name="T:ININ.IceLib.Localization">
            <summary>
            Helper class for accessing string from resource files.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Internal.CommonResourceStrings">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Internal.CommonResourceStrings.ObjectAlreadyWatched">
            <summary>An object is already being watched.</summary>
        </member>
        <member name="M:ININ.IceLib.Internal.CommonResourceStrings.ObjectNotWatched">
            <summary>An object is not being watched.</summary>
        </member>
        <member name="M:ININ.IceLib.Internal.CommonResourceStrings.InvalidArrayArgumentElement">
            <summary>An element of the array argument was invalid.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.IntermediateWaitState">
            <exclude/><summary>For internal use only.</summary>
            <remarks>
            Provides support for implementing asynchronous methods throughout IceLib.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.IntermediateWaitState.#ctor(System.AsyncCallback,System.Object)">
            <summary>
            
            </summary>
            <param name="callback">An asynchronous callback, to be called when the operation is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous request from other requests.</param>
        </member>
        <member name="M:ININ.IceLib.Internal.IntermediateWaitState.SignalCompletion">
            <Summary>
            Helper method to signal completion of an Asynchronous action.
            </Summary>
        </member>
        <member name="M:ININ.IceLib.Internal.IntermediateWaitState.WaitForCompletion">
            <Summary>
            Helper method to wait for completion of an Asynchronous action.
            </Summary>
        </member>
        <member name="P:ININ.IceLib.Internal.IntermediateWaitState.ExceptionToThrow">
            <summary>
            Gets or sets the exception to throw when .
            </summary>
            <value>The exception to throw.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.IntermediateWaitState.AsyncState">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Internal.IntermediateWaitState.AsyncWaitHandle">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Internal.IntermediateWaitState.CompletedSynchronously">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Internal.IntermediateWaitState.IsCompleted">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Internal.IntermediateWaitState.Callback">
            <summary>
            Gets the callback method to be called when the asynchronous operation is completed.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Internal.IntermediateWaitState.State">
            <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Internal.IntermediateWaitState.Event">
            <summary>
            Gets a WaitHandle that is used to wait for an asynchronous operation to complete.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Internal.IntermediateWaitState.IntermediateResult">
            <summary>
            Gets or sets an IAsyncResult for an intermediate operation.
            </summary>
            <remarks>
            This can be used to store the results from an asynchronous operation that is used to implement the main asynchronous operation in question.
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Internal.AsyncTaskState">
            <exclude/>
            <summary>
            Tracks the state of an async operation.
            </summary>
            <remarks>
            <para>A specialization should be implemented that tracks any input or output values for the specific
            asynchronous operation in question.</para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskState.#ctor(System.Int64,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.AsyncTaskState"/> class with a unique task ID.
            </summary>
            <param name="taskId">The task ID.</param>
            <param name="userState">State of the user.</param>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskState.TaskId">
            <summary>
            Gets the task ID.
            </summary>
            <value>The task ID.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskState.UserState">
            <summary>
            Gets the user state.
            </summary>
            <value>The user state.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskState.Exception">
            <summary>
            Gets or sets the exception.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskState.Cancelled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ININ.IceLib.Internal.AsyncTaskState"/> is cancelled.
            </summary>
            <value><c>true</c> if cancelled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:ININ.IceLib.Internal.UniqueId">
            <exclude/>
            <summary>
            Helper class to create a unique positive ID, with thread safety.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Internal.UniqueId.Next">
            <summary>
            Creates an ID for use in identifying an async operation.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Internal.AsyncTaskTracker`1">
            <exclude/>
            <summary>
            Tracks asynchronous tasks, ensuring that implementation callbacks are called on the proper thread.
            </summary>
            <typeparam name="TAsyncTaskState">A specialized asyncTaskState that tracks input, progress, and results for the async operation.</typeparam>
            <remarks>
            Please refer to the MSDN documentation on "Best Practices for Implementing the Event-based Asynchronous Pattern" for the required behavior of your implementation of this pattern.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.AsyncTaskTracker`1"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.AsyncTaskTracker`1"/> class, with no callbacks.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.#ctor(ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.AsyncTaskTracker`1"/> class, with some callbacks.
            </summary>
            <param name="performTaskCallback">The do work callback (called on an arbitrary thread).</param>
            <param name="completedCallback">The completion callback (called on the UI thread).</param>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.#ctor(ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.AsyncTaskTracker`1"/> class, with all callbacks.
            </summary>
            <param name="performTaskCallback">The perform task callback (called on an arbitrary thread).</param>
            <param name="completedCallback">The completed callback (called on the UI thread).</param>
            <param name="progressChangedCallback">The progress changed callback (called on the UI thread).</param>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.CreateTaskId">
            <summary>
            Creates an ID for use in identifying an async operation.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.PerformTask(`0)">
            <overloads>
            Performs a task.
            </overloads>
            <summary>
            Performs a task, with no callbacks.
            </summary>
            <param name="asyncTaskState">State of the async operation.</param>
            <remarks>
            <para>This registers the task (by <c>asyncTaskState.TaskId</c>), initiates performance of the task on a
            separate thread, then returns.</para>
            <para>The <c>performTaskCallback</c> will be executed on an <b>aribitrary thread</b>.  If this throws an exception, it will be caught and placed into the <c>asyncTaskState</c> automatically.</para>
            <para>Once the operation completes, the <c>completedCallback</c> will be executed automatically on the <b>UI thread</b> (unless the task has been cancelled via a call to <see cref="M:ININ.IceLib.Internal.AsyncTaskTracker`1.CancelTask(System.Int64)"/>).</para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.PerformTask(`0,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate)">
            <summary>
            Performs a task, with all callbacks.
            </summary>
            <param name="asyncTaskState">State of the async operation.</param>
            <param name="performTaskCallback">The perform task callback (called on an arbitrary thread).</param>
            <param name="completedCallback">The completed callback (called on the UI thread).</param>
            <remarks>
            <para>This registers the task (by <c>asyncTaskState.TaskId</c>), initiates performance of the task on a
            separate thread, then returns.</para>
            <para>The <c>performTaskCallback</c> will be executed on an <b>aribitrary thread</b>.  If this throws an exception, it will be caught and placed into the <c>asyncTaskState</c> automatically.</para>
            <para>Once the operation completes, the <c>completedCallback</c> will be executed automatically on the <b>UI thread</b> (unless the task has been cancelled via a call to <see cref="M:ININ.IceLib.Internal.AsyncTaskTracker`1.CancelTask(System.Int64)"/>).</para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.PerformTask(`0,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate)">
            <summary>
            Performs a task, with some callbacks.
            </summary>
            <param name="asyncTaskState">State of the async operation.</param>
            <param name="performTaskCallback">The perform task callback (called on an arbitrary thread).</param>
            <param name="completedCallback">The completed callback (called on the UI thread).</param>
            <param name="progressChangedCallback">The progress changed callback (called on the UI thread).</param>
            <remarks>
            <para>This registers the task (by <c>asyncTaskState.TaskId</c>), initiates performance of the task on a
            separate thread, then returns.</para>
            <para>The <c>performTaskCallback</c> will be executed on an <b>aribitrary thread</b>.  If this throws an exception, it will be caught and placed into the <c>asyncTaskState</c> automatically.</para>
            <para>Once the operation completes, the <c>completedCallback</c> will be executed automatically on the <b>UI thread</b> (unless the task has been cancelled via a call to <see cref="M:ININ.IceLib.Internal.AsyncTaskTracker`1.CancelTask(System.Int64)"/>).</para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.CancelTask(System.Int64)">
            <summary>
            Cancels a task.
            </summary>
            <param name="taskId">The task ID.</param>
            <remarks>
            <para>Once the operation is cancelled, the <c>completedCallback</c> will be executed automatically on the <b>UI thread</b>.  The <c>completedCallback</c> will not subsequently be called when the <c>performTaskCallback</c> completes.</para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.UpdateProgress(`0)">
            <summary>
            Updates the progress.
            </summary>
            <param name="asyncTaskState">State of the async operation.</param>
            <para>Causes the <c>progressChangedCallback</c> will be executed automatically on the <b>UI thread</b>.</para>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.IsTaskActive(System.Int64)">
            <summary>
            Determines whether a particular task is active.
            </summary>
            <param name="taskId">The task ID.</param>
            <returns>
            	<c>true</c> if the task is active; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskTracker`1.IsBusy">
            <summary>
            Gets a value indicating whether a task is active.
            </summary>
            <value><c>true</c> if this instance is busy; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTaskDelegate">
            <summary>
            Represents an implementation handling a particular stage of an asynchronous task.
            </summary>
            <param name="asyncTaskState">State of the async task.</param>
        </member>
        <member name="T:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask">
            <summary>
            Represents a tracked Async task.
            </summary>
            <remarks>This class is immutable.</remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask.#ctor(`0)">
            <overloads>Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask"/> class, with no callbacks.
            </summary>
            <param name="asyncTaskState">State of the async task.</param>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask.#ctor(`0,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask"/> class, with some callbacks.
            </summary>
            <param name="asyncTaskState">State of the async task.</param>
            <param name="asyncPerformTaskCallback">The async perform task callback.</param>
            <param name="asyncCompletedCallback">The async completed callback.</param>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask.#ctor(`0,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask"/> class, with all callbacks.
            </summary>
            <param name="asyncTaskState">State of the async task.</param>
            <param name="asyncPerformTaskCallback">The async perform task callback.</param>
            <param name="asyncCompletedCallback">The async completed callback.</param>
            <param name="asyncProgressChangedCallback">The async progress changed callback.</param>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask.AsyncTaskState">
            <summary>
            Gets the state of the async task.
            </summary>
            <value>The state of the async task.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask.TaskId">
            <summary>
            Gets the task ID.
            </summary>
            <value>The task ID.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask.AsyncOperation">
            <summary>
            Gets the async operation.
            </summary>
            <value>The async operation.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask.AsyncPerformTaskCallback">
            <summary>
            Gets the async perform task callback.
            </summary>
            <value>The async perform task callback.</value>
            <remarks>
            These might not be set, depending on whether the use case is to have:<br />
            - a single set of callbacks for the whole tracker, or,<br />
            - a set of callbacks for each PerformTask invocation.
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask.AsyncCompletedCallback">
            <summary>
            Gets the async completed callback.
            </summary>
            <value>The async completed callback.</value>
            <remarks>
            These might not be set, depending on whether the use case is to have:<br />
            - a single set of callbacks for the whole tracker, or,<br />
            - a set of callbacks for each PerformTask invocation.
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask.AsyncProgressChangedCallback">
            <summary>
            Gets the async progress changed callback.
            </summary>
            <value>The async progress changed callback.</value>
            <remarks>
            These might not be set, depending on whether the use case is to have:<br />
            - a single set of callbacks for the whole tracker, or,<br />
            - a set of callbacks for each PerformTask invocation.
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Connection.AuthSettings">
            <summary>
            Passed to a Session in order to authenticate a user.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.AuthSettings"/> object serves as a base class
            for objects that specify user authentication settings.
            </para>
            <example>
            <code escaped="false" lang="C#">
            // This default constructor uses the current windows user's domain and username.
            WindowsAuthSettings authSettings = new WindowsAuthSettings();
            Session session = new Session();
            session.Connect(..., authSettings, ...);
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.AuthSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.AuthSettings"/> class with default settings.
            </summary>
            <remarks>
            This constructor is called by derived class constructors to initialize state in this type.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.AuthSettings.Clone">
            <summary>
            Returns an exact copy of this <strong>AuthSettings</strong> object.
            </summary>
            <returns>A new AuthSettings object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.AuthSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Set the name-value pairs that should be passed.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns><c>true</c> if successful.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.AuthSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String},System.String[])">
            <summary>
            Set the name-value pairs that should be passed.
            </summary>
            <param name="parameters">The parameter data into which we set our values.</param>
            <param name="challenge">A string array that contains the server's challenge string from a previous SetParmeters call.</param>
            <returns><c>true</c> if successful.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.AuthSettings.Dispose">
            <overloads>
            Releases all resources used by the AuthSettings.
            </overloads>
            <summary>
            Releases all resources used by the AuthSettings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.AuthSettings.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the AuthSettings and optionally releases the managed resources.
            </summary>
            <param name="disposing">Indicates whether the control is in the process of being disposed of.</param>
        </member>
        <member name="T:ININ.IceLib.Connection.RestrictedAuthSettings">
            <summary>
            Passed to a Session in order to authenticate a restricted user.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.RestrictedAuthSettings"/> object is used to specify
            restricted user authentication settings.  This is used when a minimal Session is needed,
            perhaps to get the server time offset, but it is rarely used.  In the future, it could
            be used by extended Session functionality.
            </para>
            <example>
            <code escaped="false" lang="C#">
            // No username or password is required for these restricted sessions.
            RestrictedAuthSettings authSettings = new RestrictedAuthSettings();
            Session session = new Session();
            session.Connect(..., authSettings, ...);
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.RestrictedAuthSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RestrictedAuthSettings"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RestrictedAuthSettings"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.RestrictedAuthSettings.Clone">
            <summary>
            Returns an exact copy of this <strong>RestrictedAuthSettings</strong> object.
            </summary>
            <returns>A new RestrictedAuthSettings object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.RestrictedAuthSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.RestrictedAuthSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="T:ININ.IceLib.Connection.ICAuthSettings">
            <summary>
            Passed to a Session in order to authenticate an Interaction Center user.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.ICAuthSettings"/> object is used to specify
            Interaction Center user authentication settings.  This is used when an IC username and
            password should be used to authenticate the user requesting a Session.
            </para><br/>
            <example>
            <code escaped="false" lang="C#">
            ICAuthSettings authSettings = new ICAuthSettings("My_IC_UserID", "My_IC_Password");
            Session session = new Session();
            session.Connect(..., authSettings, ...);
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.ICAuthSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.ICAuthSettings"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.ICAuthSettings"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.ICAuthSettings.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.ICAuthSettings"/> class with user settings.
            </summary>
            <param name="userName">The Interaction Center user name.</param>
            <param name="password">The Interaction Center password.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.ICAuthSettings.Clone">
            <summary>
            Returns an exact copy of this <strong>ICAuthSettings</strong> object.
            </summary>
            <returns>A new ICAuthSettings object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.ICAuthSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.ICAuthSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.ICAuthSettings.UserName">
            <summary>
            Gets or sets the Interaction Center userName.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.ICAuthSettings.Password">
            <summary>
            Sets the Interaction Center password.
            </summary>
            <value>The password.</value>
            <remarks>Note: There is intentionally no public getter for this property.</remarks>
        </member>
        <member name="T:ININ.IceLib.Connection.WindowsAuthProtocols">
            <summary>
            Specifies constants indicating authentication protocols.
            </summary>
            <remarks>
            This enumeration is used by <see cref="T:ININ.IceLib.Connection.WindowsAuthSettings"/> to
            specify what protocols to attempt when connecting.
            </remarks>
        </member>
        <member name="F:ININ.IceLib.Connection.WindowsAuthProtocols.None">
            <summary>No protocols.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.WindowsAuthProtocols.Ntlm">
            <summary>The NTLM protocol (also known as Lanmanager Protocol).</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.WindowsAuthProtocols.Kerberos">
            <summary>The Kerberos protocol.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.WindowsAuthProtocols.All">
            <summary>All known protocols.</summary>
        </member>
        <member name="T:ININ.IceLib.Connection.WindowsAuthSettings">
            <summary>
            Passed to a Session in order to authenticate a Windows user.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.WindowsAuthSettings"/> object is used to specify
            Windows user authentication settings.  This is used when Windows user credentials should
            be used to authenticate the user requesting a Session.
            </para><br/>
            <example>
            <code escaped="false" lang="C#">
            // This default constructor uses the current windows user's domain and username.
            WindowsAuthSettings authSettings = new WindowsAuthSettings();
            Session session = new Session();
            session.Connect(..., authSettings, ...);
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.WindowsAuthSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.WindowsAuthSettings"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.WindowsAuthSettings"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.WindowsAuthSettings.#ctor(ININ.IceLib.Connection.WindowsAuthProtocols)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.WindowsAuthSettings"/> class, designating
            which protocols should be used.
            </summary>
            <param name="protocolFlags">Flags to indicate which protocols should be used.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified protocols is not from the <see cref="T:ININ.IceLib.Connection.WindowsAuthProtocols"/> enumeration.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.WindowsAuthSettings.Clone">
            <summary>
            Returns an exact copy of this <strong>WindowsAuthSettings</strong> object.
            </summary>
            <returns>A new WindowsAuthSettings object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.WindowsAuthSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.WindowsAuthSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.WindowsAuthSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String},System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.WindowsAuthSettings.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.WindowsAuthSettings.UserName">
            <summary>
            Gets Windows userName.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Connection.WindowsAuthSettings.ProtocolFlags">
            <summary>
            Gets or sets the protocol flags.
            </summary>
            <value>The protocol flags.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified protocols is not from the <see cref="T:ININ.IceLib.Connection.WindowsAuthProtocols"/> enumeration.</exception>
        </member>
        <member name="T:ININ.IceLib.Connection.HostEndpoint">
            <summary>
            Represents an endpoint for BridgeHost connections.
            </summary>
            <remarks>
            <para>
            This is used by the <see cref="T:ININ.IceLib.Connection.HostSettings"/> class to
            specify an endpoint (i.e. BridgeHost) for the Session to use when attempting a connection.
            </para><br/>
            <note>
            <B>BridgeHost</B> is the connector between thin clients and the Session Manager. It translates 
            network protocols, socket-level security checking, and other tasks during a thin 
            client-to-Session Manager exchange.
            </note>
            <br/>
            <example>
            <code escaped="false" lang="C#">
            HostEndpoint hostEndpoint = new HostEndpoint("MyBridgeHostServer");
            HostSettings hostSettings = new HostSettings(hostEndpoint);
            Session session = new Session();
            session.Connect(..., hostSettings, ...);
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="F:ININ.IceLib.Connection.HostEndpoint.DefaultPort">
            <summary>
            Represents the default Port. This field is read-only.
            </summary>
            <remarks>
            If the <see cref="P:ININ.IceLib.Connection.HostEndpoint.Port"/> property is set to this value, then the default BridgeHost port will be used.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.HostEndpoint.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.HostEndpoint"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.HostEndpoint"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.HostEndpoint.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.HostEndpoint"/> class with the specified host.
            </summary>
            <remarks>
            The host will attempt to be parsed for the [host]:[port] format. The port will default to <see cref="F:ININ.IceLib.Connection.HostEndpoint.DefaultPort"/> if not set.
            </remarks>
            <param name="host">The host to connect to.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.HostEndpoint.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.HostEndpoint"/> class with the specified host and port.
            </summary>
            <remarks>
            The host will attempt to be parsed for the [host]:[port] format. If the port is not found in this format, it will be set by the port parameter.
            </remarks>
            <param name="host">The host to connect to.</param>
            <param name="port">The port to connect with.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.HostEndpoint.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.HostEndpoint"/> class.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <param name="resolveToSelf">if set to <c>true</c>, resolve to self.</param>
            <remarks>
            This private constructor is to allow <see cref="P:ININ.IceLib.Connection.HostEndpoint.ResolvedEndpoints"/>
            to optimize how many unique instances of HostEndpoint it must create.
            </remarks>
        </member>
        <member name="F:ININ.IceLib.Connection.HostEndpoint.DefaultHost">
            <summary>
            Represents the default Host. This field is read-only.
            </summary>
            <remarks>
            <para>If the <see cref="P:ININ.IceLib.Connection.HostEndpoint.Host"/> property is set to this value, then the default BridgeHost host will be used.</para>
            <para>Retrieves the default host server stored in the registry. It will first look in HKEY_CURRENT_USER\Software\Interactive Intelligence\EIC\BridgeHost in the default key. Then if that is blank it will look in the same place under HKEY_LOCAL_MACHINE. Finally, if that is also blank, it defaults to <i>i3ClientSrv</i>. It is recommened that sites create a DNS alias to their BridgeHost server with that name.</para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.HostEndpoint.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.HostEndpoint.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.HostEndpoint.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.HostEndpoint.Clone">
            <summary>
            Returns an exact copy of this <b>HostEndpoint</b> object.
            </summary>
            <returns>A new HostEndpoint object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.HostEndpoint.SetHost(System.String)">
            <summary>
            Parses the specified host to set both the host and port (if specified)
            </summary>
            <param name="host">The host value to parse.</param>
        </member>
        <member name="P:ININ.IceLib.Connection.HostEndpoint.Host">
            <summary>
            Gets or sets the Host.
            </summary>
            <value>The host.</value>
            <remarks>
            This property specifies the host to connect to. The default is <see cref="F:ININ.IceLib.Connection.HostEndpoint.DefaultHost"/>.
            Setting this property will attempt to parsed for the [host]:[port] format. If the port is not specified in this format, it remains unchanged from what it was previously.
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Connection.HostEndpoint.Port">
            <summary>
            Gets or sets the Port.
            </summary>
            <value>The port.</value>
            <remarks>
            The default is <see cref="F:ININ.IceLib.Connection.HostEndpoint.DefaultPort"/>.
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Connection.HostSettings">
            <summary>
            Passed to a Session in order to specify a host.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.HostSettings"/> object is used to specify
            a <see cref="T:ININ.IceLib.Connection.HostEndpoint"/> (i.e. BridgeHost) for the Session to use when attempting a connection.
            </para><br/>
            <note>
            The <B>Session Manager</B> server subsystem holds user login data 
            and performs all IC-related tasks on behalf of thin clients. For example, 
            when a thin client wants to disconnect a call, the request is sent to the 
            Session Manager, and the Session Manager performs the command.<br/><br/>
            <B>BridgeHost</B>, or "IP Bridge Host" if you prefer, is the connector between 
            the thin clients and the Session Manager. It translates network protocols, 
            socket-level security checking, and other tasks during a thin client-to-Session Manager exchange.
            </note>
            <br/>
            <example>
            <code escaped="false" lang="C#">
            HostEndpoint hostEndpoint = new HostEndpoint("MyBridgeHostServer");
            HostSettings hostSettings = new HostSettings(hostEndpoint);
            Session session = new Session();
            session.Connect(..., hostSettings, ...);
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.HostSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.HostSettings"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.HostSettings"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.HostSettings.#ctor(ININ.IceLib.Connection.HostEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.HostSettings"/> class with the specified host.
            </summary>
            <param name="hostEndpoint">The host to connect to.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.HostSettings.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <exclude/><summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.HostSettings"/> class given a parameters dictionary.
            </summary>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.HostSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <exclude/><summary>
            Set the name-value pairs that should be passed.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns><c>true</c> if successful.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.HostSettings.Clone">
            <summary>
            Returns an exact copy of this <b>HostSettings</b> object.
            </summary>
            <returns>A new HostSettings object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.HostSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.HostSettings.HostEndpoint">
            <summary>
            Gets or sets the HostEndpoint.
            </summary>
            <value>The host endpoint.</value>
            <remarks>
            This property specifies the HostEndpoint to connect to.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The value being set is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:ININ.IceLib.Connection.HostEndpointCache.Cryptor">
            <summary>
            Helps with getting encryption for the files we stream
            
            When encrypting this will always return a random key.
            This key needs to be supplied when decrypting.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Connection.ClassOfService">
            <summary>
            Specifies constants indicating what class of service a session supports.
            </summary>
            <remarks>
            This enumeration is used by <see cref="T:ININ.IceLib.Connection.SessionSettings"/> to specify what class of service a session supports.
            </remarks>
            <example>
            The following example demonstrates creation of a SessionSettings object.
            <code lang="C#">
            using ININ.IceLib.Connection;
            
            SessionSettings sessionSettings = new SessionSettings();
            sessionSettings.ClassOfService = DeviceType.SparselyAvailable;
            </code>
            </example>
        </member>
        <member name="F:ININ.IceLib.Connection.ClassOfService.HighlyAvailable">
            <summary>The session connection is highly available.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ClassOfService.General">
            <summary>The session connection has general availability.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ClassOfService.SparselyAvailable">
            <summary>The session connection is sparsely available.</summary>
        </member>
        <member name="T:ININ.IceLib.Connection.DeviceType">
            <summary>
            Specifies constants indicating what type of device is establishing a session.
            </summary>
            <remarks>
            This enumeration is used by <see cref="T:ININ.IceLib.Connection.SessionSettings"/> to specify what type of device is establishing a session.
            </remarks>
            <example>
            The following example demonstrates creation of a SessionSettings object.
            <code lang="C#">
            using ININ.IceLib.Connection;
            
            SessionSettings sessionSettings = new SessionSettings();
            sessionSettings.DeviceType = DeviceType.Web;
            </code>
            </example>
        </member>
        <member name="F:ININ.IceLib.Connection.DeviceType.General">
            <summary>The device details cannot be identified.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.DeviceType.Win32">
            <summary>The device is using Win32.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.DeviceType.PocketPC">
            <summary>The device is using PocketPC.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.DeviceType.Web">
            <summary>The device is a web page.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.DeviceType.Phone">
            <summary>The device is a phone interface.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.DeviceType.Sip">
            <summary>The device is a Sip phone interface.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.DeviceType.Linux">
            <summary>The device is using Linux.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.DeviceType.Mac">
            <summary>The device is a Mac.</summary>
        </member>
        <member name="T:ININ.IceLib.Connection.SessionSettings">
            <summary>
            Passed to a Session in order to configure a session.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.SessionSettings"/> object is used to specify
            overall settings such as the connecting application's name or a specific ISO language
            to use.
            </para>
            <example>
            <code escaped="false" lang="C#">
            SessionSettings sessionSettings = new SessionSettings();
            sessionSettings.ApplicationName = "MyCustomApplication";
            Session session = new Session();
            session.Connect(sessionSettings, ...);
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.SessionSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.SessionSettings"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.SessionSettings"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.SessionSettings.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.SessionSettings"/> class with additional settings.
            </summary>
            <param name="customSettings">Additional settings to be passed through during login.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.SessionSettings.IsDefined(ININ.IceLib.Connection.ClassOfService)">
            <summary>
            Validates an enumeration value.
            </summary>
            <param name="classOfService">The enumeration value to validate.</param>
            <returns><c>true</c> if the value is defined for the enumeration, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.SessionSettings.IsDefined(ININ.IceLib.Connection.DeviceType)">
            <summary>
            Validates an enumeration value.
            </summary>
            <param name="deviceType">The enumeration value to validate.</param>
            <returns><c>true</c> if the value is defined for the enumeration, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.SessionSettings.Clone">
            <summary>
            Returns an exact copy of this <b>SessionSettings</b> object.
            </summary>
            <returns>A new SessionSettings object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.SessionSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Set the name-value pairs that should be passed.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns><c>true</c> if successful.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.SessionSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.SessionSettings.ApplicationName">
            <summary>
            Gets or sets the Application Name for the session.
            </summary>
            <value>The name of the application.</value>
            <remarks>
            <para>This setting identifies the application that created the Session.  (Defaults to the name of the current process.)</para>
            <para>The value will show up in the Supervisor view for SessionManager.  It will also be used for future associations of plugins to applications.  So, please set it to a constant value representing the application.</para>
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Connection.SessionSettings.IsoLanguage">
            <summary>
            Gets or sets the IsoLanguage for the session.
            </summary>
            <value>The ISO language.</value>
            <remarks>
            The default is the <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/>.
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Connection.SessionSettings.MachineName">
            <summary>
            Gets or sets the MachineName for the session.
            </summary>
            <value>The machine name.</value>
            <remarks>
            The default is the <see cref="P:System.Environment.MachineName"/>. This can be changed to perform a "proxy" login as if the user were logging in from another machine. For instance, a web server might use a proxy login by specifying the machinename where the web browser is running.
            </remarks>
            <seealso cref="P:ININ.IceLib.Connection.Session.AdditionalUtcOffset"/>
        </member>
        <member name="P:ININ.IceLib.Connection.SessionSettings.ClassOfService">
            <summary>
            Gets or sets the ClassOfService for the session.
            </summary>
            <value>The class of service.</value>
            <remarks>
            The default is <see cref="F:ININ.IceLib.Connection.ClassOfService.HighlyAvailable"/>.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">This exception occurs when the specified class of service is not from the <see cref="T:ININ.IceLib.Connection.ClassOfService"/> enumeration.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.SessionSettings.DeviceType">
            <summary>
            Gets or sets the DeviceType for the session.
            </summary>
            <value>The device type.</value>
            <remarks>
            The default is <see cref="F:ININ.IceLib.Connection.DeviceType.Win32"/>.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified device type is not from the <see cref="T:ININ.IceLib.Connection.DeviceType"/> enumeration.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.SessionSettings.CustomSettings">
            <summary>
            Gets a collection which can be used to set custom parameters for the Session.
            </summary>
            <value>The custom settings.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.StationType">
            <summary>
            Specifies constants indicating a station's type.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.StationType.Unknown">
            <summary>The station is of an unknown type.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.StationType.Local">
            <summary>The station is a local workstation.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.StationType.Remote">
            <summary>The station is a remote workstation.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.StationType.Sip">
            <summary>The station is connected via Sip.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.StationType.Tapi">
            <summary>The station is connected via Tapi.</summary>
        </member>
        <member name="T:ININ.IceLib.Connection.StationInfo">
            <summary>
            Describes a station.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.StationInfo"/> object contains information about the
            connected Station associated with a Session. You can get or set the station's extension, 
            ID, SIP address, user, and station type, and other properties.<br/><br/>
            </para>
            <example>
            <code escaped="false" lang="C#">
            Session session = new Session();
            session.Connect(...);
            StationInfo stationInfo = session.GetStationInfo();
            if (stationInfo.StationType == StationType.Local)
            {
                string extension = stationInfo.Extension;
            }
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.StationInfo.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StationInfo"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StationInfo"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.StationInfo.#ctor(ININ.IceLib.Connection.StationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StationInfo"/> class with another instance.
            </summary>
            <param name="stationInfo">The station info.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.StationInfo.Clone">
            <summary>
            Clones the station info object by making a deep copy of all member values.
            </summary>
            <returns>A new cloned object.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.StationInfo.IsDefined(ININ.IceLib.Connection.StationType)">
            <summary>
            Validates an enumeration value.
            </summary>
            <param name="stationType">The enumeration value to validate.</param>
            <returns><c>true</c> if the value is defined for the enumeration, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.StationInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.StationInfo.Id">
            <summary>
            Gets or sets the station ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.StationInfo.Extension">
            <summary>
            Gets or sets the station Extension.
            </summary>
            <value>The extension.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.StationInfo.Type">
            <summary>
            Gets or sets the station type.
            </summary>
            <value>The station type.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified station type is not from the <see cref="T:ININ.IceLib.Connection.StationType"/> enumeration.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.StationInfo.CanBeDialed">
            <summary>
            Gets or sets whether the station can be dialed.
            </summary>
            <value>
            	<c>true</c> if this instance can be dialed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Connection.StationInfo.RingAlways">
            <summary>
            Gets or sets whether the station will always ring.
            </summary>
            <value><c>true</c> if should ring always; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.StationInfo.SipAddress">
            <summary>
            Gets or sets the station Sip address.
            </summary>
            <value>The SIP address.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.StationInfo.SipUser">
            <summary>
            Gets or sets the station Sip user.
            </summary>
            <value>The SIP user.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.StationInfo.SipPassword">
            <summary>
            Gets or sets the station Sip password.
            </summary>
            <value>The SIP password.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.StationInfo.DNDStatusSyncAvailable">
            <summary>
            Gets a value indicating whether DND status synchronization is available on this station.
            </summary>
            <value>
            	<c>true</c> if DND status synchronization is available on this station; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:ININ.IceLib.Connection.SupportedMedia">
            <summary>
            Specifies constants indicating what media types a station supports.
            </summary>
            <remarks>
            This enumeration is used by StationSettings to specify what media a station supports.
            </remarks>
            <example>
            The following example demonstrates creation of a StationSettings object.
            <code lang="C#">
            using ININ.IceLib.Connection;
            
            SupportedMedia supportedMedia = SupportedMedia.Call | SupportedMedia.Chat | SupportedMedia.Email;
            WorkstationSettings stationSettings = new WorkstationSettings("station1", supportedMedia);
            </code>
            </example>
        </member>
        <member name="F:ININ.IceLib.Connection.SupportedMedia.None">
            <summary>The station supports no media types.  Cannot be used with other flags.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.SupportedMedia.Call">
            <summary>The station supports calls.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.SupportedMedia.Chat">
            <summary>The station supports chats.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.SupportedMedia.Email">
            <summary>The station supports emails.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.SupportedMedia.Generic">
            <summary>The station supports generic objects.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.SupportedMedia.BrowserSync">
            <summary>The station supports browser sync objects.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.SupportedMedia.Callback">
            <summary>The station supports callbacks.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.SupportedMedia.DualForm">
            <summary>The station supports dual form objects.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.SupportedMedia.SmsMessage">
            <summary>The station supports SMS messages.</summary>
        </member>
        <member name="T:ININ.IceLib.Connection.StationSettings">
            <summary>
            Passed to a Session in order to specify a station.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.StationSettings"/> object serves as a base class
            for objects that specify station settings.<br/><br/>
            </para>
            <example>
            <code escaped="false" lang="C#">
            // This default constructor uses the current machine name as the station name.
            // Alternatively, a workstation could be specified.
            WorkstationSettings stationSettings = new WorkstationSettings();
            Session session = new Session();
            session.Connect(..., stationSettings);
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.StationSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StationSettings"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StationSettings"/> class with default settings.
            </summary>
            <remarks>
            This constructor is called by derived class constructors to initialize state in this type.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.StationSettings.#ctor(ININ.IceLib.Connection.SupportedMedia)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StationSettings"/> class with media settings.
            </summary>
            <remarks>
            This constructor is called by derived class constructors to initialize state in this type.
            </remarks>
            <param name="supportedMedia">The media types supported by this station.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.StationSettings.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <exclude/><summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StationSettings"/> class 
            given a dictionary containing values for the class members.
            </summary>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.StationSettings.IsDefined(ININ.IceLib.Connection.SupportedMedia)">
            <summary>
            Validates an enumeration value.
            </summary>
            <param name="supportedMedia">The enumeration value to validate.</param>
            <returns><c>true</c> if the value is defined for the enumeration, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.StationSettings.Clone">
            <summary>
            Returns an exact copy of this <b>StationSettings</b> object.
            </summary>
            <returns>A new StationSettings object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.StationSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Set the name-value pairs that should be passed.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns><c>true</c> if successful.</returns>
        </member>
        <member name="P:ININ.IceLib.Connection.StationSettings.SupportedMedia">
            <summary>
            Gets or sets the SupportedMedia.
            </summary>
            <value>The supported media.</value>
            <remarks>
            The default is <see cref="F:ININ.IceLib.Connection.SupportedMedia.None"/>.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified supported media is not from the <see cref="T:ININ.IceLib.Connection.SupportedMedia"/> enumeration.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.StationSettings.StationId">
            <summary>
            Gets a StationId to best represent the StationSettings.
            </summary>
            <value>The station ID.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.StationlessSettings">
            <summary>
            Passed to a Session in order to specify a stationless connection.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.StationlessSettings"/> object is used to specify
            that no station should be associated with the Session.<br/><br/>
            </para>
            <example>
            <code escaped="false" lang="C#">
            StationlessSettings stationSettings = new StationlessSettings();
            Session session = new Session();
            session.Connect(..., stationSettings);
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.StationlessSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StationlessSettings"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StationlessSettings"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.StationlessSettings.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StationlessSettings"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.StationlessSettings.Clone">
            <summary>
            Returns an exact copy of this <b>StationlessSettings</b> object.
            </summary>
            <returns>A new StationlessSettings object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.StationlessSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.StationlessSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.StationlessSettings.StationId">
            <inheritdoc/>
        </member>
        <member name="T:ININ.IceLib.Connection.WorkstationSettings">
            <summary>
            Passed to a Session in order to specify a workstation.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.WorkstationSettings"/> object is used to specify
            local workstation settings. This establishes a Session directly on the specified station.
            The station name is set to the current machine name by default.<br/><br/>
            </para>
            <example>
            <code escaped="false" lang="C#">
            // This default constructor uses the current machine name as the station name.
            // Alternatively, a workstation could be specified.
            WorkstationSettings stationSettings = new WorkstationSettings();
            Session session = new Session();
            session.Connect(..., stationSettings);
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.WorkstationSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.WorkstationSettings"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.WorkstationSettings"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.WorkstationSettings.#ctor(System.String,ININ.IceLib.Connection.SupportedMedia)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.WorkstationSettings"/> class with station settings.
            </summary>
            <param name="workstation">The workstation.</param>
            <param name="supportedMedia">The media types supported by this station.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified supported media is not from the <see cref="T:ININ.IceLib.Connection.SupportedMedia"/> enumeration.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.WorkstationSettings.Clone">
            <summary>
            Returns an exact copy of this <b>WorkstationSettings</b> object.
            </summary>
            <returns>A new WorkstationSettings object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.WorkstationSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.WorkstationSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.WorkstationSettings.StationId">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.WorkstationSettings.Workstation">
            <summary>
            Gets or sets the Workstation.
            </summary>
            <value>The workstation.</value>
            <remarks>
            The default is the <see cref="P:System.Environment.MachineName"/>.
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Connection.RemoteStationSettings">
            <summary>
            Passed to a Session in order to specify a remote station.
            </summary>
            <remarks>
            <para>
            Use the <see cref="T:ININ.IceLib.Connection.RemoteStationSettings"/> object to specify
            remote workstation settings.  It establishes a Session against the specified station,
            but via a remote phone number.<br/><br/>
            </para>
            <example>
            <code escaped="false" lang="C#">
            RemoteStationSettings stationSettings = new RemoteStationSettings("My_IC_StationID",
                    SupportedMedia.Call,
                    "555-555-5555",
                    true);
            Session session = new Session();
            session.Connect(..., stationSettings);
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteStationSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RemoteStationSettings"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RemoteStationSettings"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteStationSettings.#ctor(System.String,ININ.IceLib.Connection.SupportedMedia,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RemoteStationSettings"/> class with station settings.
            </summary>
            <param name="workstation">The workstation.</param>
            <param name="supportedMedia">The media types supported by this station.</param>
            <param name="remoteNumber">The remote number.</param>
            <param name="persistentConnection">Specifies whether the remote connection is persistent.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified supported media is not from the <see cref="T:ININ.IceLib.Connection.SupportedMedia"/> enumeration.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteStationSettings.Clone">
            <summary>
            Returns an exact copy of this <b>RemoteStationSettings</b> object.
            </summary>
            <returns>A new RemoteStationSettings object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteStationSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteStationSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.RemoteStationSettings.StationId">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.RemoteStationSettings.Workstation">
            <summary>
            Gets or sets the Workstation.
            </summary>
            <value>The workstation.</value>
            <remarks>
            The default is the <see cref="P:System.Environment.MachineName"/>.
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Connection.RemoteStationSettings.RemoteNumber">
            <summary>
            Gets or sets the RemoteNumber.
            </summary>
            <value>The remote number.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.RemoteStationSettings.PersistentConnection">
            <summary>
            Gets or sets the PersistentConnection.
            </summary>
            <value><c>true</c> if a persistent connection; otherwise, <c>false</c>.</value>
            <remarks>
            The default is <c>false</c>.
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Connection.RemoteNumberSettings">
            <summary>
            Passed to a Session in order to specify a remote number connection.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.RemoteNumberSettings"/> object is used to specify
            dynamic remote workstation settings.  This establishes a Session via a remote phone number,
            but not associated with a particular IC station.<br/><br/>
            </para>
            <example>
            <code escaped="false" lang="C#">
            RemoteNumberSettings stationSettings = new RemoteNumberSettings(SupportedMedia.Call,
                    "555-555-5555",
                    true);
            Session session = new Session();
            session.Connect(..., stationSettings);
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteNumberSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RemoteNumberSettings"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RemoteNumberSettings"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteNumberSettings.#ctor(ININ.IceLib.Connection.SupportedMedia,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RemoteNumberSettings"/> class with station settings.
            </summary>
            <param name="supportedMedia">The media types supported by this station.</param>
            <param name="remoteNumber">The remote number.</param>
            <param name="persistentConnection">Specifies whether the remote connection is persistent.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified supported media is not from the <see cref="T:ININ.IceLib.Connection.SupportedMedia"/> enumeration.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteNumberSettings.Clone">
            <summary>
            Returns an exact copy of this <b>RemoteNumberSettings</b> object.
            </summary>
            <returns>A new RemoteNumberSettings object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteNumberSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteNumberSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.RemoteNumberSettings.StationId">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.RemoteNumberSettings.RemoteNumber">
            <summary>
            Gets or sets the RemoteNumber.
            </summary>
            <value>The remote number.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.RemoteNumberSettings.PersistentConnection">
            <summary>
            Gets or sets the PersistentConnection.
            </summary>
            <value><c>true</c> if a persistent connection; otherwise, <c>false</c>.</value>
            <remarks>
            The default is <c>false</c>.
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Internal.StreamErrorInformation">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamErrorInformation.ReadListAndThrowIfError(ININ.ThinBridge.NotifierReader)">
            <summary>
            Helper method that reads an error description list from a NotifierReader, throwing if errors are found.
            </summary>
            <param name="reader">The NotifierReader from which to read the error list.</param>
            <exception cref="T:ININ.IceLib.IceLibException">The error that was found.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamErrorInformation.ReadAndThrowIfError(ININ.ThinBridge.NotifierReader)">
            <summary>
            Helper method that reads an error description from a NotifierReader, throwing any errors that are found.
            </summary>
            <param name="reader">The NotifierReader from which to read the error.</param>
            <exception cref="T:ININ.IceLib.IceLibException">The error that was found.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamErrorInformation.ThrowIfError(System.Int32,System.String)">
            <summary>
            Helper method that throws an IceLibException if the code represents an error.
            </summary>
            <param name="lastError">The error code.</param>
            <param name="lastErrorText">The error description text.</param>
            <exception cref="T:ININ.IceLib.IceLibException">The error that was found.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamErrorInformation.ReadLastError(ININ.ThinBridge.NotifierReader,System.Int32@,System.String@,System.Boolean)">
            <summary>
            Reads a single error description from a NotifierReader.
            </summary>
            <param name="reader">The NotifierReader from which to read the error.</param>
            <param name="lastError">The error code that was read.</param>
            <param name="lastErrorText">The error description text that was read.</param>
            <param name="alwaysReadErrorText"><c>true</c> if the error text should be read when the code isn't an error.</param>
            <returns><c>false</c> if the code represents an error.</returns>
        </member>
        <member name="T:ININ.IceLib.Internal.StreamDateTime">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamDateTime.Read(ININ.IceLib.Connection.Session,ININ.ThinBridge.NotifierReader,System.Boolean)">
            <summary>
            Read a DateTime from a message, adjusting for clock skew and AdditionalUtcOffset.
            </summary>
            <param name="session">The session used for time offsets.</param>
            <param name="reader">The message payload reader.</param>
            <param name="applyClockSkew">if set to <c>true</c> apply the clock skew.</param>
            <returns>The DateTime that was read.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamDateTime.ReadRaw(ININ.ThinBridge.NotifierReader)">
            <summary>
            Read a DateTime from a message, NOT adjusting for clock skew or AdditionalUtcOffset.
            </summary>
            <param name="reader">The message payload reader.</param>
            <returns>The DateTime that was read.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <remarks>Really, only the Session itself should need to do this! (To compute the skew.)</remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamDateTime.Write(ININ.IceLib.Connection.Session,ININ.ThinBridge.NotifierWriter,System.DateTime,System.Boolean)">
            <summary>
            Write a DateTime to a message, adjusting for clock skew and AdditionalUtcOffset.
            </summary>
            <param name="session">The session used for time offsets.</param>
            <param name="writer">The message payload writer.</param>
            <param name="dateTime">The DateTime to write.</param>
            <param name="applyClockSkew">if set to <c>true</c> apply the clock skew.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamDateTime.WriteEmptyDateTime(ININ.IceLib.Connection.Session,ININ.ThinBridge.NotifierWriter)">
            <summary>
            Write an empty DateTime to a message, with no skew or UTC adjustment.
            </summary>
            <param name="session">The session used for time offsets.</param>
            <param name="writer">The message payload writer.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamDateTime.EmptyDateTime">
            <summary>
            Returns a DateTime representing an empty value.
            </summary>
            <returns>The empty DateTime.</returns>
        </member>
        <member name="T:ININ.IceLib.Internal.StreamHelpers">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.IceLibException">
            <summary>
            The general exception that is thrown for IceLib when a more specific exception cannot be determined.
            </summary>
            <remarks>
            <para>
            This exception is thrown throughout IceLib when a more specific exception cannot be determined.  It
            also serves as the base class for more specific IceLib exceptions, allowing consistent exception
            handling for all such exceptions.
            </para>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.IceLibException.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.IceLibException"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.IceLibException"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.IceLibException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.IceLibException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:ININ.IceLib.IceLibException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.IceLibException"/> class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <i>innerException</i> parameter is not a null reference (<b>Nothing</b> in Visual Basic), the current exception is raised in a <b>catch</b> block that handles the inner exception.</param>
        </member>
        <member name="M:ININ.IceLib.IceLibException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.IceLibException"/> class with a specified error message.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:ININ.IceLib.IceLibException.ErrorCode">
            <summary>
            Gets or sets the internal error code.
            </summary>
            <value>The error code.</value>
        </member>
        <member name="T:ININ.IceLib.NotCachedException">
            <summary>
            The exception that is thrown for IceLib when a required value is not cached.
            </summary>
            <remarks>
            <para>
            This exception is thrown by various IceLib objects when a requested watched value has
            not yet been cached.  This is usually due to not having a watch for that value, but can
            also happen if an asynchronous watch is requested and the value is queried before the
            asynchronous watch operation completes.
            </para>
            <para>Like all IceLib-specific exceptions, this object derives from <see cref="T:ININ.IceLib.IceLibException"/>,
            allowing consistent exception handling for all such exceptions.
            </para>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.NotCachedException.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.NotCachedException"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.NotCachedException"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.NotCachedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.NotCachedException"/> class with a specified cache value.
            </summary>
            <param name="cacheValueName">The name of the cache value.</param>
        </member>
        <member name="M:ININ.IceLib.NotCachedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.NotCachedException"/> class with a specified error message.
            </summary>
            <param name="cacheValueName">The name of the cache value.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <i>innerException</i> parameter is not a null reference (<b>Nothing</b> in Visual Basic), the current exception is raised in a <b>catch</b> block that handles the inner exception.</param>
        </member>
        <member name="M:ININ.IceLib.NotCachedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.NotCachedException"/> class with a specified error message.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.NotCachedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the SerializationInfo with information about the exception.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:ININ.IceLib.NotCachedException.CacheValueName">
            <summary>
            Gets the name of the cache value.
            </summary>
            <value>The name of the cache value.</value>
        </member>
        <member name="T:ININ.IceLib.ResourceInUseException">
            <summary>
            The exception that is thrown for IceLib when a required resource is already in use.
            </summary>
            <remarks>
            <para>
            This exception is thrown by various IceLib objects when a requested resource is already
            in use.  This can happen if a call is attempted to be parked on an Orbit queue that already
            has a call on it.
            </para>
            <para>Like all IceLib-specific exceptions, this object derives from <see cref="T:ININ.IceLib.IceLibException"/>,
            allowing consistent exception handling for all such exceptions.
            </para>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.ResourceInUseException.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ResourceInUseException"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ResourceInUseException"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.ResourceInUseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ResourceInUseException"/> class with a specified cache value.
            </summary>
            <param name="resourceName">The name of the resource.</param>
        </member>
        <member name="M:ININ.IceLib.ResourceInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ResourceInUseException"/> class with a specified error message.
            </summary>
            <param name="resourceName">The name of the resource.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <i>innerException</i> parameter is not a null reference (<b>Nothing</b> in Visual Basic), the current exception is raised in a <b>catch</b> block that handles the inner exception.</param>
        </member>
        <member name="M:ININ.IceLib.ResourceInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ResourceInUseException"/> class with a specified error message.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.ResourceInUseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the SerializationInfo with information about the exception.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:ININ.IceLib.ResourceInUseException.ResourceName">
            <summary>
            Gets the name of the resource.
            </summary>
            <value>The name of the resource.</value>
        </member>
        <member name="T:ININ.IceLib.ServerOperationNotSupportedException">
            <summary>
            The exception that is thrown for IceLib when the server does not support a requested operation.
            </summary>
            <remarks>
            <para>
            This exception is thrown by various IceLib objects when a requested operation is not supported
            by the server. This can happen if the operation is implemented in a newer release of IceLib
            than the release of the server with which a Session was established.
            </para>
            <para>Like all IceLib-specific exceptions, this object derives from <see cref="T:ININ.IceLib.IceLibException"/>,
            allowing consistent exception handling for all such exceptions.
            </para>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.ServerOperationNotSupportedException.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ServerOperationNotSupportedException"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ServerOperationNotSupportedException"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.ServerOperationNotSupportedException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ServerOperationNotSupportedException"/> class with a specified error message.
            </summary>
            <param name="innerException">The exception that is the cause of the current exception. If the <i>innerException</i> parameter is not a null reference (<b>Nothing</b> in Visual Basic), the current exception is raised in a <b>catch</b> block that handles the inner exception.</param>
        </member>
        <member name="M:ININ.IceLib.ServerOperationNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ServerOperationNotSupportedException"/> class with a specified error message.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.ServerOperationNotSupportedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the SerializationInfo with information about the exception.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:ININ.IceLib.IceLibLicenseException">
            <summary>
            The exception that is thrown for IceLib when a required license is not available.
            </summary>
            <remarks>
            <para>
            This exception is thrown by various IceLib objects when a requested operation requires
            a license that is not available.
            </para>
            <para>Like all IceLib-specific exceptions, this object derives from <see cref="T:ININ.IceLib.IceLibException"/>,
            allowing consistent exception handling for all such exceptions.
            </para>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.IceLibLicenseException.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.IceLibLicenseException"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.IceLibLicenseException"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.IceLibLicenseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.NotCachedException"/> class with a specified cache value.
            </summary>
            <param name="exceptionDetail">The exception detail message.</param>
        </member>
        <member name="M:ININ.IceLib.IceLibLicenseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.NotCachedException"/> class with a specified error message.
            </summary>
            <param name="exceptionDetail">The exception detail message.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <i>innerException</i> parameter is not a null reference (<b>Nothing</b> in Visual Basic), the current exception is raised in a <b>catch</b> block that handles the inner exception.</param>
        </member>
        <member name="M:ININ.IceLib.IceLibLicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.NotCachedException"/> class with a specified error message.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.IceLibLicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the SerializationInfo with information about the exception.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:ININ.IceLib.IceLibLicenseException.ExceptionDetail">
            <summary>
            Gets a detailed description of the missing license.
            </summary>
            <value>The exception detail message.</value>
        </member>
        <member name="T:ININ.IceLib.Internal.MessageReceivedEventArgs">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Internal.MessageReceivedEventArgs.#ctor(ININ.ThinBridge.Message)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.MessageReceivedEventArgs"/> class with the specified message.
            </summary>
            <param name="message">The message associated with the event.</param>
        </member>
        <member name="P:ININ.IceLib.Internal.MessageReceivedEventArgs.Message">
            <summary>
            Gets the message associated with the event.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Connection.ConnectionState">
            <summary>
            Specifies constants indicating the state of a Session's connection.
            </summary>
            <remarks>
            <para>
            This enumeration is used in conjuction with <see cref="T:ININ.IceLib.Connection.ConnectionStateReason"/> by Session to specify the state of its connection.
            </para>
            <para>
            The ConnectionState state machine looks like the following:
            </para>
            <code>
            <para>
                     /------\ &lt;------------ /----\
                     | Down |               | Up |
                     \------/               \----/
                       |  ^                  ^
                       |  |                  |
                       |  |   /--------------/
                       V  |   |
             o-----&gt; /---------\
                     | Attempt |
                     \---------/
            </para>
            <para>
            The following are connection states (followed by their transition symbols):
            	<list type="bullet">
            	<item><term>Up</term><description>(U)</description></item>
            	<item><term>Down</term><description>(D)</description></item>
            	<item><term>Attempting</term><description>(A)</description></item>
            	<item><term>None</term><description>(N)</description></item>
            	</list>
            The following are connection state reasons (followed by their applicable transitions):
            	<list type="bullet">
            	<item><term>Switchover</term><description>(U-&gt;D)</description></item>
            	<item><term>SessionTimeout</term><description>(U-&gt;D)</description></item>
            	<item><term>UserLogOff</term><description>(U-&gt;D)</description></item>
            	<item><term>LogOn</term><description>(N-&gt;A, A-&gt;U)</description></item>
            	<item><term>LogOnFailed</term><description>(A-&gt;D)</description></item>
            	<item><term>AnotherLogOn</term><description>(U-&gt;D)</description></item>
            	<item><term>StationDeactivated</term><description>(U-&gt;D)</description></item>
            	<item><term>StationDeleted</term><description>(U-&gt;D)</description></item>
            	<item><term>AdminLogoff</term><description>(U-&gt;D)</description></item>
            	<item><term>ServerNotResponding</term><description>(U-&gt;L, A-&gt;D, L-&gt;A, A-&gt;L)</description></item>
            	<item><term>None</term><description>(Initial state)</description></item>
            	</list>
            </para>
            </code>
            </remarks>
            <example>
            The following example demonstrates usage of a Session object.
            <code lang="C#">
            using ININ.IceLib.Connection;
            
            Session session = new Session();
            
            ... // Further processing
            
            if (session.ConnectionState != ConnectionState.Up)
            {
              // There is no active connection.
            }
            </code>
            </example>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionState.None">
            <summary>The session's connection does not exist.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionState.Up">
            <summary>The session's connection is up.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionState.Down">
            <summary>The session's connection is down.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionState.Attempting">
            <summary>The session is attempting to re-establish a connection.</summary>
        </member>
        <member name="T:ININ.IceLib.Connection.ConnectionStateReason">
            <summary>
            Specifies constants indicating the reason for the state of a Session's connection.
            </summary>
            <remarks>
            This enumeration is used to indicate the reason for the Session's <see cref="T:ININ.IceLib.Connection.ConnectionState"/>.
            </remarks>
            <example>
            The following example demonstrates usage of a Session object.
            <code lang="C#">
            using ININ.IceLib.Connection;
            
            Session session = new Session();
            
            ... // Further processing
            
            if ((session.ConnectionState == ConnectionState.Down) &amp;&amp; (session.ConnectionStateReason == ConnectionStateReason.LogOnFailed))
            {
              // The login attempt failed.
            }
            </code>
            </example>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.None">
            <summary>There is no reason for the current connection state.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.ServerNotResponding">
            <summary>The connection state is not up because the server is not responding.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.LogOn">
            <summary>The connection state is attempting or up because a logon has been initiated.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.LogOnFailed">
            <summary>The connection state is down because the logon attempt failed.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.AdminLogOff">
            <summary>The connection state is down due to administrative action.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.UserDeleted">
            <summary>The connection state is down due to administrative action.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.StationDeleted">
            <summary>The connection state is down due to administrative action.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.StationDeactivated">
            <summary>The connection state is down due to administrative action.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.AnotherLogOn">
            <summary>The connection state is down due to a subsequent logon.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.UserLogOff">
            <summary>The connection state is down because the user has logged off.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.SessionTimeout">
            <summary>The connection state is down because the session has timed out.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.Switchover">
            <summary>The connection state is down because a switchover has been initiated.</summary>
        </member>
        <member name="T:ININ.IceLib.Connection.ConnectionEvent">
            <summary>
            Events that initiate state transitions.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Connection.ConnectionStateChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:ININ.IceLib.Connection.Session.ConnectionStateChanged"/> event.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.ConnectionStateChangedEventArgs"/> class contains properties
            that describe the ConnectionState change and the reason for the change.
            </para>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.ConnectionStateChangedEventArgs.#ctor(ININ.IceLib.Connection.ConnectionState,ININ.IceLib.Connection.ConnectionStateReason)">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.ConnectionStateChangedEventArgs"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.ConnectionStateChangedEventArgs"/> class with the specified state and reason.
            </summary>
            <param name="state">The new connection state.</param>
            <param name="reason">The new connection state reason.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.ConnectionStateChangedEventArgs.#ctor(ININ.IceLib.Connection.ConnectionState,ININ.IceLib.Connection.ConnectionStateReason,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.ConnectionStateChangedEventArgs"/> class with the specified message.
            </summary>
            <param name="state">The new connection state.</param>
            <param name="reason">The new connection state reason.</param>
            <param name="message">The message associated with the connection state change.</param>
        </member>
        <member name="P:ININ.IceLib.Connection.ConnectionStateChangedEventArgs.Message">
            <summary>
            Gets the message associated with the connection state change.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.ConnectionStateChangedEventArgs.State">
            <summary>
            Gets the new ConnectionState.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.ConnectionStateChangedEventArgs.Reason">
            <summary>
            Gets the new ConnectionStateReason.
            </summary>
            <value>The reason.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Session">
            <summary>
            Represents the connection Session with the Interaction Center server.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.Session"/> is the root of any IceLib connection 
            with the IC server. It accepts various settings to describe the session and provides events when 
            there is a change in connection settings or connection state.
            </para>
            <para>
            <b>Host Settings.</b> The <see cref="T:ININ.IceLib.Connection.HostSettings"/> is used to specify
            the BridgeHost to which a Session should be established.
            </para>
            <para>
            <b>Authentication Settings.</b> There are a number of object classes that are used to specify
            authentication settings for the Session such as what IC User ID and Password to login with.
            All such objects inherit from <see cref="T:ININ.IceLib.Connection.AuthSettings"/>. Examples of authentication classes are:
            <see cref="T:ININ.IceLib.Connection.ICAuthSettings"/>
            and <see cref="T:ININ.IceLib.Connection.WindowsAuthSettings"/>,
            </para>
            <para>
            <b>Station Settings.</b> There are a number of object classes that are used to specify
            station settings for the Session such as what remote number is serving as the User's station.
            All such objects inherit from <see cref="T:ININ.IceLib.Connection.StationSettings"/>. Examples of station classes are:
            <see cref="T:ININ.IceLib.Connection.WorkstationSettings"/>
            and <see cref="T:ININ.IceLib.Connection.RemoteStationSettings"/>,
            </para><br/>
            <example>
            <note>All "manager" classes found in the IceLib library are designed as
            <i>singletons</i>-classes instantiated only once. For example, to begin working with any of the functionality provided in
            the <c>ININ.IceLib.Interactions.InteractionsManager</c>, you must obtain the instance
            through a call to its <c>GetInstance</c> method.</note><br/>
            <code escaped="false" lang="C#">
            Session session = new Session();
            session.Connect(...);
            InteractionsManager interactionsManager = InteractionsManager.GetInstance(session);
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Session"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Session"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the Session.
            </summary>
            <param name="disposing">Indicates whether the object is in the process of being disposed of.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.Connect(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings)">
            <summary>
            Connects the session using the specified settings.
            </summary>
            <param name="sessionSettings">The <see cref="T:ININ.IceLib.Connection.SessionSettings"/> for the connection.</param>
            <param name="hostSettings">The <see cref="T:ININ.IceLib.Connection.HostSettings"/> for the connection.</param>
            <param name="authSettings">The <see cref="T:ININ.IceLib.Connection.AuthSettings"/> for the connection.</param>
            <param name="stationSettings">The <see cref="T:ININ.IceLib.Connection.StationSettings"/> for the connection.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The connection was not established.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">A required license is not available.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.ConnectAsync(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously connects the session using the specified settings.
            </summary>
            <param name="sessionSettings">The <see cref="T:ININ.IceLib.Connection.SessionSettings"/> for the connection.</param>
            <param name="hostSettings">The <see cref="T:ININ.IceLib.Connection.HostSettings"/> for the connection.</param>
            <param name="authSettings">The <see cref="T:ININ.IceLib.Connection.AuthSettings"/> for the connection.</param>
            <param name="stationSettings">The <see cref="T:ININ.IceLib.Connection.StationSettings"/> for the connection.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.IsFatalConnectionError(System.Exception)">
            <exclude/>
            <summary>
            Determines whether the specified exception indicates that the conneciton will fail on all servers.
            </summary>
            <param name="ex">The exception.</param>
            <returns>
            	<c>true</c> if the connection would fail if attempted on the alternate servers too; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.LoginToBridgeClient(ININ.ThinBridge.PooledIPBridgeClient)">
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.CleanupBridgeClient">
            <summary>
            Call this to clean up the internal PooledIPBridgeClient instance.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.SetAutoReconnectInterval(System.Int32)">
            <summary>
            Sets the amount of time (in seconds) to wait between reconnection attempts when the connection has been lost.
            </summary>
            <param name="interval">The time, in seconds, to wait between reconnection attempts.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.SetAutoReconnectInterval(System.Int32,System.Int32)">
            <summary>
            Sets the amount of time (in seconds) to wait between reconnection attempts when the connection has been lost,
            allowing a difference between the amount of time before an initial reconnect and 
            all subsequent reconnect attempts.
            </summary>
            <param name="initialInterval">The time, in seconds, to wait before performing an initial reconnection attempt.</param>
            <param name="subsequentIntervals">The time, in seconds, to wait between all reconnection attempts after the first reconnection attempt has occurred.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">An invalid interval parameter value was used.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.Disconnect">
            <summary>
            Disconnects the Session.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The connection could not be disconnected.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.DisconnectAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously disconnects the Session.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.ChangeStation(ININ.IceLib.Connection.StationSettings)">
            <summary>
            Changes the station for the session.
            </summary>
            <param name="stationSettings">The <see cref="T:ININ.IceLib.Connection.StationSettings"/> for the connection.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The Session does not have a valid connection.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.ChangeStationAsync(ININ.IceLib.Connection.StationSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously changes the station for the session.
            </summary>
            <param name="stationSettings">The <see cref="T:ININ.IceLib.Connection.StationSettings"/> for the connection.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.GetSessionSettings">
            <summary>
            Gets a copy of the <see cref="T:ININ.IceLib.Connection.SessionSettings"/>.
            </summary>
            <returns>The Session's <see cref="T:ININ.IceLib.Connection.SessionSettings"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.GetHostSettings">
            <summary>
            Gets a copy of the <see cref="T:ININ.IceLib.Connection.HostSettings"/>.
            </summary>
            <returns>The Session's <see cref="T:ININ.IceLib.Connection.HostSettings"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.GetAuthSettings">
            <summary>
            Gets a copy of the <see cref="T:ININ.IceLib.Connection.AuthSettings"/>.
            </summary>
            <returns>The Session's <see cref="T:ININ.IceLib.Connection.AuthSettings"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.GetStationSettings">
            <summary>
            Gets a copy of the <see cref="T:ININ.IceLib.Connection.StationSettings"/>.
            </summary>
            <returns>The Session's <see cref="T:ININ.IceLib.Connection.StationSettings"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.GetStationInfo">
            <summary>
            Gets a copy of the <see cref="T:ININ.IceLib.Connection.StationInfo"/>.
            </summary>
            <returns>The Session's <see cref="T:ININ.IceLib.Connection.StationInfo"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.CreateMessage(System.Int64)">
            <exclude/><summary>For internal use only.</summary>
            <param name="eventId">The event ID to associate with the Message being created.</param>
            <returns>The newly created Message for use with this Session.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.SendMessageNoResponse(ININ.ThinBridge.Message)">
            <exclude/><summary>For internal use only.</summary>
            <param name="message">The Message to be sent.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.SendMessage(ININ.ThinBridge.Message)">
            <exclude/><summary>For internal use only.</summary>
            <param name="message">The Message to be sent.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.BeginSendMessage(ININ.ThinBridge.Message,System.AsyncCallback,System.Object)">
            <exclude/><summary>For internal use only.</summary>
            <param name="message">The Message to be sent.</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">An object that contains state information for this request.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.EndSendMessage(System.IAsyncResult)">
            <exclude/><summary>For internal use only.</summary>
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
            <returns>The Message that we returned.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.RegisterMessageHandler(System.Int64,System.EventHandler{ININ.IceLib.Internal.MessageReceivedEventArgs})">
            <exclude/><summary>For internal use only.</summary>
            <param name="eventId">The message ID with which to associate this handler.</param>
            <param name="eventHandler">The message received event delegate.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.DeregisterMessageHandler(System.Int64,System.EventHandler{ININ.IceLib.Internal.MessageReceivedEventArgs})">
            <exclude/><summary>For internal use only.</summary>
            <param name="eventId">The message ID with which to associate this handler.</param>
            <param name="eventHandler">The message received event handler.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.LocalTimeToUtcString(System.DateTime)">
            <exclude/><summary>Converts the local time to a UTC date string for the server, adjusting for clock skew.</summary>
            <param name="localTime">The local time.</param>
            <returns>The UTC date string.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.UtcStringToLocalTime(System.String)">
            <exclude/><summary>Converts the UTC date string from the server to local time, adjusting for clock skew.</summary>
            <param name="utcDateTime">The UTC date string.</param>
            <returns>The local time.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.CheckSession">
            <summary>
            Verify that there is a connected session.
            </summary>
            <remarks>
            This helper can be used to provide early detection of an invalid connection.  If the Session does not have a connection
            an exception will be thrown.
            </remarks>
            <exception cref="T:ININ.IceLib.IceLibException">The Session does not have a valid connection.</exception>
        </member>
        <member name="E:ININ.IceLib.Connection.Session.ConnectionStateChanged">
            <summary>
            Occurs when the Session's <see cref="P:ININ.IceLib.Connection.Session.ConnectionState"/> changes.
            </summary>
        </member>
        <member name="E:ININ.IceLib.Connection.Session.StationSettingsChanged">
            <summary>
            Occurs when the Session's StationSettings changes.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.AutoReconnectEnabled">
            <summary>
            Enables or disables automatic reconnection attempts when the connection is lost.
            </summary>
            <value>
            	<c>true</c> if auto reconnect is enabled; otherwise, <c>false</c>.
            </value>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.AutoReconnecting">
            <summary>
            Identifies whether an AutoReconnect is in the process of occurring.
            </summary>
            <value><c>true</c> if auto reconnecting; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.IsEncrypted">
            <summary>
            Returns whether the current connection is encrypted.
            </summary>
            <value>
            	<c>true</c> if this instance is encrypted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.Endpoint">
            <summary>
            Returns a new <see cref="T:ININ.IceLib.Connection.HostEndpoint"/> containing the details of the currently connected <see cref="T:ININ.IceLib.Connection.HostEndpoint"/>.
            </summary>
            <value>The endpoint.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.ConnectionState">
            <summary>
            Gets the current <see cref="T:ININ.IceLib.Connection.ConnectionState"/> of the Session.
            </summary>
            <value>The connection state.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.ConnectionStateReason">
            <summary>
            Gets the current <see cref="T:ININ.IceLib.Connection.ConnectionStateReason"/> of the Session.
            </summary>
            <value>The connection state reason.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.ConnectionStateMessage">
            <summary>
            Gets the most recent text description of the state of the Session.
            </summary>
            <value>The connection state message.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.SessionId">
            <summary>
            The internal Session ID.
            </summary>
            <value>The session ID.</value>
            <remarks>
            This value can be used for diagnostic purposes.
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.RawSessionId">
            <summary>
            The internal Session ID as a UInt32
            </summary>
            <value>The session ID.</value>
            <remarks>
            This value can be used for diagnostic purposes.
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.UserId">
            <summary>
            Gets the ID of the logged in user.
            </summary>
            <value>The user ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.SessionManagerName">
            <summary>
            Gets the relative distinguished name (RDN) of the SessionManager to which the session is connected.
            </summary>
            <value>The RDN of the session manager.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.SessionManagerNameFQDN">
            <summary>
            Gets the fully qualified domain name (FQDN) of the SessionManager to which the session is connected.
            </summary>
            <value>The FQDN of the session manager.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.SessionManagerVersion">
            <summary>
            Gets the version number of the SessionManager to which the session is connected (if available).
            </summary>
            <value>The session manager version.</value>
            <remarks>
            Note that this version info wasn't available until version 2.4 Feature Pack 1.  When connecting
            to SessionManagers of an earlier version the string will be empty.
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.ICServer">
            <summary>
            Gets the name of the IC server to which the session is connected.
            </summary>
            <value>The IC server.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.CustomerName">
            <summary>
            Gets the name of the customer to whom IC is licensed.
            </summary>
            <value>The name of the customer.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.ClockSkew">
            <summary>
            Gets the clock skew.
            </summary>
            <value>The clock skew.</value>
            <remarks>
            <para>The clock skew accounts for slight differences in the clock adjustment of the local client
            versus the IC server.  It does not account for timezone differences.</para>
            <para>This value is exposed to allow conversion of times between client and server for custom
            attributes or other values outside of the control of IceLib itself.</para>
            <para>The relationship of clock skew to client and server times can be described as follows:
            	<list type="bullet">
            	<item><description>[Clock Skew] = [Server Time Now in Local Time] - [Client Time Now]</description></item>
            	<item><description>[IceLib Client Time] = [Server Time in Local Time] - [Clock Skew] - [AdditionalUtcOffset]</description></item>
            	<item><description>[Server Time in Local Time] = [IceLib Client Time] + [Clock Skew] + [AdditionalUtcOffset]</description></item>
            	</list>
            </para>
            <para>As shown, IceLib DateTime values are also affected by the <see cref="P:ININ.IceLib.Connection.Session.AdditionalUtcOffset"/>, if one is specified.</para>
            </remarks>
            <seealso cref="P:ININ.IceLib.Connection.Session.AdditionalUtcOffset"/>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.AdditionalUtcOffset">
            <summary>
            Gets or sets an additional clock skew for the session.
            </summary>
            <value>The additional clock skew.</value>
            <remarks>
            <para>The default is a time span of 0. This can be changed to perform a "proxy" time adjustment as if the user were logging in from another machine. For instance, a web server might want to artificially adjust time to match where the web browser is running.</para>
            <para>This time span will be added into all IceLib DateTime values:
            	<list type="bullet">
            	<item><description>[Clock Skew] = [Server Time Now in Local Time] - [Client Time Now]</description></item>
            	<item><description>[IceLib Client Time] = [Server Time in Local Time] - [Clock Skew] - [AdditionalUtcOffset]</description></item>
            	<item><description>[Server Time in Local Time] = [IceLib Client Time] + [Clock Skew] + [AdditionalUtcOffset]</description></item>
            	</list>
            </para>
            </remarks>
            <seealso cref="P:ININ.IceLib.Connection.SessionSettings.MachineName"/>
        </member>
        <member name="T:ININ.IceLib.Connection.Session.ConnectionExceptionComparer">
            <exclude/>
            <summary>
            Nested class to do a custom comparison of exceptions encountered while connection.
            The WORST errors will be LESS THAN other errors so that they will be at the front of any ordered lists.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.ConnectionExceptionComparer.GetPriority(ININ.IceLib.IceLibException)">
            <exclude/>
            <summary>
            Gets the priority of the exception.
            </summary>
            <param name="iceEx">The exception.</param>
            <returns>The priority of the exception.  Lower numbers are higher priority.</returns>
        </member>
        <member name="T:ININ.IceLib.Connection.CommonCredentials">
            <summary>
            CommonCredentials offers a set of static methods that get or set credentials to or from the credential cache.
            </summary>
            <remarks>
            <para>
            This allows an application to create a session without prompting for credentials each time.
            </para>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.CommonCredentials.GetCredentials">
            <summary>
            Gets the last globally-stored credentials.
            </summary>
            <returns>An instance of <see cref="T:ININ.IceLib.Connection.StoredCredential"/> representing all the credential information that is saved, or null if no credentials are found.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.CommonCredentials.SetCredentials(ININ.IceLib.Connection.StoredCredential,System.Boolean)">
            <summary>
            Sets the current stored credentials to the specified <see cref="T:ININ.IceLib.Connection.StoredCredential"/>.
            </summary>
            <param name="credentials">The credentials to save.</param>
            <param name="overwrite">Overwrite any existing saved credentials.  If <c>false</c>, the specified credentials will not be saved if any saved credentials currently exist.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:ININ.IceLib.Connection.StoredCredential">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Connection.StoredCredential.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StoredCredential"/> class.
            </overloads>
            
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.StoredCredential.#ctor(System.String,System.Boolean,System.String,System.String,System.DateTime,System.String,System.String,System.Int32)">
            <summary>
            Constructor that will initialize fields based on specified values.
            </summary>
            <param name="applicationName">Name of the application.</param>
            <param name="useWindowsAuth">If set to <c>true</c> use windows authentication.</param>
            <param name="userId">The user ID.</param>
            <param name="password">The password.</param>
            <param name="updated">The last time when the credentials were last updated.</param>
            <param name="station">The station.</param>
            <param name="hostName">The host name.</param>
            <param name="hostPort">The host port.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.StoredCredential.ToString">
            <summary>
            Override of ToString to write out the (unprotected) contents of this StoredCredential.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Connection.StoredCredential.GetHashCode">
            <inheritdoc />
        </member>
        <member name="P:ININ.IceLib.Connection.StoredCredential.ApplicationName">
            <summary>
            The name of the application saving these credentials.
            </summary>
            <value>The name of the application.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.StoredCredential.UseWindowsAuthentication">
            <summary>
            Use or don't use Windows Authentication.
            </summary>
            <value>
            	<c>true</c> if should use windows authentication; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Connection.StoredCredential.UserId">
            <summary>
            The User ID to use when connecting.
            </summary>
            <value>The user ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.StoredCredential.Password">
            <summary>
            The password to use when connecting.
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.StoredCredential.Updated">
            <summary>
            The date and time these credentials were saved.
            </summary>
            <value>The date and time.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.StoredCredential.Station">
            <summary>
            The station that was logged into, if any.
            </summary>
            <value>The station.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.StoredCredential.HostName">
            <summary>
            The host name that was logged into.
            </summary>
            <value>The host name.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.StoredCredential.HostPort">
            <summary>
            The host port that was logged into.  This will be -1 if it is not set.
            </summary>
            <value>The host port.</value>
        </member>
        <member name="T:ININ.IceLib.NamespaceDoc">
            <summary>
            <para>The <b>ININ.IceLib</b> namespace contains fundamental classes and base classes for 
            creating Interaction Center based applications.  These include commonly-used value and reference 
            data types, events and event handlers, interfaces, attributes, and processing exceptions.</para>
            <para>
            <b>Exceptions.</b> There are a number of exceptions that can be thrown throughout IceLib.  These are
            intended to allow custom applications to receive information about specific error conditions and be 
            able to handle the condition accordingly.  All such exceptions inherit from <see cref="T:ININ.IceLib.IceLibException"/>.
            Examples of Interaction classes are:
            <see cref="T:ININ.IceLib.NotCachedException"/>,
            <see cref="T:ININ.IceLib.ResourceInUseException"/>,
            and <see cref="T:ININ.IceLib.ServerOperationNotSupportedException"/>.
            </para>
            <para>
            <b>Tracing.</b> The <see cref="T:ININ.IceLib.Tracing"/> object offers support for simple tracing.
            These trace statements will be written into the Interactive Intelligence trace log for the running
            application instance.  All such trace statements will be written to the "IceLib_Custom" trace topic.
            </para>
            </summary>
            <doccompleted/>
        </member>
        <member name="T:ININ.IceLib.Connection.NamespaceDoc">
            <summary>
            <para>The <b>ININ.IceLib.Connection</b> namespace contains classes for connecting with Interaction Center.</para>
            <para>There are a number of classes within the <b>ININ.IceLib.Connection</b> namespace that provide support to the classes mentioned in the preceding summary. Example of the supporting classes are enumerations, event argument classes, and delegates used by events within classes.</para>
            <para>
            <b>Session.</b> The <see cref="T:ININ.IceLib.Connection.Session"/> object is the root of any IceLib connection with the IC server.
            It accepts various settings to describe the session and provides events when the connection state changes.
            </para>
            <para>
            <b>Host Settings.</b> The <see cref="T:ININ.IceLib.Connection.HostSettings"/> is used to specify
            the BridgeHost to which a Session should be established.
            </para>
            <para>
            <b>Authentication Settings.</b> There are a number of object classes that are used to specify
            authentication settings for the Session such as what IC User ID and Password to login with.
            All such objects inherit from <see cref="T:ININ.IceLib.Connection.AuthSettings"/>. Examples of authentication classes are:
            <see cref="T:ININ.IceLib.Connection.ICAuthSettings"/>
            and <see cref="T:ININ.IceLib.Connection.WindowsAuthSettings"/>,
            </para>
            <para>
            <b>Station Settings.</b> There are a number of object classes that are used to specify
            station settings for the Session such as what remote number is serving as the User's station.
            All such objects inherit from <see cref="T:ININ.IceLib.Connection.StationSettings"/>. Examples of station classes are:
            <see cref="T:ININ.IceLib.Connection.WorkstationSettings"/>
            and <see cref="T:ININ.IceLib.Connection.RemoteStationSettings"/>,
            </para><br/>
            <example>
            <note>All "manager" classes found in the IceLib library are designed as
            <i>singletons</i>-classes instantiated only once. For example, to begin working with any of the functionality provided in
            the <c>ININ.IceLib.Interactions.InteractionsManager</c>, you must obtain the instance
            through a call to its <c>GetInstance</c> method.</note><br/>
            <code escaped="false" lang="C#">
            Session session = new Session();
            session.Connect(...);
            InteractionsManager interactionsManager = InteractionsManager.GetInstance(session);
            </code>
            </example>
            </summary>
            <doccompleted/>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.NamespaceDoc">
            <summary>
            <para>The <b>ININ.IceLib.Connection.Extensions</b> namespace contains classes to support advanced connection-related features.</para>
            <para>This includes retrieving <see cref="T:ININ.IceLib.Connection.Extensions.ServerParameters"/>, <see cref="T:ININ.IceLib.Connection.Extensions.Security">setting the user's password</see>,
            persisting <see cref="T:ININ.IceLib.Connection.Extensions.CustomProfile">custom settings</see> to the IC server, sending or receiving a <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/>,
            and <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatch">watching for creation of other Sessions</see>.</para>
            </summary>
            <doccompleted/>
        </member>
        <member name="T:ININ.IceLib.TransferProgressChangedEventArgs">
            <summary>
            Members of this class provide data for TransferProgressChanged events.
            </summary>
            <remarks>
            <para>
            This object provides extended information for upload/download transfer events.  It not
            only provides a percent completion (from <see cref="T:System.ComponentModel.ProgressChangedEventArgs"/>),
            but also includes the bytes transferred and the total used to calculate the percentage.<br/><br/>
            </para>
            <example>
            <code escaped="false" lang="C#">
            // This assumes a pre-existing session and local file.
            RemoteFileHelper remoteFileHelper = new RemoteFileHelper(session);
            string remoteFileName = remoteFileHelper.NewRemoteFileName(ServerFileType.Other);
            remoteFileHelper.UploadProgressChanged += UploadChanged;
            remoteFileHelper.UploadFile(localFileName, remoteFileName);
            ...
            private void UploadChanged(object sender, TransferProgressChangedEventArgs e)
            {
            }
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.TransferProgressChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.TransferProgressChangedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.TransferProgressChangedEventArgs.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.TransferProgressChangedEventArgs"/> class.
            </summary>
            <param name="bytesTransferred">The bytes transferred.</param>
            <param name="totalBytesToTransfer">The total bytes to transfer.</param>
        </member>
        <member name="M:ININ.IceLib.TransferProgressChangedEventArgs.#ctor(System.Int64,System.Int64,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.TransferProgressChangedEventArgs"/> class.
            </summary>
            <param name="bytesTransferred">The bytes transferred.</param>
            <param name="totalBytesToTransfer">The total bytes to transfer.</param>
            <param name="userState">An object that contains state information for this request.</param>
        </member>
        <member name="P:ININ.IceLib.TransferProgressChangedEventArgs.BytesTransferred">
            <summary>
            Gets the number of bytes transferred.
            </summary>
            <value>The number of bytes transferred.</value>
        </member>
        <member name="P:ININ.IceLib.TransferProgressChangedEventArgs.TotalBytesToTransfer">
            <summary>
            Gets the total number of bytes to transfer.
            </summary>
            <value>The total bytes to transfer.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.ServerFileType">
            <summary>
            Specifies constants indicating where to store files in PersonalStorage on the server.
            </summary>
            <remarks>
            This enumeration is used by <see cref="T:ININ.IceLib.Connection.RemoteFileHelper"/> to specify a remote file type.
            </remarks>
            <example>
            The following example demonstrates creation of a remote file name.
            <code lang="C#">
            string remoteFileName = RemoteFileHelper.NewRemoteFileName(ServerFileType.Other);
            </code>
            </example>
        </member>
        <member name="F:ININ.IceLib.Connection.ServerFileType.Other">
            <summary>The destination for this file is unable to be determined based on file type, use the default destination.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ServerFileType.Fax">
            <summary>The destination for this file is the location for Fax files.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ServerFileType.Voicemail">
            <summary>The destination for this file is the location for Voicemail files.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ServerFileType.Email">
            <summary>The destination for this file is the location for Email files.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ServerFileType.Chat">
            <summary>The destination for this file is the location for Chat files.</summary>
        </member>
        <member name="T:ININ.IceLib.Connection.RemoteFileHelper">
            <summary>
            Utility class for transferring personal storage files.
            </summary>
            <remarks>
            <para>
            This helper class transfers personal storage files between local and remote locations. This
            is also used by IceLib for UnifiedMessaging operations involving Voicemail and Fax.
            </para>
            <para></para>
            <example>
            <code escaped="false" lang="C#">
            // This assumes a pre-existing session and local file.
            RemoteFileHelper remoteFileHelper = new RemoteFileHelper(session);
            string remoteFileName = remoteFileHelper.NewRemoteFileName(ServerFileType.Other);
            remoteFileHelper.UploadFile(localFileName, remoteFileName);
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteFileHelper.#ctor(ININ.IceLib.Connection.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RemoteFileHelper"/> class.
            </summary>
            <param name="session">The session.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteFileHelper.NewLocalFileName">
            <summary>
            Creates an empty temporary file in the local temp directory.
            </summary>
            <remarks>
            NOTE: The returned file name has been created with zero size. Do not attempt to create a new file
            with the same name, as it will fail.
            </remarks>
            <returns>The full path to the created temporary file.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteFileHelper.NewRemoteFileName(ININ.IceLib.Connection.ServerFileType)">
            <summary>
            Generates a valid and unique path and file name suitable for uploading to PersonalStorage on the server.
            </summary>
            <param name="serverFileType">ServerFileType that is used to determine destination directory.</param>
            <returns>
            Path name to use for uploading a file of type "ServerFileType".
            This file is not created by default (unlike <see cref="M:ININ.IceLib.Connection.RemoteFileHelper.NewLocalFileName"/>)
            </returns>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteFileHelper.CancelUpload(System.String)">
            <summary>
            Cancels a current file upload (based on the unique remote file name).
            </summary>
            <param name="remoteFileName">The unique server file name to cancel from uploading.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteFileHelper.CancelDownload(System.String)">
            <summary>
            Cancels a current file download (based on the unique remote file name).
            </summary>
            <param name="remoteFileName">The unique server file name to cancel from downloading.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteFileHelper.UploadFile(System.String,System.String)">
            <summary>
            Uploads a local file into the specified remote location, without performing audio codec conversion.
            </summary>
            <param name="localFileName">The local file name.</param>
            <param name="remoteFileName">The remote file name.</param>
            <returns><c>true</c> if the upload succeeded, <c>false</c> if it was cancelled.</returns>
            <remarks>
            Note that some types of server files are periodically purged for space reasons, so an uploaded
            file may not exist for all time in the future.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteFileHelper.UploadFile(System.String,System.String,System.Boolean)">
            <summary>
            Uploads a local file into the specified remote location.
            </summary>
            <remarks>
            Note that some types of server files are periodically purged for space reasons, so an uploaded
            file may not exist for all time in the future.
            </remarks>
            <param name="localFileName">The local file name.</param>
            <param name="remoteFileName">The remote file name.</param>
            <param name="convertAudio">Convert to acceptable audio format. If <c>false</c>, audio playback of this file may fail.</param>
            <returns><c>true</c> if the upload succeeded, <c>false</c> if it was cancelled.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The Session does not have a valid connection.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentException">A file name parameter had 0-length.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteFileHelper.DownloadFile(System.String,System.String,System.Object)">
            <summary>
            Downloads a remote file and saves it to the specified local location.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
            <param name="localFileName">The local file name.</param>
            <param name="userState">An object representing state for all events fired during this operation.</param>
            <returns><c>true</c> if the file was fully downloaded, <c>false</c> if the download was cancelled.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">A file name parameter had 0-length.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteFileHelper.DownloadFile(System.String,System.IO.BinaryWriter,System.Object)">
            <summary>
            Downloads a remote file and saves it to the specified stream.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
            <param name="writer">The writer.</param>
            <param name="userState">An object representing state for all events fired during this operation.</param>
            <returns><c>true</c> if the file was fully downloaded, <c>false</c> if the download was cancelled.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">A file name parameter had 0-length.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="E:ININ.IceLib.Connection.RemoteFileHelper.UploadProgressChanged">
            <summary>
            Occurs when the progress level changes for an uploading file.
            </summary>
            <remarks>
            The UserData property of the <see cref="T:ININ.IceLib.TransferProgressChangedEventArgs"/> will contain 
            the local file name specified in order to track multiple concurrent uploads.
            </remarks>
        </member>
        <member name="E:ININ.IceLib.Connection.RemoteFileHelper.DownloadProgressChanged">
            <summary>
            Occurs when the progress level changes for a downloading file.
            </summary>
            <remarks>
            The UserData property of the <see cref="T:ININ.IceLib.TransferProgressChangedEventArgs"/> will contain 
            the remote file name specified in order to track multiple concurrent downloads.
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.ServerParametersChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:ININ.IceLib.Connection.Extensions.ServerParameters.ServerParametersChanged"/> event.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParametersChangedEventArgs.#ctor(ININ.IceLib.Connection.Extensions.ServerParameter[])">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.ServerParametersChangedEventArgs"/> class.
            </summary>
            <param name="serverParams">The server parameters.</param>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ServerParametersChangedEventArgs.ServerParameters">
            <summary>
            Gets the server parameters.
            </summary>
            <value>The server parameters.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.GetServerParametersCompletedEventArgs">
            <summary>
            Provides data for asynchronous completed events of <see cref="T:ININ.IceLib.Connection.Extensions.ServerParameters"/>.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.GetServerParametersCompletedEventArgs.#ctor(ININ.IceLib.Connection.Extensions.ServerParameter[],System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.GetServerParametersCompletedEventArgs"/> class.
            </summary>
            <param name="serverParams">The server parameters.</param>
            <param name="error">The error, if one occurred.</param>
            <param name="cancelled">If set to <c>true</c> the operation was cancelled.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.GetServerParametersCompletedEventArgs.ServerParameters">
            <summary>
            Gets the server parameters.
            </summary>
            <value>The server parameters.</value>
            <exception cref="T:System.Reflection.TargetInvocationException">The <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error">Error</see> 
            property has been set by the asynchronous operation. The <see cref="P:System.Exception.InnerException">InnerException</see> 
            property holds a reference to Error.</exception>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.ServerParameter">
            <summary>
            Provides information about a server parameter within the Interaction Center system.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameter.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ServerParameter.Name">
            <summary>
            Gets the Name of the server parameter.
            </summary>
            <value>The name of the parameter.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ServerParameter.Exists">
            <summary>
            Gets whether this server parameter exists on the server
            </summary>
            <value><c>true</c> if the server parameter exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ServerParameter.Value">
            <summary>
            Gets the value of this server parameter.
            </summary>
            <value>The value of this parameter.</value>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameterCache.GetInstance(ININ.IceLib.Connection.Session)">
            <summary>
            Gets a ServerParameterCache.
            </summary>
            <param name="session">The Session with which it is associated.</param>
            <returns>The ServerParameterCache.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ServerParameterCache.Session">
            <summary>
            Gets the Session with which this ServerParameterCache is associated.
            </summary>
            <value>The session.</value>`
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.ServerParameters">
            <summary>
            Allows querying and watching of server parameters within the Interaction Center system.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.#ctor(ININ.IceLib.Connection.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.ServerParameters"/> class.
            </summary>
            <param name="session">The Session with which it is associated.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.GetServerParameters(System.String[])">
            <summary>
            Gets a list of server parameters.
            </summary>
            <param name="serverParameterNames">The server parameters being requested.</param>
            <returns>A collection of ServerParameter objects.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The Session is not connected.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.GetServerParametersAsync(System.String[],System.EventHandler{ININ.IceLib.Connection.Extensions.GetServerParametersCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously gets a list of server parameters.
            </summary>
            <param name="serverParameterNames">The server parameters being requested.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.IsWatching">
            <overloads>
            Determines whether a watch is active.
            </overloads>
            
            <summary>
            Determines whether a watch is active.
            </summary>
            <returns>
            	<c>true</c> if a watch is active; otherwise, <c>false</c>.
            </returns>
            <remarks>
            This method determines whether a watch is in place for this instance.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.IsWatching(System.String)">
            <summary>
            Determines whether a watch is active and if the specified value is being watched.
            </summary>
            <param name="serverParamName">Name of the server param.</param>
            <returns>
            	<c>true</c> if a watch is active and the specified value is being watched; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <remarks>
            This method determines whether a watch is in place for this instance and whether the specified value is being watched.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.StartWatching(System.String[])">
            <summary>
            Starts watching.
            </summary>
            <param name="serverParameterNames">The server parameter names.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.InvalidOperationException">The object is already being watched.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.StartWatchingAsync(System.String[],System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously starts watching.
            </summary>
            <param name="serverParameterNames">The server parameter names.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.ChangeWatchedParameters(System.String[],System.String[],System.Boolean)">
            <summary>
            Changes which server parameters are being watched.
            </summary>
            <param name="serverParameterNamesToAdd">The server parameter names to add. (Can be <b>null</b>.)</param>
            <param name="serverParameterNamesToRemove">The server parameter names to remove. (Can be <b>null</b>.)</param>
            <param name="replaceExisting">if set to <c>true</c>, replace the existing list.</param>
            <remarks>
            <para><b>Note: </b>This method silently ignores attempts to add items already being watched or to remove items not being watched.</para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.InvalidOperationException">The object is not being watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.ChangeWatchedParametersAsync(System.String[],System.String[],System.Boolean,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously changes which server parameters are being watched.
            </summary>
            <param name="serverParameterNamesToAdd">The server parameter names to add. (Can be <b>null</b>.)</param>
            <param name="serverParameterNamesToRemove">The server parameter names to remove. (Can be <b>null</b>.)</param>
            <param name="replaceExisting">if set to <c>true</c>, replace the existing existing list.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <remarks>
            <para>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</para>
            <para><b>Note: </b>This method silently ignores attempts to add items already being watched or to remove items not being watched.</para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.StopWatching">
            <summary>
            Stops watching the server parameters.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.InvalidOperationException">The object is not being watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.StopWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously stops watching the server parameters.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.GetCachedServerParameter(System.String)">
            <summary>
            Gets the Server Parameter that is cached.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>The requested server parameter.</returns>
            <exception cref="T:ININ.IceLib.NotCachedException">The requested parameter is not cached.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.GetCachedServerParameters">
            <summary>
            Gets all the server parameters that are cached.
            </summary>
            <returns>The <see cref="T:ININ.IceLib.Connection.Extensions.ServerParameter"/> array.</returns>
            <exception cref="T:System.InvalidOperationException">The object is not being watched.</exception>
        </member>
        <member name="E:ININ.IceLib.Connection.Extensions.ServerParameters.ServerParametersChanged">
            <summary>
            Occurs when a Server Parameter changes.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.CustomMessageType">
            <summary>
            Represents the type of Custom Messages
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.Extensions.CustomMessageType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ServerNotification">
            <summary>
            Reply from a custom handler
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ApplicationRequest">
            <summary>
            A Request sent to another Icelib application
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ApplicationResponse">
            <summary>
            A Response from another Icelib application
            </summary>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.CustomMessageHeader">
            <summary>
            Indentifies the type of a CustomMessage.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessageHeader.#ctor(ININ.IceLib.Connection.Extensions.CustomMessageType,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.CustomMessageHeader"/> class.
            </summary>
            <param name="type">The custom notification type.</param>
            <param name="objectId">The object ID.</param>
            <param name="eventId">The event ID.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessageHeader.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessageHeader.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessageHeader.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.CustomMessageType">
            <summary>
            Gets the type of the custom notification.
            </summary>
            <value>The type of the custom notification.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.EventId">
            <summary>
            Gets the event ID.
            </summary>
            <value>The event ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.ObjectId">
            <summary>
            Gets the object ID for this request.
            </summary>
            <value>The object ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.ObjectType">
            <summary>
            Gets the object type.
            </summary>
            <value>The object type.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.CustomMessage">
            <summary>
            Represents a custom notification message received from the IC server.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.#ctor(ININ.IceLib.Connection.Extensions.CustomMessageHeader)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.CustomMessage"/> class.
            </summary>
            <param name="header">The header for this custom message.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.ReadString">
            <summary>
            Reads a string from the response stream. Do not use with with custom handlers.
            </summary>
            <returns>The string value.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.ReadStrings">
            <summary>
            Reads the strings from the response stream.
            </summary>
            <returns>The string[] value.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.ReadBoolean">
            <summary>
            Reads a bool from the response stream. Do not use with with custom handlers.
            </summary>
            <returns>The bool value.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.ReadChar">
            <summary>
            Reads a char from the response stream. Do not use with with custom handlers.
            </summary>
            <returns>The char value.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.ReadByte">
            <summary>
            Reads a byte from the response stream. Do not use with with custom handlers.
            </summary>
            <returns>The byte value.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.ReadInt16">
            <summary>
            Reads an Int16 from the response stream. Do not use with with custom handlers.
            </summary>
            <returns>The Int16 value.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.ReadInt32">
            <summary>
            Reads an Int32 from the response stream. Do not use with with custom handlers.
            </summary>
            <returns>The Int32 value.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.ReadInt64">
            <summary>
            Reads an Int64 from the response stream. Do not use with with custom handlers.
            </summary>
            <returns>The Int64 value.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.ReadDouble">
            <summary>
            Reads the double. Do not use with with custom handlers.
            </summary>
            <returns>The double value.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomMessage.EventId">
            <summary>
            Gets the event ID.
            </summary>
            <value>The event ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomMessage.ObjectId">
            <summary>
            Gets the object ID for this request.
            </summary>
            <value>The object ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomMessage.ObjectType">
            <summary>
            Gets the object type.
            </summary>
            <value>The object type.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomMessage.Header">
            <summary>
            Gets the header.
            </summary>
            <value>The header.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.CustomRequest">
            <summary>
            Represents a custom notification request sent to the IC server.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.#ctor(ININ.IceLib.Connection.Extensions.CustomMessageHeader)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.CustomRequest"/> class.
            </summary>
            <param name="header">The header for this custom message.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.Write(System.String)">
            <summary>
            Writes the specified data. Do not use with with custom handlers.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.Write(System.String[])">
            <summary>
            Writes the specified data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.Write(System.Boolean)">
            <summary>
            Writes the specified data. Do not use with with custom handlers.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.Write(System.Char)">
            <summary>
            Writes the specified data. Do not use with with custom handlers.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.Write(System.Byte)">
            <summary>
            Writes the specified data. Do not use with with custom handlers.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.Write(System.Int16)">
            <summary>
            Writes the specified data. Do not use with with custom handlers.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.Write(System.Int32)">
            <summary>
            Writes the specified data. Do not use with with custom handlers.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.Write(System.Int64)">
            <summary>
            Writes the specified data. Do not use with with custom handlers.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.Write(System.Double)">
            <summary>
            Writes the specified data. Do not use with with custom handlers.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomRequest.EventId">
            <summary>
            Gets the event ID.
            </summary>
            <value>The event ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomRequest.ObjectId">
            <summary>
            Gets the object ID for this request.
            </summary>
            <value>The object ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomRequest.ObjectType">
            <summary>
            Gets the object type.
            </summary>
            <value>The object type.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomRequest.Header">
            <summary>
            Gets the header.
            </summary>
            <value>The header.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.CustomResponse">
            <summary>
            Represents a custom notification response to reply to the IC server.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.#ctor(ININ.IceLib.Connection.Extensions.CustomMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.CustomResponse"/> class.
            </summary>
            <param name="originalMessage">The original message.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.Write(System.String)">
            <summary>
            Writes the specified data. Do not use with with custom handlers.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.Write(System.String[])">
            <summary>
            Writes the specified data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.Write(System.Boolean)">
            <summary>
            Writes the specified data. Do not use with with custom handlers.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.Write(System.Char)">
            <summary>
            Writes the specified data. Do not use with with custom handlers.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.Write(System.Byte)">
            <summary>
            Writes the specified data. Do not use with with custom handlers.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.Write(System.Int16)">
            <summary>
            Writes the specified data. Do not use with with custom handlers.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.Write(System.Int32)">
            <summary>
            Writes the specified data. Do not use with with custom handlers.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.Write(System.Int64)">
            <summary>
            Writes the specified data. Do not use with with custom handlers.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.Write(System.Double)">
            <summary>
            Writes the specified data. Do not use with with custom handlers.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomResponse.EventId">
            <summary>
            Gets the event ID.
            </summary>
            <value>The event ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomResponse.ObjectId">
            <summary>
            Gets the object ID for this request.
            </summary>
            <value>The object ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomResponse.ObjectType">
            <summary>
            Gets the object type.
            </summary>
            <value>The object type.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomResponse.Header">
            <summary>
            Gets the header.
            </summary>
            <value>The header.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomResponse.OriginalMessage">
            <summary>
            Gets the original message.
            </summary>
            <value>The original message.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.SendCompletedEventArgs">
            <summary>
            Provides data for the SendServerRequest method of <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/> <c>completedCallback</c> delegate of <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/>.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SendCompletedEventArgs.#ctor(ININ.IceLib.Connection.Extensions.CustomMessage,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.SendCompletedEventArgs"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="error">The error, if one occurred.</param>
            <param name="cancelled">If set to <c>true</c> the operation was cancelled.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SendCompletedEventArgs.Response">
            <summary>
            Gets the response.
            </summary>
            <value>The response.</value>
            <exception cref="T:System.Reflection.TargetInvocationException">The <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error">Error</see> 
            property has been set by the asynchronous operation. The <see cref="P:System.Exception.InnerException">InnerException</see> 
            property holds a reference to Error.</exception>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.CustomNotificationReceivedEventArgs">
            <summary>
            Provides definition for the CustomNotificationReceived event of <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/>.
            </summary>
            <doccompleted/>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomNotificationReceivedEventArgs.Message">
            <summary>
            Gets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.CustomNotification">
            <summary>
            Allows sending of CustomRequests, receiving of CustomResponses, and getting notified when CustomMessages are received.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.#ctor(ININ.IceLib.Connection.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/> class.
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponse(ININ.IceLib.Connection.Extensions.CustomRequest)">
            <summary>
            Sends a message, with no response expected.
            </summary>
            <param name="customRequest">The custom request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponseAsync(ININ.IceLib.Connection.Extensions.CustomRequest,System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously sends a message, with no response expected.
            </summary>
            <param name="customRequest">The custom request.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequest(ININ.IceLib.Connection.Extensions.CustomRequest)">
            <summary>
            Sends the specified custom request.
            </summary>
            <param name="customRequest">The custom request.</param>
            <returns>The response.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestAsync(ININ.IceLib.Connection.Extensions.CustomRequest,System.EventHandler{ININ.IceLib.Connection.Extensions.SendCompletedEventArgs},System.Object)">
            <summary>
            Sends the no response asynchronously.
            </summary>
            <param name="customRequest">The custom request.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendApplicationRequest(ININ.IceLib.Connection.Extensions.CustomRequest)">
            <summary>
            Sends the specified custom request.
            </summary>
            <param name="customRequest">The custom request.</param>
            <returns>The response.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendApplicationRequestAsync(ININ.IceLib.Connection.Extensions.CustomRequest,System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)">
            <summary>
            Sends the no response asynchronously.
            </summary>
            <param name="customRequest">The custom request.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendApplicationResponse(ININ.IceLib.Connection.Extensions.CustomResponse)">
            <summary>
            Sends the response.
            </summary>
            <param name="customResponse">The custom response.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendApplicationResponseAsync(ININ.IceLib.Connection.Extensions.CustomResponse,System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)">
            <summary>
            Sends the response asynchronously.
            </summary>
            <param name="customResponse">The custom response.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.StartWatching(ININ.IceLib.Connection.Extensions.CustomMessageHeader[])">
            <summary>
            Sends a request to the server to start watching for messages with the given header information.
            </summary>
            <param name="messageTypes">The notification types.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.ChangeWatchedNotifications(ININ.IceLib.Connection.Extensions.CustomMessageHeader[])">
            <summary>
            Sends a request to the server to change the watched notifications.
            </summary>
            <param name="messageTypes">The message types.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.StopWatching">
            <summary>
            Stops watching for custom messages.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.GetCurrentlyWatchedHeaders">
            <summary>
            Returns the currently watched headers.
            </summary>
            <returns>ReadOnlyCollection of CustomMessageHeader objects</returns>
        </member>
        <member name="E:ININ.IceLib.Connection.Extensions.CustomNotification.CustomNotificationReceived">
            <summary>
            Occurs when CustomNotification is Received from the server
            </summary>
        </member>
        <member name="T:ININ.IceLib.Internal.XmlPasswordPolicy">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.CurrentAge">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.MaxAge">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.MaxNagPeriod">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.MinAge">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.MinLength">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.UniquenessConstraint">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.AllSequentialDigitsAllowed">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.LastPasswordSetTime">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.MaxLoginAttempts">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.AccountLockoutDuration">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.AccountLockoutResetTime">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.LastLockoutTime">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.MustChangePassword">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.MustSetPasswordTime">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.Result">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.ResultString">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.PasswordPolicyAsyncCompletedEventArgs">
            <summary>
            Arguments returned by the <see cref="M:ININ.IceLib.Connection.Extensions.Security.GetPasswordPolicyAsync(System.EventHandler{ININ.IceLib.Connection.Extensions.PasswordPolicyAsyncCompletedEventArgs},System.Object)"/> request.
            </summary>
            <doctask/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.PasswordPolicyAsyncCompletedEventArgs.#ctor(ININ.IceLib.Connection.Extensions.PasswordPolicy,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.PasswordPolicyAsyncCompletedEventArgs"/> class.
            </summary>
            <param name="passwordPolicy">The password policy.</param>
            <param name="error">The error.</param>
            <param name="cancelled">Not currently supported.</param>
            <param name="userState">The user-supplied object to be passed to the asynchronous password policy operation.</param>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicyAsyncCompletedEventArgs.PasswordPolicy">
            <summary>
            Gets or sets the password policy.
            </summary>
            <value>The password policy.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.PasswordPolicy">
            <summary>
            Defines password policy for a given user, for use with the <see cref="T:ININ.IceLib.Connection.Extensions.Security"/> class.
            </summary>
            <doctask/>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.CurrentAge">
            <summary>
            Gets the current age.
            </summary>
            <value>The current age.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.MaximumAge">
            <summary>
            Gets the maximum age.
            </summary>
            <value>The maximum age.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.MaximumNagPeriod">
            <summary>
            Gets the maximum nag period.
            </summary>
            <value>The maximum nag period.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.MinimumAge">
            <summary>
            Gets the minimum age.
            </summary>
            <value>The minimum age.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.MinimumLength">
            <summary>
            Gets the minimum length.
            </summary>
            <value>The minimum length.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.UniquenessConstraint">
            <summary>
            Gets the uniqueness constraint.
            </summary>
            <value>The uniqueness constraint.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.AllSequentialDigitsAllowed">
            <summary>
            Gets a value indicating whether all sequential digits is allowed.
            </summary>
            <value>
            	<c>true</c> if all sequential digits is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.LastPasswordSetTime">
            <summary>
            Gets the last password set time.
            </summary>
            <value>The last password set time.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.MaximumAllowedLoginAttempts">
            <summary>
            Gets the maximum allowed login attempts.
            </summary>
            <value>The maximum allowed login attempts.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.AccountLockoutDuration">
            <summary>
            Gets the account lockout duration.
            </summary>
            <value>The account lockout duration.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.AccountLockoutResetTime">
            <summary>
            Gets the account lockout reset time.
            </summary>
            <value>The account lockout reset time.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.LastLockoutTime">
            <summary>
            Gets the last lockout time.
            </summary>
            <value>The last lockout time.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.MustChangePassword">
            <summary>
            Gets a value indicating whether the user must change their password.
            </summary>
            <value><c>true</c> if the user must change their password; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.MustChangePasswordTime">
            <summary>
            Gets the must change password time.
            </summary>
            <value>The must change password time.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.Security">
            <summary>
            Provides access to the Session user's password policy and allows for setting of the password.
            </summary>
            <remarks>Use this class to get the password policy for a user, or to set the user's password.</remarks>
            <doctask/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.Security.#ctor(ININ.IceLib.Connection.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.Security"/> class.
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.Security.GetPasswordPolicy">
            <summary>
            Gets the password policy for this session user.
            </summary>
            <returns>The <see cref="T:ININ.IceLib.Connection.Extensions.PasswordPolicy"/> for this session user.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.Security.GetPasswordPolicyAsync(System.EventHandler{ININ.IceLib.Connection.Extensions.PasswordPolicyAsyncCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously gets the password policy for this session user.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.Security.SetPassword(System.String,System.String)">
            <summary>
            Sets the password for this session user.
            </summary>
            <param name="oldPassword">The old password.</param>
            <param name="newPassword">The new password.</param>
            <remarks>If the password cannot be set, an <see cref="T:ININ.IceLib.IceLibException"/> containing the error message will be thrown.</remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The password was unable to be set.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.Security.SetPasswordAsync(System.String,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously sets the password for this session user.
            </summary>
            <param name="oldPassword">The old password.</param>
            <param name="newPassword">The new password.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <remarks>
            <para>If the password cannot be set, an <see cref="T:ININ.IceLib.IceLibException"/> containing the error message will be returned in the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error">AsyncCompletedEventArgs.Error</see> property.</para>
            <para>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.If the password cannot be set, an <see cref="T:ININ.IceLib.IceLibException"/> will be thrown containing the error message.</para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.Security.AsyncPasswordPolicyState.#ctor(System.String,System.String,System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.Security.AsyncPasswordPolicyState"/> class.
            </summary>
            <param name="oldPassword">The old password.</param>
            <param name="newPassword">The new pasasword.</param>
            <param name="taskId">The task id.</param>
            <param name="setPasswordCompletedCallback">The completed callback.</param>
            <param name="userState">State of the user.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.Security.AsyncPasswordPolicyState.#ctor(System.Int64,System.EventHandler{ININ.IceLib.Connection.Extensions.PasswordPolicyAsyncCompletedEventArgs},System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.Security.AsyncPasswordPolicyState"/> class.
            </summary>
            <param name="taskId">The task id.</param>
            <param name="getPasswordPolicyCompletedCallback">The completed callback.</param>
            <param name="userState">State of the user.</param>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.Security.AsyncPasswordPolicyState.GetPasswordPolicyCompletedCallback">
            <summary>
            Gets the completed callback.
            </summary>
            <value>The completed callback.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.Security.AsyncPasswordPolicyState.SetPasswordCompletedCallback">
            <summary>
            Gets the set password completed callback.
            </summary>
            <value>The set password completed callback.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.Security.AsyncPasswordPolicyState.OldPassword">
            <summary>
            Gets or sets the old password.
            </summary>
            <value>The old password.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.Security.AsyncPasswordPolicyState.NewPassword">
            <summary>
            Gets or sets the new password.
            </summary>
            <value>The new password.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.Security.AsyncPasswordPolicyState.PasswordPolicy">
            <summary>
            Gets or sets the password policy.
            </summary>
            <value>The password policy.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.GetProfileItemCompletedEventArgs">
            <summary>
            Provides data for the asynchronous completed events of <see cref="T:ININ.IceLib.Connection.Extensions.CustomProfile"/>.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.GetProfileItemCompletedEventArgs.#ctor(ININ.IceLib.Connection.Extensions.ProfileItem,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.GetProfileItemCompletedEventArgs"/> class.
            </summary>
            <param name="profileItem">The profile item.</param>
            <param name="error">The error.</param>
            <param name="cancelled">if set to <c>true</c> [cancelled].</param>
            <param name="userState">State of the user.</param>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.GetProfileItemCompletedEventArgs.ProfileItem">
            <summary>
            Gets the profile item.
            </summary>
            <value>The profile item.</value>
            <exception cref="T:System.Reflection.TargetInvocationException">The <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error">Error</see> 
            property has been set by the asynchronous operation. The <see cref="P:System.Exception.InnerException">InnerException</see> 
            property holds a reference to Error.</exception>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.GetNamespaceContentsCompletedEventArgs">
            <summary>
            Provides data for the asynchronous completed events of <see cref="T:ININ.IceLib.Connection.Extensions.CustomProfile"/>.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.GetNamespaceContentsCompletedEventArgs.#ctor(System.Collections.Generic.IDictionary{System.String,ININ.IceLib.Connection.Extensions.ProfileItem},System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.GetNamespaceContentsCompletedEventArgs"/> class.
            </summary>
            <param name="profileItems">The profile items.</param>
            <param name="error">The error.</param>
            <param name="cancelled">if set to <c>true</c> [cancelled].</param>
            <param name="userState">State of the user.</param>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.GetNamespaceContentsCompletedEventArgs.ProfileItems">
            <summary>
            Gets the profile items.
            </summary>
            <value>The profile items.</value>
            <exception cref="T:System.Reflection.TargetInvocationException">The <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error">Error</see> 
            property has been set by the asynchronous operation. The <see cref="P:System.Exception.InnerException">InnerException</see> 
            property holds a reference to Error.</exception>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.CustomProfile">
            <summary>
            Allows storage of custom application settings to the Interaction Center server.
            </summary>
            <seealso cref="T:ININ.IceLib.Connection.Extensions.CustomProfile"/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.#ctor(ININ.IceLib.Connection.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.CustomProfile"/> class.
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.GetProfileItem(System.String,System.String)">
            <summary>
            Gets the specified profile item.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="key">The key.</param>
            <returns>The requested profile item.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">The namespacePath or key length is zero.</exception>
            <remarks>
            This method will return the value from the cache, if the attribute is cached.
            If the attribute is not being cached, it will send a request to the server and get the attribute.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.GetProfileItemAsync(System.String,System.String,System.EventHandler{ININ.IceLib.Connection.Extensions.GetProfileItemCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously gets the specified profile item.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="key">The key.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">The namespacePath or key length is zero.</exception>
            <remarks>
            <para>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</para>
            <para>
            This method will return the value from the cache, if the attribute is cached.
            If the attribute is not being cached, it will send a request to the server and get the attribute.
            </para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.GetNamespaceContents(System.String)">
            <summary>
            Gets the profile items contained in the requested namespace path.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <returns>The profile items.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">The namespacePath length is zero.</exception>
            <remarks>
            This method will return the value from the cache, if the attribute is cached.
            If the attribute is not being cached, it will send a request to the server and get the attribute.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.GetNamespaceContentsAsync(System.String,System.EventHandler{ININ.IceLib.Connection.Extensions.GetNamespaceContentsCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously gets the profile items contained in the requested namespace path.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">The namespacePath length is zero.</exception>
            <remarks>
            <para>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</para>
            <para>
            This method will return the value from the cache, if the attribute is cached.
            If the attribute is not being cached, it will send a request to the server and get the attribute.
            </para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.SetProfileItem(System.String,System.String,System.Object)">
            <summary>
            Sets the specified profile item.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">The namespacePath or key length is zero.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.SetProfileItemAsync(System.String,System.String,System.Object,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously sets the specified profile item.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="completedCallback">The <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> instance containing the event data.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">The namespacePath or key length is zero.</exception>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.RemoveProfileItem(System.String,System.String)">
            <summary>
            Removes the specified profile item.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="key">The key.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">The namespacePath or key length is zero.</exception>
            <exception cref="T:ININ.IceLib.NotCachedException">The requested parameter is not cached.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.RemoveProfileItemAsync(System.String,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously removes the specified profile item.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="key">The key.</param>
            <param name="completedCallback">The <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> instance containing the event data.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">The namespacePath or key length is zero.</exception>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.RemoveNamespaceContents(System.String)">
            <summary>
            Removes the profile items in the specified namespace.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">If the namespacePath length is zero.</exception>
            <exception cref="T:ININ.IceLib.NotCachedException">The requested parameter is not cached.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.RemoveNamespaceContentsAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously removes the profile items in the specified namespace.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="completedCallback">The <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> instance containing the event data.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">If the namespacePath length is zero.</exception>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.FlushChanges">
            <summary>
            Forces any pending changes to be saved to the server immediately.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.FlushChangesAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously forces any pending changes to be saved to the server.
            </summary>
            <param name="completedCallback">The <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> instance containing the event data.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.ProfileItem">
            <summary>
            Represents a custom application setting that will be persisted to the Interaction Center server.
            </summary>
            <seealso cref="T:ININ.IceLib.Connection.Extensions.CustomProfile"/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProfileItem.#ctor(System.String,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.ProfileItem"/> class.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProfileItem.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProfileItem.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ProfileItem.NamespacePath">
            <summary>
            Gets the namespace path.
            </summary>
            <value>The namespace path.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ProfileItem.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ProfileItem.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.ProxyAuthSettings">
            <summary>
            Passed to a Session in order to authenticate an Interaction Center user that is creating
            a session on behalf of another Interaction Center user.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.Extensions.ProxyAuthSettings"/> object is used to specify
            Interaction Center proxy user authentication settings.  This is used when an IC username and
            password should be used to authenticate the proxy user requesting a Session on behalf of another
            Interaction Center user.
            </para><br/>
            <example>
            <code escaped="false" lang="C#">
            ProxyAuthSettings authSettings = new ProxyAuthSettings("My_IC_ProxyUserID", "My_IC_ProxyPassword", "My_IC_TargetUserId");
            Session session = new Session();
            session.Connect(..., authSettings, ...);
            </code>
            </example>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyAuthSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.ProxyAuthSettings"/> class.
            </summary>
            <remarks>
            This constructor is called by derived class constructors to initialize state in this type.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyAuthSettings.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.ProxyAuthSettings"/> class.
            </summary>
            <param name="proxyUserName">Name of the proxy user.</param>
            <param name="proxyPassword">The proxy password.</param>
            <param name="targetUserName">Name of the target user.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyAuthSettings.Clone">
            <summary>
            Returns an exact copy of this <strong>ProxyAuthSettings</strong> object.
            </summary>
            <returns>A new ICAuthSettings object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyAuthSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyAuthSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ProxyAuthSettings.ProxyUserName">
            <summary>
            Gets or sets the name of the proxy user.
            </summary>
            <value>The name of the proxy user.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ProxyAuthSettings.ProxyPassword">
            <summary>
            Sets the proxy password.
            </summary>
            <value>The proxy password.</value>
            <remarks>Note: There is intentionally no public getter for this property.</remarks>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.SessionWatchedUserChangedEventArgs">
            <summary>
            Provides data for the watched user changed event.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatchedUserChangedEventArgs.#ctor(System.Boolean,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatchedUserChangedEventArgs"/> class.
            </summary>
            <param name="login">if set to <c>true</c>, logged in.</param>
            <param name="userId">The user ID.</param>
            <param name="stationName">Name of the station.</param>
            <param name="machineName">Name of the machine.</param>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchedUserChangedEventArgs.Login">
            <summary>
            Gets a value indicating whether the change was a login.
            </summary>
            <value><c>true</c> if logged in; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchedUserChangedEventArgs.UserId">
            <summary>
            Gets the user ID.
            </summary>
            <value>The user ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchedUserChangedEventArgs.StationName">
            <summary>
            Gets the name of the station.
            </summary>
            <value>The name of the station.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchedUserChangedEventArgs.MachineName">
            <summary>
            Gets the name of the machine.
            </summary>
            <value>The name of the machine.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.SessionWatchType">
            <summary>
            Describes the type of Session Watch to perform.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.Extensions.SessionWatchType.User">
            <summary>
            Watch for a given user.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.Extensions.SessionWatchType.Station">
            <summary>
            Watch for all users on a station.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.Extensions.SessionWatchType.Machine">
            <summary>
            Watch for all users on a machine.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.SessionWatchId">
            <summary>
            Identifies a watched session for the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatch"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatchId.#ctor(ININ.IceLib.Connection.Extensions.SessionWatchType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatchId"/> class.
            </summary>
            <param name="watchType">Type of the watch.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatchId.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatchId.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatchId.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchId.WatchType">
            <summary>
            Gets the type of the watch.
            </summary>
            <value>The type of the watch.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchId.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.SessionWatchSettings">
            <summary>
            Describes session, station, and machine data for a watched session.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatchSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatchSettings"/> class.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchSettings.SessionSettings">
            <summary>
            Gets the session settings.
            </summary>
            <value>The session settings.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchSettings.StationSettings">
            <summary>
            Gets the station settings.
            </summary>
            <value>The station settings.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchSettings.UserName">
            <summary>
            Gets the name of the user.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchSettings.SessionWatchId">
            <summary>
            Gets the session watch ID. This is used to correlate user session information
            watch a session watch.
            </summary>
            <value>The session watch ID.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs">
            <summary>
            Provides data for the asynchronous completed events of <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatch"/>.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{ININ.IceLib.Connection.Extensions.SessionWatchSettings},System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs"/> class.
            </summary>
            <param name="sessionWatchSettings">The session watch settings.</param>
            <param name="error">The error, if one occurred.</param>
            <param name="cancelled">If set to <c>true</c> the operation was cancelled.</param>
            <param name="userState">An object that contains state information for this request.</param>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs.SessionWatchSettings">
            <summary>
            Gets the session watch settings.
            </summary>
            <value>The session watch settings.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.SessionWatch">
            <summary>
            Allows watching for login/logout events for users, all users on a station, or all users on a computer.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.#ctor(ININ.IceLib.Connection.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatch"/> class.
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.IsWatching">
            <overloads>
            Determines whether a watch is active.
            </overloads>
            
            <summary>
            Determines whether a watch is active.
            </summary>
            <returns>
            	<c>true</c> if a watch is active; otherwise, <c>false</c>.
            </returns>
            <remarks>
            This method determines whether a watch is in place for this instance.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.IsWatching(ININ.IceLib.Connection.Extensions.SessionWatchId)">
            <summary>
            Determines whether a watch is active and if the specified value is being watched.
            </summary>
            <param name="watchId">The scoped identifier.</param>
            <returns>
            	<c>true</c> if a watch is active and the specified value is being watched; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <remarks>
            This method determines whether a watch is in place for this instance and whether the specified value is being watched.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.StartWatching(ININ.IceLib.Connection.Extensions.SessionWatchId[])">
            <summary>
            Sets a watch for login/logout events for users, all users on a station, or all users on a computer.
            </summary>
            <param name="watchIds">The scoped identifiers for all watches.</param>
            <returns>The session watch settings.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.InvalidOperationException">The object is already being watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.StartWatchingAsync(ININ.IceLib.Connection.Extensions.SessionWatchId[],System.EventHandler{ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs},System.Object)">
            <summary>
            Asynchronously sets a watch for login/logout events for users, all users on a station, or all users on a computer.
            </summary>
            <param name="watchIds">The scoped identifiers for all watches.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <remarks>When completed, the completedCallback is raised on a thread appropriate to the application-model, such as the GUI thread in a UI application.</remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.StopWatching">
            <summary>
            Stops all watches.
            </summary>
            <exception cref="T:System.InvalidOperationException">The object is not being watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.StopWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously stops all watches.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <remarks>When completed, the completedCallback is raised on a thread appropriate to the application-model, such as the GUI thread in a UI application.</remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.ChangeWatchedSessions(ININ.IceLib.Connection.Extensions.SessionWatchId[],ININ.IceLib.Connection.Extensions.SessionWatchId[],System.Boolean)">
            <summary>
            Changes the list of users, stations, and computers to watch for user login/logout events.
            </summary>
            <param name="sessionWatchIdsToAdd">The session watch IDs to add. (Can be <b>null</b>.)</param>
            <param name="sessionWatchIdsToRemove">The session watch IDs to remove. (Can be <b>null</b>.)</param>
            <param name="replaceExisting">if set to <c>true</c>, replace the existing existing list.</param>
            <returns>The session watch settings.</returns>
            <remarks>
            <para><b>Note: </b>This method silently ignores attempts to add items already being watched or to remove items not being watched.</para>
            </remarks>
            <exception cref="T:System.InvalidOperationException">The object is not being watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.ChangeWatchedSessionsAsync(ININ.IceLib.Connection.Extensions.SessionWatchId[],ININ.IceLib.Connection.Extensions.SessionWatchId[],System.Boolean,System.EventHandler{ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs},System.Object)">
            <summary>
            Asynchronously changes the list of users, stations, and computers to watch for user login/logout events.
            </summary>
            <param name="sessionWatchIdsToAdd">The session watch IDs to add. (Can be <b>null</b>.)</param>
            <param name="sessionWatchIdsToRemove">The session watch IDs to remove. (Can be <b>null</b>.)</param>
            <param name="replaceExisting">if set to <c>true</c>, replace the existing existing list.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <remarks>
            <para>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</para>
            <para><b>Note: </b>This method silently ignores attempts to add items already being watched or to remove items not being watched.</para>
            </remarks>
        </member>
        <member name="E:ININ.IceLib.Connection.Extensions.SessionWatch.SessionWatchedUserChanged">
            <summary>
            Occurs when a Session starts or stops for a watched user, station, or machine.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState.#ctor(System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState"/> class.
            </summary>
            <param name="taskId">The task ID.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState">State of the user.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState.#ctor(ININ.IceLib.Connection.Extensions.SessionWatchId[],System.Int64,System.EventHandler{ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs},System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState"/> class.
            </summary>
            <param name="watchIds">The watch IDs.</param>
            <param name="taskId">The task ID.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState">State of the user.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState.#ctor(ININ.IceLib.Connection.Extensions.SessionWatchId[],ININ.IceLib.Connection.Extensions.SessionWatchId[],System.Boolean,System.Int64,System.EventHandler{ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs},System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState"/> class.
            </summary>
            <param name="watchIdsToAdd">The watch ids to add.</param>
            <param name="watchIdsToRemove">The watch ids to remove.</param>
            <param name="replaceExisting">if set to <c>true</c> to replace existing.</param>
            <param name="taskId">The task ID.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState">State of the user.</param>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState.WatchIds">
            <summary>
            Gets or sets the watch IDs.
            </summary>
            <value>The watch IDs.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState.WatchIdsToAdd">
            <summary>
            Gets or sets the watch IDs to add.
            </summary>
            <value>The watch IDs to add.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState.WatchIdsToRemove">
            <summary>
            Gets or sets the watch IDs to remove.
            </summary>
            <value>The watch IDs to remove.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState.ReplaceExisting">
            <summary>
            Gets or sets a value indicating whether to replace existing.
            </summary>
            <value><c>true</c> if should replace existing; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState.CompletedCallback">
            <summary>
            Gets the completed callback.
            </summary>
            <value>The completed callback.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState.WatchCompletedCallback">
            <summary>
            Gets the watch completed callback.
            </summary>
            <value>The watch completed callback.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState.SessionWatchSettings">
            <summary>
            Gets or sets the session watch settings.
            </summary>
            <value>The session watch settings.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchCache.WatchCount">
            <summary>
            Gets the number of watchers.
            </summary>
            <value>The watch count.</value>
        </member>
    </members>
</doc>
