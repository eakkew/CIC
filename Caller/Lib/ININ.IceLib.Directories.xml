<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ININ.IceLib.Directories</name>
    </assembly>
    <members>
        <member name="T:ININ.IceLib.Directories.ContactDirectoryPagedWatchImpl">
            <summary>
            Internal support for the directory filtered view interface
            </summary>
        </member>
        <member name="T:ININ.IceLib.Directories.IPagedWatchImpl">
            <summary>
            Shared interface for different types of paged watches
            </summary>
        </member>
        <member name="T:ININ.IceLib.Directories.ContactDirectoryPagedWatchImpl.NotificationInfo">
            <summary>
            Use this class to capture the pertinent information from the
            eThinManagerEvt_FilteredContact* (added, updated, deleted) change events.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Directories.ContactDirectoryPagedWatch24Impl">
            <summary>
            The CIC 2.4 compatible object to perform paging.
            Here all paging is done client side making use of the shared
            ContactDirectory cache.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Directories.CompressedString.String">
            <summary>
            Gets the string from the compressed data. A set will store the string as compressed data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:ININ.IceLib.Directories.TrackerFilterAttribute">
            <summary>
            Tracker filter attribute.
            </summary>
            <doctask/>
        </member>
        <member name="M:ININ.IceLib.Directories.TrackerFilterAttribute.#ctor">
            <summary>
            Initializes a new instance of the TrackerFilterAttribute class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Directories.TrackerFilterAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the TrackerFilterAttribute class.
            </summary>
            <param name="attributeId">The attribute id.</param>
            <param name="attributeValue">The attribute value.</param>
        </member>
        <member name="P:ININ.IceLib.Directories.TrackerFilterAttribute.AttributeId">
            <summary>
            Gets or sets the attribute ID.
            </summary>
            <value>The attribute ID.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.TrackerFilterAttribute.Value">
            <summary>
            Gets or sets the attribute value.
            </summary>
            <value>The attribute value.</value>
        </member>
        <member name="T:ININ.IceLib.Directories.TrackerFilterSettings">
            <summary>
            Tracker filter settings.
            </summary>
            <doctask/>
        </member>
        <member name="M:ININ.IceLib.Directories.TrackerFilterSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Directories.TrackerFilterSettings"/> class.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Directories.TrackerFilterSettings.OrganizationId">
            <summary>
            Gets or sets the organization ID.
            </summary>
            <value>The organization ID.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.TrackerFilterSettings.LocationId">
            <summary>
            Gets or sets the location ID.
            </summary>
            <value>The location ID.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.TrackerFilterSettings.IndividualTypeId">
            <summary>
            Gets or sets the individual type ID.
            </summary>
            <value>The individual type ID.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.TrackerFilterSettings.Department">
            <summary>
            Gets or sets the department.
            </summary>
            <value>The department.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.TrackerFilterSettings.AddressTypeId">
            <summary>
            Gets or sets the address type ID.
            </summary>
            <value>The address type ID.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.TrackerFilterSettings.AddressCity">
            <summary>
            Gets or sets the address city.
            </summary>
            <value>The address city.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.TrackerFilterSettings.AddressState">
            <summary>
            Gets or sets the address state.
            </summary>
            <value>The state of the address.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.TrackerFilterSettings.AddressZip">
            <summary>
            Gets or sets the address zip code.
            </summary>
            <value>The address zip code.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.TrackerFilterSettings.AddressCountry">
            <summary>
            Gets or sets the address country.
            </summary>
            <value>The address country.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.TrackerFilterSettings.AttributeValues">
            <summary>
            Gets the attribute values collection. This is a collection of <see cref="T:ININ.IceLib.Directories.TrackerFilterAttribute"/>.
            </summary>
            <value>The attribute values collection.</value>
        </member>
        <member name="M:ININ.IceLib.Directories.IWatchedObjectHelper`1.HelperMergeDiff(`0,`0)">
            <summary>
            Do a difference of the two objects and merge any data.
            </summary>
            <param name="origObject">The original object.</param>
            <param name="newObject">The new cache object we want to merge in.</param>
            <returns>
            A list of changed properties. Null if there were no changes.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Directories.IWatchedObjectHelper`1.ObjectKey(`0)">
            <summary>
            Return the key string for the given object 
            </summary>
            <param name="entry"></param>
            <returns>A string</returns>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoriesWatcherCache`3.#ctor">
             <summary>
             Initializes a new instance of the DirectoriesWatcherCache class.
             </summary>
            
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoriesWatcherCache`3.IsWatching(System.Object)">
            <summary>
            Determines whether the specified watcher is watching.
            </summary>
            <param name="watcher">The watcher.</param>
            <returns><c>true</c> if the specified watcher is watching; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoriesWatcherCache`3.GetSafeObjectWatchersList">
            <summary>
            Get a copy of the list of watchers.
            </summary>
            <returns>The list of watchers.</returns>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoriesWatcherCache`3.StartWatching(System.Object,ININ.IceLib.Internal.AsyncTaskState)">
            <summary>
            Starts a watcher, potentially resulting in a round trip to the server.
            </summary>
            <param name="watcher">The watcher.</param>
            <param name="taskState">State of the task.</param>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoriesWatcherCache`3.StopWatching(System.Object)">
            <summary>
            Stops a watcher, potentially resulting in a round trip to the server.
            </summary>
            <param name="watcher">The watcher.</param>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoriesWatcherCache`3.UpdateObjectInCache(System.String,`0,`0@,System.Collections.Generic.List{System.Enum}@)">
            <summary>
            Updates the object in cache.
            </summary>
            <param name="objectName">Name of the object.</param>
            <param name="newEntry">The new entry.</param>
            <param name="changedObject">A reference to the changed (or new) object. 
            This is only set if the disposition is Added or Changed.</param>
            <param name="changedProperties">The changed properties.
            This is only set if the dispostion is Changed.</param>
            <returns>The update disposition - either Added or Changed.</returns>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoriesWatcherCache`3.StartWatchingImpl">
            <summary>
            Start watching implementation for inheriting classes.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoriesWatcherCache`3.StartWatchingImpl(ININ.IceLib.Internal.AsyncTaskState,System.Boolean@)">
            <summary>
            Start watching implementation for inheriting classes.
            </summary>
            <param name="asyncState">State of the async.</param>
            <param name="cancelled">If set to <c>true</c> the watch is cancelled.</param>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoriesWatcherCache`3.StopWatchingImpl">
            <summary>
            Stop watching implementation for inheriting class.
            This means that there are no more objects to watch.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoriesWatcherCache`3.WatchCount">
            <summary>
            Gets the number of watchers.
            </summary>
            <value>The watch count.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoriesWatcherCache`3.Watchers">
            <summary>
            Gets the watchers.
            </summary>
            <value>The watchers.</value>
            <remarks>
            Be sure to lock while accessing the watcher list.
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Directories.ContactDirectoryWatchSettings">
            <summary>
            This class represents settings for a directory watch that
            provides a filtered and sorted view of contact entries. This
            view can be returned in increments or pages at a time.
            </summary>
            <remarks>
            <para>
            The initial watch is established supplying an instance of this object
            to <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatching(ININ.IceLib.Directories.ContactDirectoryWatchSettings)"/>
            or <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatchingAsync(ININ.IceLib.Directories.ContactDirectoryWatchSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.
            This class represents an immutable object. Once it is created it can not be
            modified. Convenience methods (Next and Previous for example,) are available to create slightly altered versions
            of this object that can be used to change the watch via <see cref="M:ININ.IceLib.Directories.ContactDirectory.ChangeWatched(ININ.IceLib.Directories.ContactDirectoryWatchSettings)"/>
            or <see cref="M:ININ.IceLib.Directories.ContactDirectory.ChangeWatchedAsync(ININ.IceLib.Directories.ContactDirectoryWatchSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.
            </para>
            <para>
            Once the start or change watch is completed, the watched values are available via a
            call to <see cref="M:ININ.IceLib.Directories.ContactDirectory.GetList"/>.
            </para>
            </remarks>
            <example>
            <code lang="C#">
            Collection&lt;ContactFilterItem&gt; filterItems = new Collection&lt;ContactFilterItem&gt;();
            Collection&lt;ContactSortItem&gt; sortItems = new Collection&lt;ContactSortItem&gt;();
            
            // Match all entries that are part of Acme Inc, with a last name starting with the letter 'S'.
            filterItems.Add( new ContactFilterMatch(ContactProperty.Company, ContactFilterType.Exact, "Acme Inc.") );
            filterItems.Add( new ContactFilterMatch(ContactProperty.LastName, ContactFilterType.Prefix, "S") ); 
            
            sortItems.Add( new ContactSortItem(ContactProperty.LastName, ListSortDirection.Ascending) );
            sortItems.Add( new ContactSortItem(ContactProperty.FirstName, ListSortDirection.Descending) );
            
            ContactDirectoryWatchSettings watchSettings = new ContactDirectoryWatchSettings(0, 50, filterItems, sortItems);
            
            _ContactDirectory.StartWatchingAsync( watchSettings );
            </code>
            </example>
            <doccompleted/>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactDirectoryWatchSettings.All">
            <summary>
            Return a <see cref="T:ININ.IceLib.Directories.ContactDirectoryWatchSettings"/> instance that gets all contact entries with no sorting applied.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectoryWatchSettings.#ctor(System.Int32,System.Int32,System.Collections.Generic.IList{ININ.IceLib.Directories.ContactSortItem})">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Directories.ContactDirectoryWatchSettings"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Directories.ContactDirectoryWatchSettings"/> class.
            </summary>
            <param name="index">The starting index.</param>
            <param name="count">The count of the number of contact entries to retrieve.</param>
            <param name="sortItems">The sorting.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">A parameter has an invalid value.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectoryWatchSettings.#ctor(System.Int32,System.Int32,System.Collections.Generic.IList{ININ.IceLib.Directories.ContactFilterItem},System.Collections.Generic.IList{ININ.IceLib.Directories.ContactSortItem})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Directories.ContactDirectoryWatchSettings"/> class.
            </summary>
            <param name="index">The starting index.</param>
            <param name="count">The count of the number of contact entries to retrieve.</param>
            <param name="filterItems">The filters.</param>
            <param name="sortItems">The sorting.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">A parameter has an invalid value.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectoryWatchSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectoryWatchSettings.NewCount(System.Int32)">
            <summary>
            Sets a new count for the watch.
            </summary>
            <param name="newCountValue">The new count. Must be greater than zero.</param>
            <returns>
            A new <see cref="T:ININ.IceLib.Directories.ContactDirectoryWatchSettings"/> that is equivalent to this instance, but has the Count value
            set to the new value.
            </returns>
            <exception cref="T:System.ArgumentException">A parameter has an invalid value.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectoryWatchSettings.Jump(System.Int32)">
            <summary>
            Sets a new index value.
            </summary>
            <param name="index">The new starting index. Must be greater than or equal to zero.</param>
            <returns>
            A new <see cref="T:ININ.IceLib.Directories.ContactDirectoryWatchSettings"/> that is equivalent to this instance, but has the Count value
            set to the new value.
            </returns>
            <exception cref="T:System.ArgumentException">A parameter has an invalid value.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectoryWatchSettings.First">
            <summary>
            Sets the index to the first page.
            </summary>
            <returns>
            A new <see cref="T:ININ.IceLib.Directories.ContactDirectoryWatchSettings"/> that is equivalent to this instance, but has the Index value
            increased set to zero, the start of the first page.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectoryWatchSettings.Next">
            <summary>
            Sets the index to the next logical value.
            </summary>
            <returns>
            A new <see cref="T:ININ.IceLib.Directories.ContactDirectoryWatchSettings"/> that is equivalent to this instance, but has the Index value
            increased by the Count value. If the new Index were to exceed the MaxCount the
            returned instance will set the Index to MaxCount.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectoryWatchSettings.Previous">
            <summary>
            Sets the index to the previous logical value.
            </summary>
            <returns>
            A new <see cref="T:ININ.IceLib.Directories.ContactDirectoryWatchSettings"/> that is equivalent to this instance, but has the Index value
            decreased by the value of Count. If the new Index is less than zero, then the
            Index will be set to zero.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectoryWatchSettings.NewFilter(System.Collections.Generic.IList{ININ.IceLib.Directories.ContactFilterItem})">
            <summary>
            Sets a new filter.
            </summary>
            <param name="filterItems">The new filters.</param>
            <returns>
            A new <see cref="T:ININ.IceLib.Directories.ContactDirectoryWatchSettings"/> that is equivalent to this instance, but has the Count value
            set to the new value.
            </returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectoryWatchSettings.NewSort(System.Collections.Generic.IList{ININ.IceLib.Directories.ContactSortItem})">
            <summary>
            Sets a new sort.
            </summary>
            <param name="sortItems">The new sorting.</param>
            <returns>
            A new <see cref="T:ININ.IceLib.Directories.ContactDirectoryWatchSettings"/> that is equivalent to this instance, but has the Count value
            set to the new value.
            </returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactDirectoryWatchSettings.Index">
            <summary>
            Gets the contact entry index to start retrieving.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactDirectoryWatchSettings.Count">
            <summary>
            Gets the count of contact entries to retrieve.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactDirectoryWatchSettings.MaxCount">
            <summary>
            Gets the max count.
            </summary>
            <value>The max count.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactDirectoryWatchSettings.FilterItems">
            <summary>
            Gets the filter items.
            </summary>
            <value>The filter items.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactDirectoryWatchSettings.SortItems">
            <summary>
            Gets the sort items.
            </summary>
            <value>The sort items.</value>
        </member>
        <member name="T:ININ.IceLib.Directories.ContactFilterType">
            <summary>
            Represents the type of pattern matching that should be performed.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactFilterType.Exact">
            <summary>
            The filter matches a property exactly.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactFilterType.Prefix">
            <summary>
            The filter matches the prefix of a property's value.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactFilterType.Exists">
            <summary>
            The filter matches if the property exists. That is it has a non-empty value.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactFilterType.Empty">
            <summary>
            The filter matches if the property value is empty. That is it does not have a value.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Directories.ContactFilterItem">
            <summary>
            Serves as a base class for items that filter contact entries that should be returned.
            </summary>
            <doccompleted/>
        </member>
        <member name="T:ININ.IceLib.Directories.ContactFilterGroup">
            <summary>
            Represents a grouping of filter items.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactFilterGroup.#ctor(System.Collections.Generic.IList{ININ.IceLib.Directories.ContactFilterItem},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Directories.ContactFilterGroup"/> class.
            </summary>
            <param name="filterItems">The filter items.</param>
            <param name="matchAny">if set to <c>true</c> matches if any contained <see cref="T:ININ.IceLib.Directories.ContactFilterItem"/> matches.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactFilterGroup.FilterItems">
            <summary>
            Gets the filter items.
            </summary>
            <value>The filter items.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactFilterGroup.MatchAny">
            <summary>
            Gets a value indicating whether the group matches for any contained match.
            </summary>
            <value><c>true</c> if matches if any contained ContactFilterItem matches; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:ININ.IceLib.Directories.ContactFilterMatch">
            <summary>
            Represents an item to filter contact entries that should be returned.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactFilterMatch.#ctor(ININ.IceLib.Directories.ContactProperty,ININ.IceLib.Directories.ContactFilterType,System.String)">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Directories.ContactFilterMatch"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Directories.ContactFilterMatch"/> class for a single expression.
            </summary>
            <param name="property">The contact property.</param>
            <param name="filterType">Type of the filter.</param>
            <param name="filterExpression">The filter expression.</param>
            <remarks>The filter will match if any of the specified expressions matches according to the
            <paramref name="property"/> and <paramref name="filterType"/>.</remarks>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactFilterMatch.#ctor(ININ.IceLib.Directories.ContactProperty,ININ.IceLib.Directories.ContactFilterType,System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Directories.ContactFilterMatch"/> class for multiple expressions.
            </summary>
            <param name="property">The contact property.</param>
            <param name="filterType">Type of the filter.</param>
            <param name="filterExpressions">The filter expressions.</param>
            <remarks>The filter will match if any of the specified expressions matches according to the
            <paramref name="property"/> and <paramref name="filterType"/>.</remarks>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactFilterMatch.Property">
            <summary>
            Gets the property.
            </summary>
            <value>The property.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactFilterMatch.FilterType">
            <summary>
            Gets the type of the filter.
            </summary>
            <value>The type of the filter.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactFilterMatch.FilterExpressions">
            <summary>
            Gets the filter expressions.
            </summary>
            <value>The filter expressions.</value>
        </member>
        <member name="T:ININ.IceLib.Directories.ContactSortItem">
            <summary>
            Represents an item to sort on a particular contact entry property.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactSortItem.#ctor(ININ.IceLib.Directories.ContactProperty,System.ComponentModel.ListSortDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Directories.ContactSortItem"/> class.
            </summary>
            <param name="property">The contact entry property.</param>
            <param name="sortDirection">The sort direction.</param>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactSortItem.Property">
            <summary>
            Gets the property.
            </summary>
            <value>The property.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactSortItem.SortDirection">
            <summary>
            Gets the sort direction (ascending or descending).
            </summary>
            <value>The sort direction.</value>
        </member>
        <member name="T:ININ.IceLib.Directories.ContactDirectoryParameters">
            <summary>
            Represents parameter settings used to govern how contact directory watches are performed.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Directories.CDFileHelper.Instance">
            <summary>
            Return the single instance of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:ININ.IceLib.Directories.CDFileHelper.HelperMakeFileName(ININ.IceLib.Directories.ContactDirectoryParameters)">
            <summary>
            Get the file name based on the parameters present (server, directory, user)
            </summary>
            <param name="parameters"></param>
            <returns>The file name. Null if it can't be made.</returns>
        </member>
        <member name="T:ININ.IceLib.Directories.ContactDirectoryFile.Cryptor">
            <summary>
            Helps with getting encryption for the files we stream
            
            When encrypting this will always return a random key.
            This key needs to be supplied when decrypting.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Directories.ContactDirectoryCacheImpl">
            <summary>
            Internal class to manage watchers and directory contacts.
            The internal entry for a directory contact is the ContactEntryImpl object.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Directories.ContactDirectory">
            <summary>
            Represents a contact directory. An instance of this object is used
            to obtain a watched list of contact entries and perform operations on them.
            </summary>
            <remarks>
            <note>Contact directories contain lists of people and contact information about those people. In 
            Interaction Client, the default directory for private contacts is named <i>IC Private Contacts</i>, 
            the default directory for public contacts is <i>IC Public Contacts</i>, and the directory which 
            holds all company employees is the <i>Company Directory</i>.</note>
            <para>A <i>ContactDirectory object</i> manages a watched list of <see cref="T:ININ.IceLib.Directories.ContactEntry"/> objects.
            In addition, there are methods to create, update or delete contact entries.
            The directory watched is identified by a specific directory
            as identified by a <see cref="T:ININ.IceLib.Directories.DirectoryMetadata"/> object instance. 
            </para>
            <para><B>Getting a list of watched objects</B></para>
            <para>
            Each watched object is maintained internally within a cache. The cache is constructed so that only
            one instance of a <see cref="T:ININ.IceLib.Directories.ContactEntry"/> object 
            is shared between other instances of a <see cref="T:ININ.IceLib.Directories.ContactDirectory"/> object.
            </para>
            <para>
            This object contains synchronous as well as asynchronous counterpart methods for any method that could
            potentially block a thread by running a lengthy operation.
            Synchronous methods block the thread that they are performed on.
            Asynchronous methods will not block. When an asynchronous method completes an 
            event is raised on a thread appropriate to the application-model, such as the GUI thread in a UI application.
            By convention, synchronous calls are invoked by a method; for example: DoSomething(). Their asynchronous counterparts
            are invoked via DoSomethingAsync() with the result returned in a DoSomethingCompleted event.
            </para>
            <para>
            A start watch, via a call to <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatching"/> or <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>, is
            required to retrieve the available contact entries from the IC Server. Once the start watch has successfully completed, call
            <see cref="M:ININ.IceLib.Directories.ContactDirectory.GetList"/> to obtain the available contact entries.
            </para>
            <para>
            Change notifications to the list of contact entries can be subscribed to via the <see cref="E:ININ.IceLib.Directories.ContactDirectory.ContactDirectoryChanged"/> event handler.
            Change events are <B>not</B> raised on a thread appropriate to the application mode, such as the GUI thread in a UI application.
            </para>
            <para>
            A watch can be stopped via a call to <see cref="M:ININ.IceLib.Directories.ContactDirectory.StopWatching"/> or <see cref="M:ININ.IceLib.Directories.ContactDirectory.StopWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.
            </para>
            <para><B>Viewed watches</B></para>
            <para>
            A viewed watch allows only a subset of the contact entries to be retrieved from the IC server. A viewed watch is established by
            creating a watch settings instance, <see cref="T:ININ.IceLib.Directories.ContactDirectoryWatchSettings"/>, which specifies the start index,
            count of entries to return, a filter and a sort order. The viewed watch is established via 
            a call to watch aware start watch methods - <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatching(ININ.IceLib.Directories.ContactDirectoryWatchSettings)"/> 
            or <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatchingAsync(ININ.IceLib.Directories.ContactDirectoryWatchSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.
            </para>
            <para>
            Once a viewed start watch has been established, the view can be changed by a call 
            to <see cref="M:ININ.IceLib.Directories.ContactDirectory.ChangeWatched(ININ.IceLib.Directories.ContactDirectoryWatchSettings)"/>
            or <see cref="M:ININ.IceLib.Directories.ContactDirectory.ChangeWatchedAsync(ININ.IceLib.Directories.ContactDirectoryWatchSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>. Typically,
            the watch settings can be adjusted to advance to the <see cref="M:ININ.IceLib.Directories.ContactDirectoryWatchSettings.Next"/> page
            or go back to the <see cref="M:ININ.IceLib.Directories.ContactDirectoryWatchSettings.Previous"/> page.
            </para>
            <para>
            Change notifications to the viewed list of contact entries can be subscribed to via the <see cref="E:ININ.IceLib.Directories.ContactDirectory.ContactDirectoryChanged"/> event handler.
            Note that only change events for objects in the watch settings view will be reported. In particular, 
            objects might appear or disappear in scope based on the filter or sort criteria. No more than 
            <see cref="P:ININ.IceLib.Directories.ContactDirectoryWatchSettings.Count"/> contact entries will be maintained. So, for example, 
            if an item is added to the view, an item will also be removed from the view to keep the Count unchanged.
            </para>
            <para><B>Contact entry updates</B></para>
            <para>
            Contact entries can be created, updated and deleted with the following synchronous and asynchronous methods.
            <list type="bullet">
            <item><see cref="M:ININ.IceLib.Directories.ContactDirectory.CreateContactEntry(ININ.IceLib.Directories.EditableContactEntry)"/> or <see cref="M:ININ.IceLib.Directories.ContactDirectory.CreateContactEntryAsync(ININ.IceLib.Directories.EditableContactEntry,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/></item>
            <item><see cref="M:ININ.IceLib.Directories.ContactDirectory.UpdateContactEntry(ININ.IceLib.Directories.EditableContactEntry)"/> or <see cref="M:ININ.IceLib.Directories.ContactDirectory.UpdateContactEntryAsync(ININ.IceLib.Directories.EditableContactEntry,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/></item>
            <item><see cref="M:ININ.IceLib.Directories.ContactDirectory.DeleteContactEntry(System.String)"/> or <see cref="M:ININ.IceLib.Directories.ContactDirectory.DeleteContactEntryAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/></item>
            </list>
            </para>
            <para>
            A <see cref="T:ININ.IceLib.Directories.EditableContactEntry"/> instance is required for creating and updating contact entries.
            </para>
            <para><B>Speed dial contact entries</B></para>
            <para>
            A speed dial directory represents a link to another contact entry in another directory.
            When viewing the properties of a speed dial contact entry you are actually viewing the properties of
            the linked contact entry. Within the speed dial directory an alternate primary number designation may be specified.
            The <see cref="P:ININ.IceLib.Directories.ContactEntry.PrimaryNumberDesignation"/> is the default number to call.
            </para>
            <para>
            Speed dial links can be created, updated, and deleted with the following synchronous or asynchronous methods.
            <list type="bullet">
            <item><see cref="M:ININ.IceLib.Directories.ContactDirectory.CreateSpeedDialLink(ININ.IceLib.Directories.DirectoryMetadata,ININ.IceLib.Directories.ContactEntry,ININ.IceLib.Directories.ContactPrimaryNumberDesignation)"/> or <see cref="M:ININ.IceLib.Directories.ContactDirectory.CreateSpeedDialLinkAsync(ININ.IceLib.Directories.DirectoryMetadata,ININ.IceLib.Directories.ContactEntry,ININ.IceLib.Directories.ContactPrimaryNumberDesignation,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/></item>
            <item><see cref="M:ININ.IceLib.Directories.ContactDirectory.UpdateSpeedDialLink(ININ.IceLib.Directories.ContactEntry,ININ.IceLib.Directories.ContactPrimaryNumberDesignation)"/> or <see cref="M:ININ.IceLib.Directories.ContactDirectory.UpdateSpeedDialLinkAsync(ININ.IceLib.Directories.ContactEntry,ININ.IceLib.Directories.ContactPrimaryNumberDesignation,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/></item>
            <item><see cref="M:ININ.IceLib.Directories.ContactDirectory.DeleteContactEntry(System.String)"/> or <see cref="M:ININ.IceLib.Directories.ContactDirectory.DeleteContactEntryAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/></item>
            </list>
            </para>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.#ctor(ININ.IceLib.Directories.DirectoriesManager,ININ.IceLib.Directories.DirectoryMetadata)">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Directories.ContactDirectory"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Directories.ContactDirectory"/> class.
            </summary>
            <param name="manager">The manager.</param>
            <param name="metadata">The metadata.</param>
            <remarks>
            Contact directory information will be cached on the client side.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.#ctor(ININ.IceLib.Directories.DirectoriesManager,ININ.IceLib.Directories.DirectoryMetadata,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Directories.ContactDirectory"/> class with optional
            client side caching.
            </summary>
            <param name="manager">The manager.</param>
            <param name="metadata">The metadata.</param>
            <param name="enableCaching">if set to <c>true</c> enable caching.</param>
            <remarks>
            Optionally enable client side caching of the contact directory.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.#ctor(ININ.IceLib.Directories.DirectoriesManager,ININ.IceLib.Directories.DirectoryMetadata,ININ.IceLib.Directories.ContactDirectoryPagedWatch24Impl,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Directories.ContactDirectory"/> class.
            This is an internal version used by the paged watch 24.
            </summary>
            <param name="manager">The manager.</param>
            <param name="metadata">The metadata.</param>
            <param name="pagedWatchImpl">The paged watch implementation.</param>
            <param name="enableCaching">Client side caching will be enabled.</param>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.GetEntry(System.String)">
            <summary>
            Gets an entry based on its <see cref="F:ININ.IceLib.Directories.ContactProperty.EntryId"/>.
            </summary>
            <param name="entryId">The <see cref="F:ININ.IceLib.Directories.ContactProperty.EntryId"/></param>
            <returns>Returns null if the entry could not be found.</returns>
            <exception cref="T:System.InvalidOperationException">If a watch is not in progress.</exception>
            <exception cref="T:ININ.IceLib.NotCachedException">A StartWatch has not been called.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.GetList">
            <summary>
            Gets the list of ContactEntry instances watched for a given directory.
            </summary>
            <returns>A list of ContactEntry.</returns>
            <exception cref="T:System.InvalidOperationException">If a watch is not in progress.</exception>
            <exception cref="T:ININ.IceLib.NotCachedException">A StartWatch has not been called.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.GetCachedDirectory(System.String,System.String,System.String)">
            <summary>
            Gets a contact directory from local cache when working offline.
            </summary>
            <param name="userId">The ID of the user for which the directory was cached.</param>
            <param name="icServer">The name of the IC server to which the directory belongs.</param>
            <param name="directoryMetadataId">The directory metadata id. (DirectoryMetaData.Id)</param>
            <returns>A list of contact entries</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">A parameter has an invalid value.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.IsWatching">
            <summary>
            Determines whether a watch is active.
            </summary>
            <returns>
            	<c>true</c> if a watch is active; otherwise, <c>false</c>.
            </returns>
            <remarks>
            This method determines whether a watch is in place for this instance.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.CanCreateEntry">
            <summary>
            Determines whether the user associated with this session can create a new contact entry.
            </summary>
            <returns>
            	<c>true</c> if the user can create a new contact entry; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.CanRefreshContacts">
            <summary>
            Determines wether the user associated with this session can send refresh the contacts in this directory.
            </summary>
            <returns>
            	<c>true</c> if the user can refresh; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.CanDeleteEntry(ININ.IceLib.Directories.ContactEntry)">
            <summary>
            Determines whether the user associated with this session can delete the contact entry.
            </summary>
            <param name="entry">The entry.</param>
            <returns>
            	<c>true</c> if the user can delete the specified entry; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.CanUpdateEntry(ININ.IceLib.Directories.ContactEntry)">
            <summary>
            Determines whether the user associated with this session can update the contact entry.
            </summary>
            <param name="entry">The entry.</param>
            <returns>
            	<c>true</c> if the user can update the specified entry; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.CanUpdatePrimaryNumberDesignation(ININ.IceLib.Directories.ContactEntry)">
            <summary>
            Determines whether the user associated with this session can update the primary number designation for the contact entry.
            </summary>
            <param name="entry">The entry.</param>
            <returns>
            	<c>true</c> if the user can update the specified entry; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.CreateContactEntry(ININ.IceLib.Directories.EditableContactEntry)">
            <summary>
            Creates the contact entry.
            </summary>
            <param name="editableEntry">The editable entry.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">A parameter has an invalid value.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.CreateContactEntryAsync(ININ.IceLib.Directories.EditableContactEntry,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            An asynchronous request to create a contact entry.
            </summary>
            <param name="editableEntry">The editable entry.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">A parameter has an invalid value.</exception>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.UpdateContactEntry(ININ.IceLib.Directories.EditableContactEntry)">
            <summary>
            Updates the contact entry.
            </summary>
            <param name="editableEntry">The editable contact entry.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">A parameter has an invalid value.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.UpdateContactEntryAsync(ININ.IceLib.Directories.EditableContactEntry,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Starts an asynchronous update of a contact entry.
            </summary>
            <param name="editableEntry">The editable entry.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
            <exception cref="T:System.ArgumentException">A parameter has an invalid value.</exception>
            <exception cref="T:System.ArgumentException">A parameter has an invalid value.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.DeleteContactEntry(System.String)">
            <summary>
            Deletes the contact entry.
            </summary>
            <param name="entryId">The entry ID.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.DeleteContactEntryAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            An asynchronous request to delete the contact entry.
            </summary>
            <param name="entryId">The entry ID.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.UpdateSpeedDialLink(ININ.IceLib.Directories.ContactEntry,ININ.IceLib.Directories.ContactPrimaryNumberDesignation)">
            <summary>
            Updates the contact entry link.
            </summary>
            <param name="speedDialEntry">The speed dial entry.</param>
            <param name="primaryNumberDesignation">The primary number designation.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.UpdateSpeedDialLinkAsync(ININ.IceLib.Directories.ContactEntry,ININ.IceLib.Directories.ContactPrimaryNumberDesignation,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Updates the contact entry link asynchronously.
            </summary>
            <param name="speedDialEntry">The speed dial entry.</param>
            <param name="primaryNumberDesignation">The primary number designation.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.CreateSpeedDialLink(ININ.IceLib.Directories.DirectoryMetadata,ININ.IceLib.Directories.ContactEntry,ININ.IceLib.Directories.ContactPrimaryNumberDesignation)">
            <summary>
            Creates a link from a speed dial directory to a contact entry in the current directory.
            The speed dial directory is a directory containing links to other
            directories' contact entries.
            </summary>
            <param name="speedDialDirectoryMetadata">The speed dial directory metadata.</param>
            <param name="linkedContactEntry">The linked contact entry.</param>
            <param name="newLinkPrimaryNumberDesignation">The new link primary number designation.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.CreateSpeedDialLinkAsync(ININ.IceLib.Directories.DirectoryMetadata,ININ.IceLib.Directories.ContactEntry,ININ.IceLib.Directories.ContactPrimaryNumberDesignation,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Creates the speed dial link asynchronously.
            </summary>
            <param name="speedDialDirectoryMetadata">The speed dial directory metadata.</param>
            <param name="linkedContactEntry">The linked contact entry.</param>
            <param name="newLinkPrimaryNumberDesignation">The new link primary number designation.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.RefreshContacts">
            <summary>
            A synchronous method to refesh the contacts in this directory.
            </summary>
            <remarks>
            Results from the refresh are sent as change notifications for non-paged watches.
            For paged watches call <see cref="M:ININ.IceLib.Directories.ContactDirectory.GetList"/> to get items that match the current watch.
            </remarks>
            <exception cref="T:System.InvalidOperationException">A watch was not started.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.RefreshContactsAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            A synchronous method to refresh the contacts in this directory.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <remarks>
            When completed, the <paramref name="completedCallback"/> 
            delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.
            Results from the refresh are sent as change notifications for non-paged watches.
            For paged watches call <see cref="M:ININ.IceLib.Directories.ContactDirectory.GetList"/> to get items that match the current watch.
            </remarks>
            <exception cref="T:System.InvalidOperationException">A watch was not started.
            </exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.DoCreateSpeedDialLink(ININ.IceLib.Directories.DirectoryMetadata,ININ.IceLib.Directories.ContactEntry,ININ.IceLib.Directories.ContactPrimaryNumberDesignation)">
            <summary>
            Creates the link to contact entry in a speed dial directory.
            The speed dial directory is a directory containing links to other
            directories' contact entries.
            </summary>
            <param name="speedDialDirectoryMetadata">The speed dial directory metadata.</param>
            <param name="linkedContactEntry">The linked contact entry.</param>
            <param name="newLinkPrimaryNumberDesignation">The new link primary number designation.</param>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.StartWatching">
            <summary>
            A synchronous request to query and watch contact entrys.
            </summary>
            <exception cref="T:System.InvalidOperationException">A watch has already been started for this instance of <see cref="T:ININ.IceLib.Directories.ContactDirectory"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.StartWatching(ININ.IceLib.Directories.ContactDirectoryWatchSettings)">
            <summary>
            A synchronous request to query and watch contact entrys.
            </summary>
            <param name="watchSettings">The watch settings.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.InvalidOperationException">A watch has already been started for this instance of <see cref="T:ININ.IceLib.Directories.ContactDirectory"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            An asynchronous request to query and watch contact entrys.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <returns>A task ID. This can be used to cancel this request. See <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatchingAsyncCancel(System.Int64)"/>.</returns>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
            <exception cref="T:System.InvalidOperationException">A watch has already been started for this instance of <see cref="T:ININ.IceLib.Directories.ContactDirectory"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.StartWatchingAsync(ININ.IceLib.Directories.ContactDirectoryWatchSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            An asynchronous request to query and watch contact entrys.
            </summary>
            <param name="watchSettings">The watch settings.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <returns>
            A task ID. This can be used to cancel this request. See <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatchingAsyncCancel(System.Int64)"/>
            </returns>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.InvalidOperationException">A watch has already been started for this instance of <see cref="T:ININ.IceLib.Directories.ContactDirectory"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.StartWatchingAsyncCancel(System.Int64)">
            <summary>
            Cancel a <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/> or <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatchingAsync(ININ.IceLib.Directories.ContactDirectoryWatchSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/> request.
            </summary>
            <param name="taskId">The task ID.</param>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.ChangeWatched(ININ.IceLib.Directories.ContactDirectoryWatchSettings)">
            <summary>
            A synchronous request to change the watch.
            </summary>
            <param name="watchSettings">The watch settings.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.InvalidOperationException">A watch was not started.
            See <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatching(ININ.IceLib.Directories.ContactDirectoryWatchSettings)"/>.
            </exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.ChangeWatchedAsync(ININ.IceLib.Directories.ContactDirectoryWatchSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            An asynchronous request to change the watch.
            </summary>
            <param name="watchSettings">The watch settings.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.InvalidOperationException">A watch was not started.
            See <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatchingAsync(ININ.IceLib.Directories.ContactDirectoryWatchSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.
            </exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.StopWatching">
            <summary>
            A synchronous method to stop watching a directory 
            </summary>
            <exception cref="T:System.InvalidOperationException">A watch was not started. 
            See <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatching"/>,
            or <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatching(ININ.IceLib.Directories.ContactDirectoryWatchSettings)"/>.
            </exception>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactDirectory.StopWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            A synchronous method to stop watching a directory.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
            <exception cref="T:System.InvalidOperationException">A watch was not started.
            See <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>,
            or <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatchingAsync(ININ.IceLib.Directories.ContactDirectoryWatchSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>
            </exception>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactDirectory.TotalCount">
            <summary>
            Gets the total count of entries in the contact directory that is being watched.
            </summary>
            <value>The total count.</value>
            <exception cref="T:System.InvalidOperationException">If a watch is not in progress.</exception>
            <exception cref="T:ININ.IceLib.NotCachedException">A StartWatch has not been called.</exception>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactDirectory.FilteredCount">
            <summary>
            Gets the total number of entries that match a filter for a view.
            </summary>
            <value>The filtered count.</value>
            <exception cref="T:System.InvalidOperationException">If a watch is not in progress.</exception>
            <exception cref="T:ININ.IceLib.NotCachedException">A StartWatch has not been called.</exception>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactDirectory.Metadata">
            <summary>
            Gets the metadata.
            </summary>
            <value>The metadata associated with this directory.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactDirectory.DirectoriesManager">
            <summary>
            Gets the directories manager.
            </summary>
            <value>The directories manager.</value>
        </member>
        <member name="E:ININ.IceLib.Directories.ContactDirectory.ContactDirectoryChanged">
            <summary>
            Occurs when one of the <see cref="T:ININ.IceLib.Directories.ContactEntry"/> watched objects has changed.
            </summary>
        </member>
        <member name="E:ININ.IceLib.Directories.ContactDirectory.StartWatchingProgressChanged">
            <summary>
            Occurs when a call to <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/> or <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatchingAsync(ININ.IceLib.Directories.ContactDirectoryWatchSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/> sends a progress message.
            </summary>
            <remarks>This event is raised on a thread appropriate to the application-model, such as the GUI thread in a UI application.</remarks>
        </member>
        <member name="T:ININ.IceLib.Directories.ContactDirectoryProgressChangedEventArgs">
            <summary>
            Represents the current progress for a task invoked by <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>,
            or <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatchingAsync(ININ.IceLib.Directories.ContactDirectoryWatchSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.
            </summary>
            <remarks>
            It is sometimes impossible to return a progress percentage since the number of entries may be unknown for most directories.
            A count of items received so far is returned in the property <see cref="P:ININ.IceLib.Directories.ContactDirectoryProgressChangedEventArgs.RunningTotalCount"/>.
            </remarks>
            <doccompleted/>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactDirectoryProgressChangedEventArgs.RunningTotalCount">
            <summary>
            Gets the running total count of entries received so far.
            </summary>
            <value>The running total count.</value>
        </member>
        <member name="T:ININ.IceLib.Directories.ContactProperty">
            <summary>
            Each value in this enumeration represents a property in <see cref="T:ININ.IceLib.Directories.ContactEntry"/>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.None">
            <summary>No property is defined.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.EntryId">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.EntryId"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.FirstName">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.FirstName"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.LastName">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.LastName"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.Extension">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.Extension"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.UserId">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.UserId"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.Department">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.Department"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.Company">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.Company"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.Title">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.Title"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.BusinessAddress">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.BusinessAddress"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.BusinessCity">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.BusinessCity"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.BusinessState">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.BusinessState"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.BusinessZipCode">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.BusinessZipCode"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.BusinessCountry">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.BusinessCountry"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.BusinessEmail">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.BusinessEmail"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.Assistant">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.Assistant"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.HomeCountry">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.HomeCountry"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.HomeEmail">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.HomeEmail"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.BusinessPhone">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.BusinessPhone"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.BusinessPhone2">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.BusinessPhone2"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.HomePhone2">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.HomePhone2"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.MobilePhone">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.MobilePhone"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.Fax">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.Fax"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.Pager">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.Pager"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.AssistantPhone">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.AssistantPhone"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.Webpage">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.Webpage"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.PrimaryNumberDesignation">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.PrimaryNumberDesignation"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.Notes">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.Notes"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.DisplayName">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.DisplayName"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.HomeAddress">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.HomeAddress"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.HomeCity">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.HomeCity"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.HomeState">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.HomeState"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.HomeZipCode">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.HomeZipCode"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.HomePhone">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.HomePhone"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.VoicemailLocation">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.VoicemailLocation"/> property.</summary>
            TODO: Review usage of this variable - VoicemailLocation
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.Workgroups">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.Workgroups"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.OwnerId">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.OwnerId"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.Alias">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.Alias"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.AccessRights">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.AccessRights"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.TrackerData">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.TrackerData"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactProperty.StatusUri">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.ContactEntry.StatusUri"/> property.</summary>
        </member>
        <member name="T:ININ.IceLib.Directories.ContactPrimaryNumberDesignation">
            <summary>
            Specifies constants indicating which directory contact property
            is the primary number.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactPrimaryNumberDesignation.None">
            <summary>No primary number designation specified.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactPrimaryNumberDesignation.BusinessPhone">
            <summary>The contact entry property <see cref="P:ININ.IceLib.Directories.ContactEntry.BusinessPhone"/> is the primary number.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactPrimaryNumberDesignation.BusinessPhone2">
            <summary>The contact entry property <see cref="P:ININ.IceLib.Directories.ContactEntry.BusinessPhone2"/> is the primary number.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactPrimaryNumberDesignation.HomePhone">
            <summary>The contact entry property <see cref="P:ININ.IceLib.Directories.ContactEntry.HomePhone"/> is the primary number.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactPrimaryNumberDesignation.HomePhone2">
            <summary>The contact entry property <see cref="P:ININ.IceLib.Directories.ContactEntry.HomePhone2"/> is the primary number.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactPrimaryNumberDesignation.MobilePhone">
            <summary>The contact entry property <see cref="P:ININ.IceLib.Directories.ContactEntry.MobilePhone"/> is the primary number.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactPrimaryNumberDesignation.Fax">
            <summary>The contact entry property <see cref="P:ININ.IceLib.Directories.ContactEntry.Fax"/> is the primary number.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactPrimaryNumberDesignation.Pager">
            <summary>The contact entry property <see cref="P:ININ.IceLib.Directories.ContactEntry.Pager"/> is the primary number.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactPrimaryNumberDesignation.AssistantPhone">
            <summary>The contact entry property <see cref="P:ININ.IceLib.Directories.ContactEntry.AssistantPhone"/> is the primary number.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactPrimaryNumberDesignation.Extension">
            <summary>The contact entry property <see cref="P:ININ.IceLib.Directories.ContactEntry.Extension"/> is the primary number.</summary>
        </member>
        <member name="T:ININ.IceLib.Directories.ContactAccessRights">
            <summary>
            Specifies constants for the access rights of a directory contact.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactAccessRights.None">
            <summary>No access rights are specified.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactAccessRights.Read">
            <summary>Permission to read a contact entry.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactAccessRights.Create">
            <summary>Permission to create a new contact entry.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactAccessRights.Update">
            <summary>Permission to update a contact entry.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactAccessRights.Delete">
            <summary>Permission to delete a contact entry.</summary>
        </member>
        <member name="T:ININ.IceLib.Directories.DirectoryPhoneNumber">
            <summary>
            Represents a phone number stored in the contact directory.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryPhoneNumber.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Directories.DirectoryPhoneNumber"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryPhoneNumber.#ctor(System.String,System.String,System.Boolean,System.String,System.String,ININ.IceLib.Directories.ContactProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Directories.DirectoryPhoneNumber"/> class.
            </summary>
            <param name="phoneNumber">The phone number.</param>
            <param name="extension">The extension.</param>
            <param name="autoDialExtension">If set to <c>true</c> auto dial the extension.</param>
            <param name="displayString">The display string.</param>
            <param name="dialString">The dial string.</param>
            <param name="contactProperty">The contact property.</param>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryPhoneNumber.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:ININ.IceLib.Directories.DirectoryPhoneNumber"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:DirectoryPhoneNumber.DisplayString"></see>.
            </returns>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryPhoneNumber.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryPhoneNumber.PhoneNumber">
            <summary>
            Gets the phone number.
            </summary>
            <value>The phone number.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryPhoneNumber.Extension">
            <summary>
            Gets the extension.
            </summary>
            <value>The extension.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryPhoneNumber.AutodialExtension">
            <summary>
            Gets a value indicating whether to automatically dial the extension.
            </summary>
            <value><c>true</c> to automatically dial the extension; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryPhoneNumber.DisplayString">
            <summary>
            Gets a displayable string combining the PhoneNumber and Extension.
            </summary>
            <value>The display string.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryPhoneNumber.DialString">
            <summary>
            Gets the dial string.
            </summary>
            <value>The dial string.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryPhoneNumber.ContactProperty">
            <summary>
            Gets the <see cref="P:ININ.IceLib.Directories.DirectoryPhoneNumber.ContactProperty"></see> that this phone number represents.
            </summary>
            <value>The contact property.</value>
        </member>
        <member name="T:ININ.IceLib.Directories.EditableDirectoryPhoneNumber">
            <summary>
            Represents a editable telephone number stored in the contact directory.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Directories.EditableDirectoryPhoneNumber.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Directories.EditableDirectoryPhoneNumber"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Directories.EditableDirectoryPhoneNumber.#ctor(ININ.IceLib.Directories.DirectoryPhoneNumber)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Directories.DirectoryPhoneNumber"/> class.
            </summary>
            <param name="directoryPhoneNumber">An existing directory phone number.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableDirectoryPhoneNumber.PhoneNumber">
            <summary>
            Gets or sets the telephone number.
            </summary>
            <value>The telephone number.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableDirectoryPhoneNumber.Extension">
            <summary>
            Gets or sets the extension.
            </summary>
            <value>The extension.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableDirectoryPhoneNumber.AutodialExtension">
            <summary>
            Gets or sets a value indicating whether to automatically dial the extension.
            </summary>
            <value>
            	<c>true</c> to automatically dial the extension; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableDirectoryPhoneNumber.DisplayString">
            <summary>
            Gets the display string.
            </summary>
            <value>The display string.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableDirectoryPhoneNumber.DialString">
            <summary>
            Gets the dial string.
            </summary>
            <value>The dial string is the actual string of characters sent to the Central Office to place a call.</value>
        </member>
        <member name="T:ININ.IceLib.Directories.ContactEntry">
            <summary>
            Represents a directory contact watched object.
            </summary>
            <remarks>
            <para>
            Object instances of this class are obtained by a <see cref="T:ININ.IceLib.Directories.ContactDirectory"/> instance.
            </para>
            <para>
            These are read-only entries. A contact may be modified via the <see cref="T:ININ.IceLib.Directories.EditableContactEntry"/> object.
            </para>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactEntry.#ctor(ININ.IceLib.Directories.ContactEntryImpl)">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactEntry.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactEntry.IsOwner(System.String)">
            <summary>
            Determines whether the specified possible owner is the actual owner of this contact entry.
            </summary>
            <param name="possibleOwner">The possible owner.</param>
            <returns>
            	<c>true</c> if the specified possible owner is owner; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactEntry.IsPropertySet(ININ.IceLib.Directories.ContactProperty)">
            <summary>
            Determines whether the specified <see cref="T:ININ.IceLib.Directories.ContactProperty"/> contains data for this <see cref="T:ININ.IceLib.Directories.ContactEntry"/>.
            </summary>
            <param name="contactProperty">The <see cref="T:ININ.IceLib.Directories.ContactProperty"/> to check.</param>
            <returns>
            	<c>true</c> if the <see cref="T:ININ.IceLib.Directories.ContactProperty"/> contains data; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactEntry.HasAccess(ININ.IceLib.Directories.ContactAccessRights)">
            <summary>
            Determines whether the specified access rights have been granted.
            </summary>
            <param name="rights">The rights.</param>
            <returns>
            	<c>true</c> if the specified rights to check has access; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactEntry.GetDefaultPhoneNumber">
            <summary>
            This is a convenience method that will apply some heuristics to return a suitable phone number that can
            be dialed for this contact entry object instance.
            </summary>
            <returns>A directory phone number. If none could be found an empty phone number is returned.</returns>
            <remarks>
            This method will first check the phone number associated with the <see cref="P:ININ.IceLib.Directories.ContactEntry.PrimaryNumberDesignation"></see> and return that phone's
            <see cref="T:ININ.IceLib.Directories.DirectoryPhoneNumber"></see> property, if it is not empty.
            <para>
            If the phone number property is not set for the primary number designation, this method will look for the first
            phone number set in the following order: Extension, BusinessPhone, HomePhone, BusinessPhone2, HomePhone2, 
            MobilePhone, AssistantPhone, Pager, and then Fax.
            </para>
            <para>
            </para>
            If there is no phone number available an empty <see cref="T:ININ.IceLib.Directories.DirectoryPhoneNumber"></see> is returned.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactEntry.GetDisplayableIdentifier">
            <summary>
            This is a convenience method that will retrieve an displayable identifier for this <see cref="T:ININ.IceLib.Directories.ContactEntry"/>.
            </summary>
            <returns>A displayable identifier for this <see cref="T:ININ.IceLib.Directories.ContactEntry"/>.</returns>
            <remarks>
            This method iterates over this <see cref="T:ININ.IceLib.Directories.ContactEntry"/> and tries to get the best displayable
            identifer, every time it finds a blank string it moves on. The order it uses is:
            DisplayName
            FirstName LastName
            UserId
            Company
            DefaultNumber
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.EntryId">
            <summary>
            Gets the entry ID. A unique identifier for a directory contact instance.
            </summary>
            <value>The entry ID.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.FirstName">
            <summary>
            Gets the first name of the contact.
            </summary>
            <value>The contact's first name.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.LastName">
            <summary>
            Gets the last name of the contact.
            </summary>
            <value>The contact's last name.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.Extension">
            <summary>
            Gets the extension.
            </summary>
            <value>The contact's extension.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.UserId">
            <summary>
            Gets the user ID.
            </summary>
            <value>The user ID.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.Department">
            <summary>
            Gets the department.
            </summary>
            <value>The department that this contact works in.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.Company">
            <summary>
            Gets the company.
            </summary>
            <value>The company that this contact works for.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.Title">
            <summary>
            Gets the title.
            </summary>
            <value>The contact's job title.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.BusinessAddress">
            <summary>
            Gets the business address.
            </summary>
            <value>The contact's business address.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.BusinessCity">
            <summary>
            Gets the business city.
            </summary>
            <value>The city where the business is located.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.BusinessState">
            <summary>
            Gets the state of the business.
            </summary>
            <value>The state where the business is located.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.BusinessZipCode">
            <summary>
            Gets the business zip code.
            </summary>
            <value>The business address zip code.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.BusinessCountry">
            <summary>
            Gets the business country.
            </summary>
            <value>The country where the business is located.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.BusinessEmail">
            <summary>
            Gets the business Email.
            </summary>
            <value>The business Email address.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.Assistant">
            <summary>
            Gets the assistant.
            </summary>
            <value>The name of the contact's assistant or subordinate.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.HomeCountry">
            <summary>
            Gets the home country.
            </summary>
            <value>The country associated with the contact's home address.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.HomeEmail">
            <summary>
            Gets the home Email.
            </summary>
            <value>The contact's personal Email address.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.BusinessPhone">
            <summary>
            Gets the business telephone number.
            </summary>
            <value>The contact's business telephone number.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.BusinessPhone2">
            <summary>
            Gets the second business phone.
            </summary>
            <value>The contact's alternate business telephone number.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.HomePhone2">
            <summary>
            Gets the second home phone.
            </summary>
            <value>The contact's secondary home phone number.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.MobilePhone">
            <summary>
            Gets the mobile phone.
            </summary>
            <value>The contact's mobile phone number.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.Fax">
            <summary>
            Gets the Fax.
            </summary>
            <value>The telephone number of the contact's Fax machine.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.Pager">
            <summary>
            Gets the pager.
            </summary>
            <value>The contact's pager number.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.AssistantPhone">
            <summary>
            Gets the assistant phone.
            </summary>
            <value>The assistant's telephone number.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.Webpage">
            <summary>
            Gets the webpage.
            </summary>
            <value>The URL of a corporate web page.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.PrimaryNumberDesignation">
            <summary>
            Gets the primary number designation.
            </summary>
            <value>The primary number designation.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.Notes">
            <summary>
            Gets the notes.
            </summary>
            <value>The note text, if any, that is stored in this contact entry.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.DisplayName">
            <summary>
            Gets the directory contact display name.
            </summary>
            <value>The contact's display name. Usually this is Lastname, Firstname.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.HomeAddress">
            <summary>
            Gets the home address.
            </summary>
            <value>The contact's number and street, apartment, etc.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.HomeCity">
            <summary>
            Gets the home city.
            </summary>
            <value>The home address city.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.HomeState">
            <summary>
            Gets the state of the home.
            </summary>
            <value>The state where the home is located.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.HomeZipCode">
            <summary>
            Gets the home zip code.
            </summary>
            <value>The home address zip code.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.HomePhone">
            <summary>
            Gets the home telephone number.
            </summary>
            <value>The contact's home telephone number.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.VoicemailLocation">
            <summary>
            Gets the Voicemail location.
            </summary>
            <value>The Voicemail location.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.OwnerId">
            <summary>
            Gets the owner.
            </summary>
            <value>The owner of this contact entry.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.Workgroups">
            <summary>
            Gets the workgroups.
            </summary>
            <value>The workgroups that this contact is a member of.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.Alias">
            <summary>
            Gets the alias.
            </summary>
            <value>The contact's alias.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.TrackerData">
            <summary>
            Gets the tracker data.
            </summary>
            <value>The tracker data.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.AccessRights">
            <summary>
            Gets the access rights.
            </summary>
            <value>The contact's access rights.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.ContactEntry.StatusUri">
            <summary>
            Gets the Status Uri.
            </summary>
            <value>The contact's Status Uri.</value>
            <remarks>This can be used for watching / retrieveing user's status.</remarks>
        </member>
        <member name="T:ININ.IceLib.Directories.EditableContactEntry">
            <summary>
            Represents an editable contact entry object. This object is used to make updates to directory contacts.
            </summary>
            <remarks>
            <para>
            An object instance can be initialized from a read-only <see cref="T:ININ.IceLib.Directories.ContactEntry"/>.
            </para>
            <para>
            This object is required by the <see cref="T:ININ.IceLib.Directories.ContactDirectory"/> update methods.
            </para>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Directories.EditableContactEntry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Directories.EditableContactEntry"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Directories.EditableContactEntry.#ctor(ININ.IceLib.Directories.ContactEntry)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Directories.EditableContactEntry"/> class.
            </summary>
            <param name="entry">The entry.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.EditableContactEntry.AddAccessRights(ININ.IceLib.Directories.ContactAccessRights)">
            <summary>
            Adds the access rights.
            </summary>
            <param name="rights">The access rights.</param>
        </member>
        <member name="M:ININ.IceLib.Directories.EditableContactEntry.SubtractAccessRights(ININ.IceLib.Directories.ContactAccessRights)">
            <summary>
            Subtracts the access rights.
            </summary>
            <param name="rights">The rights.</param>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.EntryId">
            <summary>
            Gets or sets the entry ID.
            </summary>
            <value>The entry ID.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.FirstName">
            <summary>
            Gets or sets first name.
            </summary>
            <value>The contact's first name.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.LastName">
            <summary>
            Gets or sets last name.
            </summary>
            <value>The contact's last name.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.Extension">
            <summary>
            Gets the extension.
            </summary>
            <value>The contact's telephone extension.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.UserId">
            <summary>
            Gets the user ID.
            </summary>
            <value>The user ID.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.Department">
            <summary>
            Gets or sets the department.
            </summary>
            <value>The department that this contact works in.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.Company">
            <summary>
            Gets or sets the company.
            </summary>
            <value>The name of the company that this contact works for.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The contact's job title.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.BusinessAddress">
            <summary>
            Gets or sets the business address.
            </summary>
            <value>The business address (number and street).</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.BusinessCity">
            <summary>
            Gets or sets the business city.
            </summary>
            <value>The business city.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.BusinessState">
            <summary>
            Gets or sets the state of the business.
            </summary>
            <value>The state of the business.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.BusinessZipCode">
            <summary>
            Gets or sets the business zip code.
            </summary>
            <value>The business zip code.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.BusinessCountry">
            <summary>
            Gets or sets the business country.
            </summary>
            <value>The business country.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.BusinessEmail">
            <summary>
            Gets or sets the business Email.
            </summary>
            <value>The business Email.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.Assistant">
            <summary>
            Gets or sets the assistant name.
            </summary>
            <value>The name of this contact's assistant.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.HomeCountry">
            <summary>
            Gets or sets the home country.
            </summary>
            <value>The home country.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.HomeEmail">
            <summary>
            Gets or sets the home Email.
            </summary>
            <value>The contact's personal Email address.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.BusinessPhone">
            <summary>
            Gets the business phone, which can be used to edit the value.
            </summary>
            <value>The business phone.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.BusinessPhone2">
            <summary>
            Gets the business phone2, which can be used to edit the value.
            </summary>
            <value>The business phone2.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.HomePhone2">
            <summary>
            Gets the home phone2, which can be used to edit the value.
            </summary>
            <value>The home phone2.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.MobilePhone">
            <summary>
            Gets the mobile phone, which can be used to edit the value.
            </summary>
            <value>The mobile phone.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.Fax">
            <summary>
            Gets the contact's business Fax number, which can be used to edit the value.
            </summary>
            <value>The Fax phone number.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.Pager">
            <summary>
            Gets the pager, which can be used to edit the value.
            </summary>
            <value>The contact's pager number.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.AssistantPhone">
            <summary>
            Gets the assistant phone, which can be used to edit the value.
            </summary>
            <value>The assistant's telephone number.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.Webpage">
            <summary>
            Gets or sets the web page.
            </summary>
            <value>The URL of a company web page.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.PrimaryNumberDesignation">
            <summary>
            Gets the primary number designation.
            </summary>
            <value>The primary number designation.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.Notes">
            <summary>
            Gets or sets the notes.
            </summary>
            <value>Text in the notes field.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.DisplayName">
            <summary>
            Gets or sets the name of the display.
            </summary>
            <value>The name of the display.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.HomeAddress">
            <summary>
            Gets or sets the home address.
            </summary>
            <value>The home address.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.HomeCity">
            <summary>
            Gets or sets the home city.
            </summary>
            <value>The home city.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.HomeState">
            <summary>
            Gets or sets the home state.
            </summary>
            <value>The the home state.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.HomeZipCode">
            <summary>
            Gets or sets the home zip code.
            </summary>
            <value>The home zip code.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.HomePhone">
            <summary>
            Gets the home phone, which can be used to edit the value.
            </summary>
            <value>The home phone.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.VoicemailLocation">
            <summary>
            Gets the Voicemail location.
            </summary>
            <value>The Voicemail location.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.OwnerId">
            <summary>
            Gets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.Workgroups">
            <summary>
            Gets the workgroups.
            </summary>
            <value>The workgroups that this contact is a member of.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.Alias">
            <summary>
            Gets the alias.
            </summary>
            <value>The alias.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.AccessRights">
            <summary>
            Gets or sets the access rights.
            </summary>
            <value>This contact's access rights.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.EditableContactEntry.StatusUri">
            <summary>
            Gets or sets the status uri.
            </summary>
            <value>This contact's status uri.</value>
        </member>
        <member name="T:ININ.IceLib.Directories.ContactEntryImpl">
            <summary>
            Represents the internal cached representation of a directory contact entry object.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Directories.ContactEntryImpl.SeparateExtension(System.String,System.String@,System.String@,System.Boolean@)">
            Takes a number and separates the base number from the extension
            and check to see if it was set to auto dial
        </member>
        <member name="T:ININ.IceLib.Directories.ContactPrimaryNoValues">
             <summary>
             This class exposes values that are possible in the primary number field
             for directory contact entries. These fields are returned for external
             contact entries managed by DM.
             
              From inc\DataManager\DmData.h			
                "B"   (Business Phone)
                "B2"  (Business Phone 2)
                "H"   (Home Phone)
                "H2"  (Home Phone 2)
                "M"   (Mobile Phone)
                "F"   (Fax)
                "P"   (Pager)
                "A"   (Assistant Phone)
                
              SessionManager adds
                "E"   (Extension)
            
             </summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactPrimaryNoValues.BUSINESS_PHONE">
            <summary>Business phone number.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactPrimaryNoValues.BUSINESS_PHONE2">
            <summary>Business phone number 2.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactPrimaryNoValues.HOME_PHONE">
            <summary>Home phone number.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactPrimaryNoValues.HOME_PHONE2">
            <summary>Home phone number 2.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactPrimaryNoValues.MOBILE_PHONE">
            <summary>Mobile phone number.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactPrimaryNoValues.FAX_PHONE">
            <summary>Fax phone number.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactPrimaryNoValues.PAGER_PHONE">
            <summary>Pager phone number.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactPrimaryNoValues.ASSISTANT_PHONE">
            <summary>Assistant phone number.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.ContactPrimaryNoValues.EXTENSION">
            <summary>Extension.</summary>
        </member>
        <member name="T:ININ.IceLib.Directories.DirectoriesManager">
            <summary>
            Provides access to all the various IC directories.
            </summary>
            <remarks>
            <para>
            This class serves as the initial entry point into the Directories namespace.
            There is only one instance of this object per session. This object is required
            to manage the resources of other objects within this namespace.
            All classes in the Directories namespace send and receive
            messages to and from the IC system via the <see cref="P:ININ.IceLib.Directories.DirectoriesManager.Session"/> object of the <see cref="T:ININ.IceLib.Directories.DirectoriesManager"/>.
            </para>
            <para>
            Note that the <see cref="T:ININ.IceLib.Directories.DirectoriesManager"/> class is a singleton object and is accessed using the
            <see cref="M:ININ.IceLib.Directories.DirectoriesManager.GetInstance(ININ.IceLib.Connection.Session)"/> method.
            </para>
            </remarks>
            <example>
            <code lang="C#">
            Session session = new Session();
            session.Connect(...);
            DirectoriesManager directoryManager = DirectoriesManager.GetInstance(session);
            </code>
            </example>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoriesManager.GetInstance(ININ.IceLib.Connection.Session)">
            <summary>
            Gets a DirectoriesManager.
            </summary>
            <param name="session">The Session with which it is associated.</param>
            <returns>The DirectoriesManager.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoriesManager.Session">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Connection.Session"/> with which this DirectoriesManager is associated.
            </summary>
            <value>The session.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoriesManager.DirectoriesId">
            <summary>
            Gets the unique ID for this object instance.
            </summary>
            <value>The directories ID.</value>
        </member>
        <member name="T:ININ.IceLib.Directories.DirectoryEventArgs`1">
            <summary>
            Provides data for watched object change events.
            </summary>
            <remarks>
            <para>
            TWatchedObjects refers to the watched objects. These can either be
            <see cref="T:ININ.IceLib.Directories.DirectoryMetadata"/> or <see cref="T:ININ.IceLib.Directories.ContactEntry"/> object.
            </para>
            </remarks>
            <typeparam name="TWatchedObject">The watched object.</typeparam>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryEventArgs`1.#ctor(System.Collections.Generic.SortedList{`0,System.Collections.Generic.List{System.Enum}},System.Collections.Generic.List{`0},System.Collections.Generic.List{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:DirectoryEventArgs&lt;TWatchedObject&gt;"/> class.
            </summary>
            <param name="changedProperties">The changed properties.</param>
            <param name="added">The added.</param>
            <param name="removed">The removed.</param>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryEventArgs`1.GetChangedProperties(`0)">
            <summary>
            Gets the changed properties.
            </summary>
            <param name="watchedObject">The watched object.</param>
            <returns>Returns a list of properties that have changed.</returns>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryEventArgs`1.Changed">
            <summary>
            Get the existing objects that changed.
            </summary>
            <value>The collection of changed objects.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryEventArgs`1.Added">
            <summary>
            Get the existing object identifiers that were added.
            </summary>
            <value>The added objects.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryEventArgs`1.Removed">
            <summary>
            Get the existing object identifiers that were removed.
            </summary>
            <value>The removed objects.</value>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoriesWatchedObjectsCache`2.#ctor">
             <summary>
             Initializes a new instance of the DirectoriesWatchedObjectsCache class.
             </summary>
            
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoriesWatchedObjectsCache`2.IsWatching(System.Object)">
            <summary>
            Determines whether the specified watcher is watching.
            </summary>
            <param name="watcher">The watcher.</param>
            <returns><c>true</c> if the specified watcher is watching; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoriesWatchedObjectsCache`2.GetSafeObjectWatchersList">
            <summary>
            Get a copy of the list of watchers.
            </summary>
            <returns>The list of watchers.</returns>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoriesWatchedObjectsCache`2.StartWatching(System.Object,ININ.IceLib.Internal.AsyncTaskState)">
            <summary>
            Starts a watcher, potentially resulting in a round trip to the server.
            </summary>
            <param name="watcher">The watcher.</param>
            <param name="taskState">State of the task.</param>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoriesWatchedObjectsCache`2.StopWatching(System.Object)">
            <summary>
            Stops a watcher, potentially resulting in a round trip to the server.
            </summary>
            <param name="watcher">The watcher.</param>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoriesWatchedObjectsCache`2.UpdateObjectInCache(System.String,`0,`0@,System.Collections.Generic.List{System.Enum}@)">
            <summary>
            Updates the object in cache.
            </summary>
            <param name="objectName">Name of the object.</param>
            <param name="newEntry">The new entry.</param>
            <param name="changedObject">A reference to the changed (or new) object. 
            This is only set if the disposition is Added or Changed.</param>
            <param name="changedProperties">The changed properties.
            This is only set if the dispostion is Changed.</param>
            <returns>The update disposition - either Added or Changed.</returns>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoriesWatchedObjectsCache`2.StartWatchingImpl">
            <summary>
            Start watching implementation for inheriting classes.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoriesWatchedObjectsCache`2.StartWatchingImpl(ININ.IceLib.Internal.AsyncTaskState,System.Boolean@)">
            <summary>
            Start watching implementation for inheriting classes.
            </summary>
            <param name="asyncState">State of the async.</param>
            <param name="cancelled">If set to <c>true</c> the watch is cancelled.</param>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoriesWatchedObjectsCache`2.StopWatchingImpl">
            <summary>
            Stop watching implementation for inheriting class.
            This means that there are no more objects to watch.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoriesWatchedObjectsCache`2.WatchCount">
            <summary>
            Gets the number of watchers.
            </summary>
            <value>The watch count.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoriesWatchedObjectsCache`2.Watchers">
            <summary>
            Gets the watchers.
            </summary>
            <value>The watchers.</value>
            <remarks>
            Be sure to lock while accessing the watcher list.
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Directories.DirectoryMetadata">
            <summary>
            Represents a directory metadata watched object. This object maintains
            information of a particular directory that exists on the IC server. The
            directory metadata is used to identify a directory of contact entries.
            </summary>
            <remarks>
            <para>
            An instance of <see cref="T:ININ.IceLib.Directories.DirectoryMetadata"/> represents an IC directory and
            is required to obtain a list of contact entries within that directory. Instances
            of <see cref="T:ININ.IceLib.Directories.DirectoryMetadata"/> are obtained by the <see cref="T:ININ.IceLib.Directories.DirectoryConfiguration"/> watched object.
            </para>
            <para>
            A <see cref="T:ININ.IceLib.Directories.DirectoryMetadata"/> instance is required to construct a <see cref="T:ININ.IceLib.Directories.ContactDirectory"/>
            watched object instance in order to obtain the associated <see cref="T:ININ.IceLib.Directories.ContactEntry"/> object instances.
            </para>
            </remarks>
            <doccompleted/>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadata.UnknownApproximateCount">
            <summary>
            Defines a constant for when the <see cref="P:ININ.IceLib.Directories.DirectoryMetadata.ApproximateCount"/> value is unknown.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryMetadata.#ctor(ININ.IceLib.Directories.DirectoryMetadataImpl)">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryMetadata.IsOwner(System.String)">
            <summary>
            Determines whether the specified possible owner is owner.
            </summary>
            <param name="possibleOwner">The possible owner.</param>
            <returns>
            	<c>true</c> if the specified possible owner is owner; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryMetadata.Id">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryMetadata.DisplayName">
            <summary>
            Gets the directory name to display.
            </summary>
            <value>The name of the directory for display.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryMetadata.DisplayType">
            <summary>
            Gets the type of the display.
            </summary>
            <value>The type of the display.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryMetadata.ApproximateCount">
            <summary>
            Gets the approximate count of the directory, if known.
            </summary>
            <value>The approximate count.</value>
            <remarks>
            The value <see cref="F:ININ.IceLib.Directories.DirectoryMetadata.UnknownApproximateCount"/> will be returned if the count is not known.
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryMetadata.HasDynamicFields">
            <summary>
            Gets a value indicating whether this instance has dynamic fields.
            </summary>
            <value>
            	<c>true</c> if this instance has dynamic fields; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryMetadata.CanRefresh">
            <summary>
            Gets a value indicating whether the directory for this instance can refresh.
            </summary>
            <value>
            	<c>true</c> if the directory can refresh; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryMetadata.IsPrivate">
            <summary>
            Gets a value indicating whether the directory for this instance is private.
            </summary>
            <value>
            	<c>true</c> if this directory is private; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryMetadata.Category">
            <summary>
            Gets the category.
            </summary>
            <value>The category.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryMetadata.OwnerId">
            <summary>
            Gets the owner ID.
            </summary>
            <value>The owner ID.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryMetadata.AccessRights">
            <summary>
            Gets the access rights.
            </summary>
            <value>The access rights.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryMetadata.SchemaId">
            <summary>
            Gets the schema ID.
            </summary>
            <value>The schema ID.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryMetadata.HasStatus">
            <summary>
            Gets a value indicating whether the directory has status information.
            </summary>
            <value>
            	<c>true</c> if this directory has status information; otherwise, <c>false</c>.
            </value>
            <remarks>
            This is an indicator whether an application can query / watch statuses of the contacts in this directory.
            For more information on how to query / watch statuses please refer to <c>UserStatusList</c> from ININ.IceLib.People namespace.
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Directories.DirectoryMetadataProperty">
            <summary>
            Specifies constants for the DirectoryMetadata properties.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataProperty.None">
            <summary>No property is defined.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataProperty.Id">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.DirectoryMetadata.Id"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataProperty.DisplayName">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.DirectoryMetadata.DisplayName"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataProperty.DisplayType">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.DirectoryMetadata.DisplayType"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataProperty.ApproximateSize">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.DirectoryMetadata.ApproximateCount"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataProperty.HasDynamicFields">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.DirectoryMetadata.HasDynamicFields"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataProperty.CanRefresh">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.DirectoryMetadata.CanRefresh"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataProperty.IsPrivate">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.DirectoryMetadata.IsPrivate"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataProperty.Category">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.DirectoryMetadata.Category"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataProperty.OwnerId">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.DirectoryMetadata.OwnerId"/> property.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataProperty.AccessRights">
            <summary>Represents the <see cref="P:ININ.IceLib.Directories.DirectoryMetadata.AccessRights"/> property.</summary>
        </member>
        <member name="T:ININ.IceLib.Directories.DirectoryMetadataCategory">
            <summary>
            Specifies constants for the category of a directory.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataCategory.None">
            <summary>No category is defined.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataCategory.Company">
            <summary>Represents a company directory.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataCategory.Workgroup">
            <summary>Represents an IC workgroup as a directory.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataCategory.General">
            <summary>Represents an external directory. For example IC Private Contacts.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataCategory.StationGroup">
            <summary>Represents an IC station group as a directory.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataCategory.SpeedDial">
            <summary>Represents a directory for speed dial entries.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataCategory.GroupAndProfile">
            <summary>Represents a directory for Attendant workgroups and profiles.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataCategory.Tracker">
            <summary>Represents a tracker directory.</summary>
        </member>
        <member name="T:ININ.IceLib.Directories.DirectoryMetadataDisplayType">
            <summary>
            Specifies constants for the display type of a directory.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataDisplayType.None">
            <summary>No display type is defined.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataDisplayType.List">
            <summary>Represents a list.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataDisplayType.Filter">
            <summary>Represents a filter.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataDisplayType.Speed">
            <summary>Represents a speed dial.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataDisplayType.Tracker">
            <summary>Represents tracker.</summary>
        </member>
        <member name="T:ININ.IceLib.Directories.DirectoryMetadataAccessRights">
            <summary>
            Specifies constants for the access rights of a directory.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataAccessRights.None">
            <summary>No access rights are specified.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataAccessRights.Read">
            <summary>Permission to read a directory.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataAccessRights.Create">
            <summary>Permission to create a new directory.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataAccessRights.Update">
            <summary>Permission to update a directory.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataAccessRights.Delete">
            <summary>Permission to delete a directory.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataAccessRights.Rename">
            <summary>Permission to rename a directory.</summary>
        </member>
        <member name="F:ININ.IceLib.Directories.DirectoryMetadataAccessRights.PrimaryNumber">
            <summary>Permission to access a primary number designation.</summary>
        </member>
        <member name="T:ININ.IceLib.Directories.DirectoryMetadataImpl">
            <summary>
            Represents the internal cached representation of the public DirectoryMetadata object.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Directories.DirectoryColumn">
            <summary>
            Represents a <see cref="T:ININ.IceLib.Directories.DirectorySchema"/> directory column definition.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryColumn.ColumnName(System.Int64)">
            <summary>
            Columns the name.
            </summary>
            <param name="fieldId">The column field ID.</param>
            <returns>The column name.</returns>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryColumn.ToString">
            <summary>
            Get a string showing the directory column elements. 
            </summary>
            <returns>A string showing the name and value of each element.</returns>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryColumn.FieldId">
            <summary>
            Gets the field ID.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryColumn.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryColumn.DisplayName">
            <summary>
            Gets the name of the display.
            </summary>
            <value>The name of the display.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryColumn.CanFilterOnThisColumn">
            <summary>
            Gets a value indicating whether a directory instance can filter on this column.
            </summary>
            <value>
            	<c>true</c> if a directory instance can filter on this column; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryColumn.RegExpSupported">
            <summary>
            Gets a value indicating whether regular expressions are supported.
            </summary>
            <value><c>true</c> if regular expressions are supported; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryColumn.CaseSensitiveSupported">
            <summary>
            Gets a value indicating whether the column supports case sensitive matching.
            </summary>
            <value>
            	<c>true</c> if the column supports case sensitive matching; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectoryColumn.CaseInsensitiveSupported">
            <summary>
            Gets a value indicating whether the column supports case insensitive matching.
            </summary>
            <value>
            	<c>true</c> if the column supports case insensitive matching; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:ININ.IceLib.Directories.DirectorySchema">
            <summary>
            Represents directory schema information about the directory.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectorySchema.Id">
            <summary>
            Gets the unique identifier for the schema.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Directories.DirectorySchema.Columns">
            <summary>
            Gets the columns definitions for an instance of this schema.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Directories.DirectoryConfiguration">
            <summary>
            Represents IC directory configuration. An instance of this object is used
            to obtain a list of available directories and perform operations on them.
            </summary>
            <remarks>
            <para>
            This object manages a watched list of <see cref="T:ININ.IceLib.Directories.DirectoryMetadata"/> objects. The <see cref="T:ININ.IceLib.Directories.DirectoryMetadata"/>
            is required by a <see cref="T:ININ.IceLib.Directories.ContactDirectory"/> instance in order to get a list of contact entries (<see cref="T:ININ.IceLib.Directories.ContactEntry"/>).
            In addition, an instance of this object provides support for updating directory configuration for
            tasks like creating, modifying and deleting directory entries.
            </para>
            <para><B>Getting a list of watched objects</B></para>
            <para>
            A watched object is maintained internally within a cache. The cache is constructed so that only
            one instance of a <see cref="T:ININ.IceLib.Directories.DirectoryMetadata"/> object 
            is shared between other instances of a <see cref="T:ININ.IceLib.Directories.DirectoryConfiguration"/> object.
            </para>
            <para>
            This object contains synchronous as well as asynchronous counterpart methods for any method that could
            potentially block a thread by running a lengthy operation.
            Synchronous methods block the thread that they are performed on.
            Asynchronous methods will not block. When an asynchronous method completes, an 
            event is raised on a thread appropriate to the application-model, such as the GUI thread in a UI application.
            By convention, synchronous calls are invoked by a method, such as DoSomething(). Their asynchronous counterparts
            are invoked via DoSomethingAsync() with the result returned in a DoSomethingCompleted event.
            </para>
            <para>
            A start watch, via a call to <see cref="M:ININ.IceLib.Directories.DirectoryConfiguration.StartWatching"/> or <see cref="M:ININ.IceLib.Directories.DirectoryConfiguration.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/> is
            required to obtain the available directories. Once the start watch has successfully completed, call
            <see cref="M:ININ.IceLib.Directories.DirectoryConfiguration.GetList"/> to obtain the available directories.
            </para>
            <para>
            Change notifications to metadata can be subscribed to via the <see cref="E:ININ.IceLib.Directories.DirectoryConfiguration.DirectoryConfigurationChanged"/> event handler.
            Change events are <B>not</B> raised on a thread appropriate to the application mode, such as the GUI thread in a UI application.
            </para>
            <para>
            A watch can be stopped via a call to <see cref="M:ININ.IceLib.Directories.DirectoryConfiguration.StopWatching"/> or <see cref="M:ININ.IceLib.Directories.DirectoryConfiguration.StopWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.
            </para>
            <para><B>Directory updates</B></para>
            <para>
            Speed dial directories can be created, renamed and deleted with the following synchronous and asynchronous methods.
            <list type="bullet">
            <item><see cref="M:ININ.IceLib.Directories.DirectoryConfiguration.CreateSpeedDialDirectory(System.String,ININ.IceLib.Directories.DirectoryMetadataAccessRights)"/> or <see cref="M:ININ.IceLib.Directories.DirectoryConfiguration.CreateSpeedDialDirectoryAsync(System.String,ININ.IceLib.Directories.DirectoryMetadataAccessRights,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/></item>
            <item><see cref="M:ININ.IceLib.Directories.DirectoryConfiguration.RenameDirectory(ININ.IceLib.Directories.DirectoryMetadata,System.String)"/> or <see cref="M:ININ.IceLib.Directories.DirectoryConfiguration.RenameDirectoryAsync(ININ.IceLib.Directories.DirectoryMetadata,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/></item>
            <item><see cref="M:ININ.IceLib.Directories.DirectoryConfiguration.DeleteDirectory(ININ.IceLib.Directories.DirectoryMetadata)"/> or <see cref="M:ININ.IceLib.Directories.DirectoryConfiguration.DeleteDirectoryAsync(ININ.IceLib.Directories.DirectoryMetadata,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/></item>
            </list>
            </para>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.#ctor(ININ.IceLib.Directories.DirectoriesManager)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Directories.DirectoryConfiguration"/> class.
            </summary>
            <param name="manager">The manager.</param>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.GetEntry(System.String)">
            <summary>
            Gets the entry.
            </summary>
            <param name="directoryId">The directory ID.</param>
            <returns>Returns null if the entry could not be found.</returns>
            <exception cref="T:System.InvalidOperationException">If a watch is not in progress.</exception>
            <exception cref="T:ININ.IceLib.NotCachedException">A StartWatch has not been called.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.GetList">
            <summary>
            Gets a list of directory metadata being watched.
            </summary>
            <returns>A list of directory metadata.</returns>
            <exception cref="T:System.InvalidOperationException">If a watch is not in progress.</exception>
            <exception cref="T:ININ.IceLib.NotCachedException">A StartWatch has not been called.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.GetSchema(System.String)">
            <summary>
            Gets the named schema.
            </summary>
            <param name="schemaId">The schema ID.</param>
            <returns>The schema entry.</returns>
            <exception cref="T:ININ.IceLib.NotCachedException">The schema with this identifier has not been cached.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.CanDeleteDirectory(ININ.IceLib.Directories.DirectoryMetadata)">
            <summary>
            Determines whether the user associated with this session is allowed to delete a directory.
            </summary>
            <param name="metadata">The metadata for the directory to delete.</param>
            <returns>
            	<c>true</c> if this instance can delete the directory; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.CanUpdateDirectory(ININ.IceLib.Directories.DirectoryMetadata)">
            <summary>
            Determines whether the user associated with this session is allowed to update a directory.
            </summary>
            <param name="metadata">The metadata for the directory to update.</param>
            <returns>
            	<c>true</c> if this instance can update the directory; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.CanRenameDirectory(ININ.IceLib.Directories.DirectoryMetadata)">
            <summary>
            Determines whether the user associated with this session is allowed to rename a directory.
            </summary>
            <param name="metadata">The metadata for the directory to rename.</param>
            <returns>
            	<c>true</c> if this instance can update the directory; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.CreateTrackerDirectoryImpl(System.String,ININ.IceLib.Directories.TrackerFilterSettings)">
            Creates the tracker directory contact directory.
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.CreateTrackerDirectory(System.String,ININ.IceLib.Directories.TrackerFilterSettings)">
            <summary>
            Create a filtered tracker directory.
            </summary>
            <param name="trackerDirectoryName">Name of the tracker directory.</param>
            <param name="filterSettings">The filter settings.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">A parameter has an invalid value.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <doctask/>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.CreateTrackerDirectoryAsync(System.String,ININ.IceLib.Directories.TrackerFilterSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            An asynchronous request to create a tracker directory.
            </summary>
            <param name="trackerDirectoryName">Name of the tracker directory.</param>
            <param name="filterSettings">The filter settings.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">A parameter has an invalid value.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">A parameter has an invalid value.</exception>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
            <doctask/>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.CreateSpeedDialImpl(System.String,ININ.IceLib.Directories.DirectoryMetadataAccessRights)">
            Creates the speed dial contact directory.
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.CreateSpeedDialDirectory(System.String,ININ.IceLib.Directories.DirectoryMetadataAccessRights)">
            <summary>
            Create a speed dial directory.
            </summary>
            <param name="speedDialName">Name of the speed dial directory.</param>
            <param name="accessMask">The access mask.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.CreateSpeedDialDirectoryAsync(System.String,ININ.IceLib.Directories.DirectoryMetadataAccessRights,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            An asynchronous request to create a speed dial directory.
            </summary>
            <param name="speedDialName">Name of the speed dial.</param>
            <param name="accessMask">The access mask.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.RenameDirectory(ININ.IceLib.Directories.DirectoryMetadata,System.String)">
            <summary>
            Rename the directory. <B>Note</B> that currently only speed dial directories can be renamed.
            </summary>
            <param name="metadata">The directory metadata.</param>
            <param name="newSpeedDialDisplayName">New name of the speed dial display.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.RenameDirectoryAsync(ININ.IceLib.Directories.DirectoryMetadata,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously rename the speed dial directory. <B>Note</B> that currently only speed dial directories can be renamed.
            </summary>
            <param name="metadata">The metadata.</param>
            <param name="newSpeedDialDisplayName">New name of the speed dial display.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.DeleteDirectory(ININ.IceLib.Directories.DirectoryMetadata)">
            <summary>
            Deletes a directory entry. <B>Note</B> that currently only speed dial and tracker directories can be deleted.
            </summary>
            <param name="metadata">The directory metadata.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.NotSupportedException">The directory does not support the delete operation.</exception>
            <devtask/>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.DeleteDirectoryAsync(ININ.IceLib.Directories.DirectoryMetadata,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes the directory. <B>Note</B> that currently only speed dial directories can be deleted.
            </summary>
            <param name="metadata">The metadata.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.NotSupportedException">The directory does not support the delete operation.</exception>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
            <devtask/>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.IsWatching">
            <summary>
            Determines whether a watch is active.
            </summary>
            <returns>
            	<c>true</c> if a watch is active; otherwise, <c>false</c>.
            </returns>
            <remarks>
            This method determines whether a watch is in place for this instance.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.StartWatching">
            <summary>
            A synchronous request to query and watch directory configuration metadata.
            </summary>
            <exception cref="T:System.InvalidOperationException">A watch has already been started for this instance of <see cref="T:ININ.IceLib.Directories.DirectoryConfiguration"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Starts an asynchronous request to query and watch directory configuration metadata.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
            <exception cref="T:System.InvalidOperationException">A watch has already been started for this instance of <see cref="T:ININ.IceLib.Directories.DirectoryConfiguration"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.StopWatching">
            <summary>
            A synchronous request to stop watching directory configuration metadata.
            </summary>
            <exception cref="T:System.InvalidOperationException">A watch was not started. See <see cref="M:ININ.IceLib.Directories.DirectoryConfiguration.StartWatching"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Directories.DirectoryConfiguration.StopWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Start an asynchronous request to stop watching directory configuration metadata.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <remarks>When completed, the <paramref name="completedCallback"/> delegate is invoked on a thread appropriate to the application-model, such as the GUI thread in a UI application.  The <c>Error</c> property of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">AsyncCompletedEventArgs-derived object</see> passed to the delegate will contain any exceptions thrown while executing the asynchronous task.  See the synchronous version of this method for more detailed error information.</remarks>
            <exception cref="T:System.InvalidOperationException">A watch was not started. See <see cref="M:ININ.IceLib.Directories.DirectoryConfiguration.StartWatching"/>.</exception>
        </member>
        <member name="E:ININ.IceLib.Directories.DirectoryConfiguration.DirectoryConfigurationChanged">
            <summary>
            Occurs when one of the <see cref="T:ININ.IceLib.Directories.DirectoryMetadata"/> watched objects has changed.
            </summary>
            <remarks>
            Change events are <B>not</B> raised on a thread appropriate to the application mode, such as the GUI thread in a UI application.
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Directories.DirectoryConfigurationCacheImpl">
            <summary>
            Internal class to manage watchers and directory configuration metadata.
            The internal entry is the DirectoryMetadataImpl object.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Directories.NamespaceDoc">
             <summary>
             <para>The <b>ININ.IceLib.Directories</b> namespace contains classes for accessing 
             Interaction Center directories.</para>
             <para>
             The namespace is organized around tasks one would typically want to perform, such as:
             </para>
             <para>
             <list type="number">
             <item>Retrieving and managing the list of directories</item>
             <item>Retrieving and managing the entries within a specific directory</item>
             </list>
             </para>
             <para>
             <B>Retrieving and managing the list of directories</B>
             </para>
             <para>
             Use the <see cref="T:ININ.IceLib.Directories.DirectoryConfiguration"/> class to retrieve and manage a list of available directories, and to watch for changes to that list.
             Calling <see cref="M:ININ.IceLib.Directories.DirectoryConfiguration.GetList"/> or <see cref="M:ININ.IceLib.Directories.DirectoryConfiguration.GetEntry(System.String)"/> 
             on a <see cref="T:ININ.IceLib.Directories.DirectoryConfiguration"/> instance will retrieve one or more <see cref="T:ININ.IceLib.Directories.DirectoryMetadata"/> elements,
             each one representing a specific directory, workgroup, speed dial list, etc.  A <see cref="T:ININ.IceLib.Directories.DirectoryMetadata"/> instance describes everything there
             is to know about a particular directory.  It is also used to create a <see cref="T:ININ.IceLib.Directories.ContactDirectory"/> which in turn is used to retrieve the entries within the specific directory.
             </para>
             <para>
             <br/>
             <B>Retrieving and managing the entries within a specific directory</B>
             </para>
             <para>
             To retrieve a list of entries within a directory, start by determining the <see cref="T:ININ.IceLib.Directories.DirectoryMetadata"/>
             that describes the directory you are interested in.  Construct a <see cref="T:ININ.IceLib.Directories.ContactDirectory"/> instance
             using this metadata, call <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatching"/> to start the watch 
             and then call <see cref="M:ININ.IceLib.Directories.ContactDirectory.GetList"/> or 
             <see cref="M:ININ.IceLib.Directories.ContactDirectory.GetEntry(System.String)"/> to return one or more <see cref="T:ININ.IceLib.Directories.ContactEntry"/> elements.
             Each returned <see cref="T:ININ.IceLib.Directories.ContactEntry"/> instance represents a particular entry in the directory.
             </para>
             <para>    
             If you are dealing with <B>large directories</B>, it is advised that you using the paged view interface. 
             The paged view interface 
             requires setting up a <see cref="T:ININ.IceLib.Directories.ContactDirectoryWatchSettings"/> instance
             that allows you to set a filter, sort order, start position and number of items to retrieve.
             The initial paged watched view is established by supplying an instance of <see cref="T:ININ.IceLib.Directories.ContactDirectoryWatchSettings"/>
             to <see cref="M:ININ.IceLib.Directories.ContactDirectory.StartWatching(ININ.IceLib.Directories.ContactDirectoryWatchSettings)"/>.
             Once the watch is established you can page back or forth by making a call to
             <see cref="M:ININ.IceLib.Directories.ContactDirectory.ChangeWatched(ININ.IceLib.Directories.ContactDirectoryWatchSettings)"/>.
             </para>
             <para>
             <br/>
             <B>Synchronous Example</B>
             </para>
             <para>The following is an example of synchronously retrieving a list of all available directories and 
             displaying the first and last name of each user in each directory.<br/><br/></para>
             <note>Using these classes in a synchronous manner is not recommended for client applications since the main thread will be blocked. 
             It is shown here for a brief example. <I>It is recommended to only use the synchronous methods if it is applicable to your application scenario (e.g. ASP.NET) or your application is
             making synchronous calls within a background thread.</I></note>
             <para>
             <code lang="C#">
             static void PrintAllDirectories( ININ.IceLib.Connection.Session session )
             {
                 DirectoriesManager dirManager = DirectoriesManager.GetInstance(session);
                 DirectoryConfiguration dirConfig = new DirectoryConfiguration(dirManager);
            
                 dirConfig.StartWatching();
                 ReadOnlyCollection&lt;DirectoryMetadata&gt; metaData = dirConfig.GetList();
                
                 foreach( DirectoryMetadata dirMetadata in metaData ) 
                 {
                     System.Console.Out.WriteLine("====== {0} Entries ======", dirMetadata.DisplayName);
                
                     ContactDirectory contactDir = new ContactDirectory(dirMetadata);
                     contactDir.StartWatching();
            
                     ReadOnlyCollection&lt;ContactEntry&gt; contactEntries = contactDir.GetList();
                     foreach( ContactEntry entry in contactEntries ) 
                     {
                         System.Console.Out.WriteLine("{0}, {1}", entry.LastName, entry.FirstName);
                     }
                 }
             }    
             </code>
             </para>
             </summary>
             <doccompleted/>
        </member>
        <member name="T:ININ.IceLib.Directories.Properties.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Directories.Properties.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Directories.Properties.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Directories.Properties.Strings.ContactEntryFirstLastNameConcatenation">
            <summary>
              Looks up a localized string similar to {0}, {1}.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Directories.Properties.Strings.CountMustBeGreaterThanZero">
            <summary>
              Looks up a localized string similar to Count must be greater than zero..
            </summary>
        </member>
        <member name="P:ININ.IceLib.Directories.Properties.Strings.DirectoryCannotBeDeleted">
            <summary>
              Looks up a localized string similar to This kind of directory cannot be deleted. Only tracker or speed dial directories can be deleted..
            </summary>
        </member>
        <member name="P:ININ.IceLib.Directories.Properties.Strings.DirectoryNameIsEmpty">
            <summary>
              Looks up a localized string similar to The directory name is empty. This operation requires a valid non-empty directory name..
            </summary>
        </member>
        <member name="P:ININ.IceLib.Directories.Properties.Strings.EntryIdIsEmpty">
            <summary>
              Looks up a localized string similar to The entry identifier is empty. This operation requires a valid entry identifier..
            </summary>
        </member>
        <member name="P:ININ.IceLib.Directories.Properties.Strings.EntryIdNotEmpty">
            <summary>
              Looks up a localized string similar to The entry identifier cannot be set for this operation..
            </summary>
        </member>
        <member name="P:ININ.IceLib.Directories.Properties.Strings.FilteredDirectoryTimeout">
            <summary>
              Looks up a localized string similar to The request to get filtered contact directory entries timed out..
            </summary>
        </member>
        <member name="P:ININ.IceLib.Directories.Properties.Strings.ICServerIsEmpty">
            <summary>
              Looks up a localized string similar to The specified ICServer is empty. This operation requires an ICServer name..
            </summary>
        </member>
        <member name="P:ININ.IceLib.Directories.Properties.Strings.IndexIsLessThanZero">
            <summary>
              Looks up a localized string similar to Index is less than zero..
            </summary>
        </member>
        <member name="P:ININ.IceLib.Directories.Properties.Strings.MetadataIdIsEmpty">
            <summary>
              Looks up a localized string similar to The directory metadata id is empty. This operation requires a valid directory metadata id..
            </summary>
        </member>
        <member name="P:ININ.IceLib.Directories.Properties.Strings.NewCountShouldBeGreaterThanZero">
            <summary>
              Looks up a localized string similar to New count should be greater than zero..
            </summary>
        </member>
        <member name="P:ININ.IceLib.Directories.Properties.Strings.UserIdIsEmpty">
            <summary>
              Looks up a localized string similar to The specified UserId is empty. This operation requires a UserId..
            </summary>
        </member>
    </members>
</doc>
